!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Ctags	k,kind	/kind definitions/
!_TAG_KIND_DESCRIPTION!Ctags	l,langdef	/language definitions/
!_TAG_KIND_DESCRIPTION!D	M,module	/modules/
!_TAG_KIND_DESCRIPTION!D	T,template	/templates/
!_TAG_KIND_DESCRIPTION!D	V,version	/version statements/
!_TAG_KIND_DESCRIPTION!D	X,mixin	/mixins/
!_TAG_KIND_DESCRIPTION!D	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!D	c,class	/classes/
!_TAG_KIND_DESCRIPTION!D	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!D	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!D	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!D	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!D	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!D	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!D	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!D	u,union	/union names/
!_TAG_KIND_DESCRIPTION!D	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!Ctags	0.0	/current.age/
!_TAG_PARSER_VERSION!D	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/maxwell/google-drive/linux/workspace/c++/utils/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20221218.0/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
ADJ_ESTERROR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define ADJ_ESTERROR	/;"	d
ADJ_FREQUENCY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define ADJ_FREQUENCY	/;"	d
ADJ_MAXERROR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define ADJ_MAXERROR	/;"	d
ADJ_MICRO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define ADJ_MICRO	/;"	d
ADJ_NANO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define ADJ_NANO	/;"	d
ADJ_OFFSET	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define ADJ_OFFSET	/;"	d
ADJ_OFFSET_SINGLESHOT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define ADJ_OFFSET_SINGLESHOT	/;"	d
ADJ_OFFSET_SS_READ	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define ADJ_OFFSET_SS_READ	/;"	d
ADJ_SETOFFSET	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define ADJ_SETOFFSET	/;"	d
ADJ_STATUS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define ADJ_STATUS	/;"	d
ADJ_TAI	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define ADJ_TAI	/;"	d
ADJ_TICK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define ADJ_TICK	/;"	d
ADJ_TIMECONST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define ADJ_TIMECONST	/;"	d
ATOMIC_BOOL_LOCK_FREE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_lockfree_defines.h	/^#define ATOMIC_BOOL_LOCK_FREE		__GCC_ATOMIC_BOOL_LOCK_FREE$/;"	d
ATOMIC_CHAR16_T_LOCK_FREE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_lockfree_defines.h	/^#define ATOMIC_CHAR16_T_LOCK_FREE	__GCC_ATOMIC_CHAR16_T_LOCK_FREE$/;"	d
ATOMIC_CHAR32_T_LOCK_FREE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_lockfree_defines.h	/^#define ATOMIC_CHAR32_T_LOCK_FREE	__GCC_ATOMIC_CHAR32_T_LOCK_FREE$/;"	d
ATOMIC_CHAR8_T_LOCK_FREE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_lockfree_defines.h	/^#define ATOMIC_CHAR8_T_LOCK_FREE	__GCC_ATOMIC_CHAR8_T_LOCK_FREE$/;"	d
ATOMIC_CHAR_LOCK_FREE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_lockfree_defines.h	/^#define ATOMIC_CHAR_LOCK_FREE		__GCC_ATOMIC_CHAR_LOCK_FREE$/;"	d
ATOMIC_FLAG_INIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^#define ATOMIC_FLAG_INIT /;"	d
ATOMIC_INT_LOCK_FREE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_lockfree_defines.h	/^#define ATOMIC_INT_LOCK_FREE		__GCC_ATOMIC_INT_LOCK_FREE$/;"	d
ATOMIC_LLONG_LOCK_FREE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_lockfree_defines.h	/^#define ATOMIC_LLONG_LOCK_FREE		__GCC_ATOMIC_LLONG_LOCK_FREE$/;"	d
ATOMIC_LONG_LOCK_FREE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_lockfree_defines.h	/^#define ATOMIC_LONG_LOCK_FREE		__GCC_ATOMIC_LONG_LOCK_FREE$/;"	d
ATOMIC_POINTER_LOCK_FREE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_lockfree_defines.h	/^#define ATOMIC_POINTER_LOCK_FREE	__GCC_ATOMIC_POINTER_LOCK_FREE$/;"	d
ATOMIC_SHORT_LOCK_FREE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_lockfree_defines.h	/^#define ATOMIC_SHORT_LOCK_FREE		__GCC_ATOMIC_SHORT_LOCK_FREE$/;"	d
ATOMIC_VAR_INIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^#define ATOMIC_VAR_INIT(/;"	d
ATOMIC_WCHAR_T_LOCK_FREE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_lockfree_defines.h	/^#define ATOMIC_WCHAR_T_LOCK_FREE	__GCC_ATOMIC_WCHAR_T_LOCK_FREE$/;"	d
BIG_ENDIAN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^# define BIG_ENDIAN	__BIG_ENDIAN$/;"	d
BUFSIZ	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define BUFSIZ /;"	d
BYTE_ORDER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^# define BYTE_ORDER	__BYTE_ORDER$/;"	d
Base	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@sketch_singleton.c++	/^class Base$/;"	c	file:
Base	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@smart_ptr_polymorphism.c++	/^class Base$/;"	c	file:
Base	tests/adhoc/sketch_singleton.c++	/^class Base$/;"	c	file:
Base	tests/adhoc/smart_ptr_polymorphism.c++	/^class Base$/;"	c	file:
CLK_TCK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time.h	/^# define CLK_TCK ((__clock_t) __sysconf (2))	\/* 2 is _SC_CLK_TCK /;"	d
CLOCKS_PER_SEC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time.h	/^#define CLOCKS_PER_SEC /;"	d
CLOCK_BOOTTIME	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time.h	/^# define CLOCK_BOOTTIME	/;"	d
CLOCK_BOOTTIME_ALARM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time.h	/^# define CLOCK_BOOTTIME_ALARM	/;"	d
CLOCK_MONOTONIC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time.h	/^# define CLOCK_MONOTONIC	/;"	d
CLOCK_MONOTONIC_COARSE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time.h	/^# define CLOCK_MONOTONIC_COARSE	/;"	d
CLOCK_MONOTONIC_RAW	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time.h	/^# define CLOCK_MONOTONIC_RAW	/;"	d
CLOCK_PROCESS_CPUTIME_ID	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time.h	/^# define CLOCK_PROCESS_CPUTIME_ID	/;"	d
CLOCK_REALTIME	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time.h	/^# define CLOCK_REALTIME	/;"	d
CLOCK_REALTIME_ALARM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time.h	/^# define CLOCK_REALTIME_ALARM	/;"	d
CLOCK_REALTIME_COARSE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time.h	/^# define CLOCK_REALTIME_COARSE	/;"	d
CLOCK_TAI	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time.h	/^# define CLOCK_TAI	/;"	d
CLOCK_THREAD_CPUTIME_ID	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time.h	/^# define CLOCK_THREAD_CPUTIME_ID	/;"	d
CLONE_CHILD_CLEARTID	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_CHILD_CLEARTID /;"	d
CLONE_CHILD_SETTID	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_CHILD_SETTID /;"	d
CLONE_DETACHED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_DETACHED /;"	d
CLONE_FILES	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_FILES /;"	d
CLONE_FS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_FS /;"	d
CLONE_IO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_IO	/;"	d
CLONE_NEWCGROUP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_NEWCGROUP /;"	d
CLONE_NEWIPC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_NEWIPC	/;"	d
CLONE_NEWNET	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_NEWNET	/;"	d
CLONE_NEWNS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_NEWNS /;"	d
CLONE_NEWPID	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_NEWPID	/;"	d
CLONE_NEWTIME	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^#define CLONE_NEWTIME	/;"	d
CLONE_NEWUSER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_NEWUSER	/;"	d
CLONE_NEWUTS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_NEWUTS	/;"	d
CLONE_PARENT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_PARENT /;"	d
CLONE_PARENT_SETTID	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_PARENT_SETTID /;"	d
CLONE_PIDFD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_PIDFD /;"	d
CLONE_PTRACE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_PTRACE /;"	d
CLONE_SETTLS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_SETTLS /;"	d
CLONE_SIGHAND	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_SIGHAND /;"	d
CLONE_SYSVSEM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_SYSVSEM /;"	d
CLONE_THREAD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_THREAD /;"	d
CLONE_UNTRACED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_UNTRACED /;"	d
CLONE_VFORK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_VFORK /;"	d
CLONE_VM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CLONE_VM /;"	d
CPU_ALLOC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_ALLOC(count) __CPU_ALLOC /;"	d
CPU_ALLOC_SIZE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_ALLOC_SIZE(count) __CPU_ALLOC_SIZE /;"	d
CPU_AND	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_AND(/;"	d
CPU_AND_S	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_AND_S(/;"	d
CPU_CLR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_CLR(cpu, cpusetp)	 __CPU_CLR_/;"	d
CPU_CLR_S	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_CLR_S(cpu, setsize, cpusetp)   __CPU_CLR_S /;"	d
CPU_COUNT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_COUNT(cpusetp)	 __CPU_COUNT_/;"	d
CPU_COUNT_S	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_COUNT_S(setsize, cpusetp)	    __CPU_COUNT_S /;"	d
CPU_EQUAL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_EQUAL(/;"	d
CPU_EQUAL_S	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_EQUAL_S(/;"	d
CPU_FREE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_FREE(cpuset) __CPU_FREE /;"	d
CPU_ISSET	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_ISSET(cpu, cpusetp) __CPU_ISSET_/;"	d
CPU_ISSET_S	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_ISSET_S(cpu, setsize, cpusetp) __CPU_ISSET_S /;"	d
CPU_OR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_OR(/;"	d
CPU_OR_S	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_OR_S(/;"	d
CPU_SET	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_SET(cpu, cpusetp)	 __CPU_SET_/;"	d
CPU_SETSIZE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_SETSIZE __CPU_SETSIZE$/;"	d
CPU_SET_S	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_SET_S(cpu, setsize, cpusetp)   __CPU_SET_S /;"	d
CPU_XOR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_XOR(/;"	d
CPU_XOR_S	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_XOR_S(/;"	d
CPU_ZERO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_ZERO(cpusetp)	 __CPU_ZERO_/;"	d
CPU_ZERO_S	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define CPU_ZERO_S(setsize, cpusetp)	    __CPU_ZERO_S /;"	d
CSIGNAL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define CSIGNAL /;"	d
DEFAULT_CTC_DTC	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/include@sak@common.hpp	/^#define DEFAULT_CTC_DTC(/;"	d
DEFAULT_CTC_DTC	include/sak/common.hpp	/^#define DEFAULT_CTC_DTC(/;"	d
Derived	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@sketch_singleton.c++	/^class Derived : public Base$/;"	c	file:
Derived	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@smart_ptr_polymorphism.c++	/^class Derived : public Base$/;"	c	file:
Derived	tests/adhoc/sketch_singleton.c++	/^class Derived : public Base$/;"	c	file:
Derived	tests/adhoc/smart_ptr_polymorphism.c++	/^class Derived : public Base$/;"	c	file:
E2BIG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	E2BIG	/;"	d
EACCES	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EACCES	/;"	d
EADDRINUSE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EADDRINUSE	/;"	d
EADDRNOTAVAIL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EADDRNOTAVAIL	/;"	d
EADV	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EADV	/;"	d
EAFNOSUPPORT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EAFNOSUPPORT	/;"	d
EAGAIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EAGAIN	/;"	d
EALREADY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EALREADY	/;"	d
EBADE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EBADE	/;"	d
EBADF	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EBADF	/;"	d
EBADFD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EBADFD	/;"	d
EBADMSG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EBADMSG	/;"	d
EBADR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EBADR	/;"	d
EBADRQC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EBADRQC	/;"	d
EBADSLT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EBADSLT	/;"	d
EBFONT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EBFONT	/;"	d
EBUSY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EBUSY	/;"	d
ECANCELED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ECANCELED	/;"	d
ECANCELED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@errno.h	/^#  define ECANCELED	/;"	d
ECHILD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	ECHILD	/;"	d
ECHRNG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ECHRNG	/;"	d
ECMAScript	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      static constexpr flag_type ECMAScript = regex_constants::ECMAScript;$/;"	m	class:std::basic_regex	typeref:typename:flag_type
ECMAScript	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    basic_regex<_Ch, _Tr>::ECMAScript;$/;"	m	class:std::basic_regex<_Ch, _Tr>	typeref:typename:regex_constants::syntax_option_type
ECMAScript	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr syntax_option_type ECMAScript = _S_ECMAScript;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE syntax_option_type
ECOMM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ECOMM	/;"	d
ECONNABORTED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ECONNABORTED	/;"	d
ECONNREFUSED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ECONNREFUSED	/;"	d
ECONNRESET	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ECONNRESET	/;"	d
EDEADLK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EDEADLK	/;"	d
EDEADLOCK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EDEADLOCK	/;"	d
EDESTADDRREQ	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EDESTADDRREQ	/;"	d
EDOM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EDOM	/;"	d
EDOTDOT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EDOTDOT	/;"	d
EDQUOT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EDQUOT	/;"	d
EEXIST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EEXIST	/;"	d
EFAULT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EFAULT	/;"	d
EFBIG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EFBIG	/;"	d
EHOSTDOWN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EHOSTDOWN	/;"	d
EHOSTUNREACH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EHOSTUNREACH	/;"	d
EHWPOISON	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define EHWPOISON	/;"	d
EHWPOISON	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@errno.h	/^#  define EHWPOISON	/;"	d
EIDRM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EIDRM	/;"	d
EILSEQ	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EILSEQ	/;"	d
EINPROGRESS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EINPROGRESS	/;"	d
EINTR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EINTR	/;"	d
EINVAL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EINVAL	/;"	d
EIO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EIO	/;"	d
EISCONN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EISCONN	/;"	d
EISDIR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EISDIR	/;"	d
EISNAM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EISNAM	/;"	d
EKEYEXPIRED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EKEYEXPIRED	/;"	d
EKEYREJECTED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EKEYREJECTED	/;"	d
EKEYREVOKED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EKEYREVOKED	/;"	d
EL2HLT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EL2HLT	/;"	d
EL2NSYNC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EL2NSYNC	/;"	d
EL3HLT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EL3HLT	/;"	d
EL3RST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EL3RST	/;"	d
ELIBACC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ELIBACC	/;"	d
ELIBBAD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ELIBBAD	/;"	d
ELIBEXEC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ELIBEXEC	/;"	d
ELIBMAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ELIBMAX	/;"	d
ELIBSCN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ELIBSCN	/;"	d
ELNRNG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ELNRNG	/;"	d
ELOOP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ELOOP	/;"	d
EMEDIUMTYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EMEDIUMTYPE	/;"	d
EMFILE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EMFILE	/;"	d
EMLINK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EMLINK	/;"	d
EMSGSIZE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EMSGSIZE	/;"	d
EMULTIHOP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EMULTIHOP	/;"	d
ENABLE_INSTANCE_COUNTER	include/sak/debug/instance_counter/instance_counter.hpp	/^#define ENABLE_INSTANCE_COUNTER	/;"	d
ENAMETOOLONG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENAMETOOLONG	/;"	d
ENAVAIL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENAVAIL	/;"	d
ENETDOWN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENETDOWN	/;"	d
ENETRESET	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENETRESET	/;"	d
ENETUNREACH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENETUNREACH	/;"	d
ENFILE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	ENFILE	/;"	d
ENOANO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOANO	/;"	d
ENOBUFS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOBUFS	/;"	d
ENOCSI	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOCSI	/;"	d
ENODATA	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENODATA	/;"	d
ENODEV	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	ENODEV	/;"	d
ENOENT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	ENOENT	/;"	d
ENOEXEC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	ENOEXEC	/;"	d
ENOKEY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOKEY	/;"	d
ENOLCK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOLCK	/;"	d
ENOLINK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOLINK	/;"	d
ENOMEDIUM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOMEDIUM	/;"	d
ENOMEM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	ENOMEM	/;"	d
ENOMSG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOMSG	/;"	d
ENONET	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENONET	/;"	d
ENOPKG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOPKG	/;"	d
ENOPROTOOPT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOPROTOOPT	/;"	d
ENOSPC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	ENOSPC	/;"	d
ENOSR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOSR	/;"	d
ENOSTR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOSTR	/;"	d
ENOSYS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOSYS	/;"	d
ENOTBLK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	ENOTBLK	/;"	d
ENOTCONN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOTCONN	/;"	d
ENOTDIR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	ENOTDIR	/;"	d
ENOTEMPTY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOTEMPTY	/;"	d
ENOTNAM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOTNAM	/;"	d
ENOTRECOVERABLE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOTRECOVERABLE	/;"	d
ENOTRECOVERABLE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@errno.h	/^#  define ENOTRECOVERABLE	/;"	d
ENOTSOCK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOTSOCK	/;"	d
ENOTSUP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@errno.h	/^#  define ENOTSUP	/;"	d
ENOTTY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	ENOTTY	/;"	d
ENOTUNIQ	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ENOTUNIQ	/;"	d
ENXIO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	ENXIO	/;"	d
EOF	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define EOF /;"	d
EOPNOTSUPP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EOPNOTSUPP	/;"	d
EOVERFLOW	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EOVERFLOW	/;"	d
EOWNERDEAD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EOWNERDEAD	/;"	d
EOWNERDEAD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@errno.h	/^#  define EOWNERDEAD	/;"	d
EPERM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EPERM	/;"	d
EPFNOSUPPORT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EPFNOSUPPORT	/;"	d
EPIPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EPIPE	/;"	d
EPROTO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EPROTO	/;"	d
EPROTONOSUPPORT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EPROTONOSUPPORT	/;"	d
EPROTOTYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EPROTOTYPE	/;"	d
ERANGE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	ERANGE	/;"	d
EREMCHG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EREMCHG	/;"	d
EREMOTE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EREMOTE	/;"	d
EREMOTEIO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EREMOTEIO	/;"	d
ERESTART	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ERESTART	/;"	d
ERFKILL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define ERFKILL	/;"	d
ERFKILL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@errno.h	/^#  define ERFKILL	/;"	d
EROFS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EROFS	/;"	d
ESHUTDOWN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ESHUTDOWN	/;"	d
ESOCKTNOSUPPORT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ESOCKTNOSUPPORT	/;"	d
ESPIPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	ESPIPE	/;"	d
ESRCH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	ESRCH	/;"	d
ESRMNT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ESRMNT	/;"	d
ESTALE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ESTALE	/;"	d
ESTRPIPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ESTRPIPE	/;"	d
ETIME	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ETIME	/;"	d
ETIMEDOUT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ETIMEDOUT	/;"	d
ETOOMANYREFS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	ETOOMANYREFS	/;"	d
ETXTBSY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	ETXTBSY	/;"	d
EUCLEAN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EUCLEAN	/;"	d
EUNATCH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EUNATCH	/;"	d
EUSERS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EUSERS	/;"	d
EWOULDBLOCK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EWOULDBLOCK	/;"	d
EXDEV	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define	EXDEV	/;"	d
EXFULL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define	EXFULL	/;"	d
EXIT_FAILURE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#define	EXIT_FAILURE	/;"	d
EXIT_SUCCESS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#define	EXIT_SUCCESS	/;"	d
FD_CLR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^#define	FD_CLR(fd, fdsetp)	__FD_CLR /;"	d
FD_ISSET	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^#define	FD_ISSET(fd, fdsetp)	__FD_ISSET /;"	d
FD_SET	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^#define	FD_SET(fd, fdsetp)	__FD_SET /;"	d
FD_SETSIZE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^#define	FD_SETSIZE		__FD_SETSIZE$/;"	d
FD_ZERO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^#define	FD_ZERO(fdsetp)		__FD_ZERO /;"	d
FILE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@FILE.h	/^typedef struct _IO_FILE FILE;$/;"	t	typeref:struct:_IO_FILE
FILENAME_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@stdio_lim.h	/^#define FILENAME_MAX /;"	d
FOPEN_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define FOPEN_MAX /;"	d
Fruit	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^	Fruit($/;"	f	class:Fruit	file:
Fruit	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^class Fruit$/;"	c	file:
Fruit	tests/sak/parser/test_serial_data.c++	/^	Fruit($/;"	f	class:Fruit	file:
Fruit	tests/sak/parser/test_serial_data.c++	/^class Fruit$/;"	c	file:
HPP098866387	include/sak/debug/debug.hpp	/^#define HPP098866387$/;"	d
HPP104047749	include/sak/stream/serial_data.hpp	/^#define HPP104047749$/;"	d
HPP104047749_BASIC_TYPE_CPP	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serial_data.c++	/^#define HPP104047749_BASIC_TYPE_CPP(/;"	d	file:
HPP104047749_BASIC_TYPE_CPP	source/sak/stream/serial_data.c++	/^#define HPP104047749_BASIC_TYPE_CPP(/;"	d	file:
HPP104047749_BASIC_TYPE_HPP	include/sak/stream/serial_data.hpp	/^#define HPP104047749_BASIC_TYPE_HPP(/;"	d
HPP104047749_CONSTRUCTOR_CPP	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serial_data.c++	/^#define HPP104047749_CONSTRUCTOR_CPP(/;"	d	file:
HPP104047749_CONSTRUCTOR_CPP	source/sak/stream/serial_data.c++	/^#define HPP104047749_CONSTRUCTOR_CPP(/;"	d	file:
HPP104047749_FULL_NAME	include/sak/stream/serial_data.hpp	/^#define HPP104047749_FULL_NAME	/;"	d
HPP104047749_PAIR_OPERATOR_HPP	include/sak/stream/serial_data.hpp	/^#define HPP104047749_PAIR_OPERATOR_HPP(/;"	d
HPP104047749_PATH	include/sak/stream/serial_data.hpp	/^#define HPP104047749_PATH	/;"	d
HPP104047749_UPDATE_CPP	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serial_data.c++	/^#define HPP104047749_UPDATE_CPP(/;"	d	file:
HPP104047749_UPDATE_CPP	source/sak/stream/serial_data.c++	/^#define HPP104047749_UPDATE_CPP(/;"	d	file:
HPP104047749_USING	include/sak/stream/serial_data.hpp	/^#define HPP104047749_USING	/;"	d
HPP196029231	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@adhoc.hpp	/^#define HPP196029231$/;"	d
HPP196029231	tests/adhoc/adhoc.hpp	/^#define HPP196029231$/;"	d
HPP196029231_MAIN	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@adhoc.hpp	/^#define HPP196029231_MAIN(/;"	d
HPP196029231_MAIN	tests/adhoc/adhoc.hpp	/^#define HPP196029231_MAIN(/;"	d
HPP196029231_TEST_CALLER	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@adhoc.c++	/^#define HPP196029231_TEST_CALLER(/;"	d	file:
HPP196029231_TEST_CALLER	tests/adhoc/adhoc.c++	/^#define HPP196029231_TEST_CALLER(/;"	d	file:
HPP247547271	include/sak/pattern/singleton_ptr.hpp	/^#define HPP247547271$/;"	d
HPP285838337	include/sak/stream/serializable.hpp	/^#define HPP285838337$/;"	d
HPP317391888	include/sak/debug/instance_counter/instance_counter.hpp	/^#define HPP317391888$/;"	d
HPP481529913	include/sak/debug/test_handler/test_handler.hpp	/^#define HPP481529913$/;"	d
HPP579274111	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/include@sak@common.hpp	/^#define HPP579274111$/;"	d
HPP579274111	include/sak/common.hpp	/^#define HPP579274111$/;"	d
HPP597281476	include/sak/string.hpp	/^#define HPP597281476$/;"	d
HPP597281476_INLINE_OPERATOR	include/sak/string.hpp	/^#define HPP597281476_INLINE_OPERATOR(/;"	d
HPP634201726	include/sak/stream/deserializable.hpp	/^#define HPP634201726$/;"	d
HPP678864635	include/sak/parser/token.hpp	/^#define HPP678864635$/;"	d
HPP767186102	include/sak/debug/instance_counter/local_instance_counter/local_instance_counter.hpp	/^#define HPP767186102$/;"	d
HPP964402082	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^#define HPP964402082$/;"	d
HPP968314564	include/sak/stream/streamable.hpp	/^#define HPP968314564$/;"	d
HPP970795291	include/sak/pattern/default_derived.hpp	/^#define HPP970795291$/;"	d
INT16_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT16_C(/;"	d
INT16_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define INT16_C(/;"	d
INT16_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT16_MAX	/;"	d
INT16_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define INT16_MAX /;"	d
INT16_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT16_MIN	/;"	d
INT16_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define INT16_MIN /;"	d
INT16_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT16_WIDTH /;"	d
INT16_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT16_WIDTH          UINT16_WIDTH$/;"	d
INT24_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define INT24_C(/;"	d
INT24_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define INT24_C(v) __int_c(v, __INT24_C_/;"	d
INT24_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT24_MAX /;"	d
INT24_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT24_MIN /;"	d
INT24_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT24_WIDTH          UINT24_WIDTH$/;"	d
INT32_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT32_C(/;"	d
INT32_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define INT32_C(/;"	d
INT32_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT32_MAX	/;"	d
INT32_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT32_MAX /;"	d
INT32_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT32_MIN	/;"	d
INT32_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT32_MIN /;"	d
INT32_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT32_WIDTH /;"	d
INT32_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT32_WIDTH          UINT32_WIDTH$/;"	d
INT40_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define INT40_C(/;"	d
INT40_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define INT40_C(v) __int_c(v, __INT40_C_/;"	d
INT40_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT40_MAX /;"	d
INT40_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT40_MIN /;"	d
INT40_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT40_WIDTH          UINT40_WIDTH$/;"	d
INT48_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define INT48_C(/;"	d
INT48_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define INT48_C(v) __int_c(v, __INT48_C_/;"	d
INT48_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT48_MAX /;"	d
INT48_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT48_MIN /;"	d
INT48_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define INT48_WIDTH          UINT48_WIDTH$/;"	d
INT56_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define INT56_C(/;"	d
INT56_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define INT56_C(v) __int_c(v, __INT56_C_/;"	d
INT56_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT56_MAX /;"	d
INT56_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT56_MIN /;"	d
INT56_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT56_WIDTH          UINT56_WIDTH$/;"	d
INT64_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define INT64_C(/;"	d
INT64_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define INT64_C(/;"	d
INT64_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT64_MAX	/;"	d
INT64_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT64_MAX /;"	d
INT64_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT64_MIN	/;"	d
INT64_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT64_MIN /;"	d
INT64_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT64_WIDTH /;"	d
INT64_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT64_WIDTH          UINT64_WIDTH$/;"	d
INT8_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT8_C(/;"	d
INT8_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define INT8_C(/;"	d
INT8_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT8_MAX	/;"	d
INT8_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT8_MAX /;"	d
INT8_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT8_MIN	/;"	d
INT8_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT8_MIN /;"	d
INT8_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT8_WIDTH /;"	d
INT8_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT8_WIDTH          UINT8_WIDTH$/;"	d
INTMAX_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define INTMAX_C(/;"	d
INTMAX_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define  INTMAX_C(v) __int_c(v,  __INTMAX_C_/;"	d
INTMAX_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INTMAX_MAX	/;"	d
INTMAX_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define  INTMAX_MAX   __INTMAX_MAX_/;"	d
INTMAX_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INTMAX_MIN	/;"	d
INTMAX_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define  INTMAX_MIN /;"	d
INTMAX_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INTMAX_WIDTH /;"	d
INTMAX_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define INTMAX_WIDTH __INTMAX_WIDTH_/;"	d
INTPTR_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define INTPTR_MAX	/;"	d
INTPTR_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define  INTPTR_MAX    __INTPTR_MAX_/;"	d
INTPTR_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define INTPTR_MIN	/;"	d
INTPTR_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define  INTPTR_MIN /;"	d
INTPTR_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INTPTR_WIDTH /;"	d
INTPTR_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define INTPTR_WIDTH  __INTPTR_WIDTH_/;"	d
INT_FAST16_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define INT_FAST16_MAX	/;"	d
INT_FAST16_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST16_MAX /;"	d
INT_FAST16_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define INT_FAST16_MIN	/;"	d
INT_FAST16_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST16_MIN /;"	d
INT_FAST16_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_FAST16_WIDTH /;"	d
INT_FAST16_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST16_WIDTH   UINT_FAST16_WIDTH$/;"	d
INT_FAST24_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST24_MAX /;"	d
INT_FAST24_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST24_MIN /;"	d
INT_FAST24_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST24_WIDTH     UINT_FAST24_WIDTH$/;"	d
INT_FAST32_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define INT_FAST32_MAX	/;"	d
INT_FAST32_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST32_MAX /;"	d
INT_FAST32_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define INT_FAST32_MIN	/;"	d
INT_FAST32_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST32_MIN /;"	d
INT_FAST32_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_FAST32_WIDTH /;"	d
INT_FAST32_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST32_WIDTH   UINT_FAST32_WIDTH$/;"	d
INT_FAST40_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST40_MAX /;"	d
INT_FAST40_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST40_MIN /;"	d
INT_FAST40_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST40_WIDTH     UINT_FAST40_WIDTH$/;"	d
INT_FAST48_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST48_MAX /;"	d
INT_FAST48_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST48_MIN /;"	d
INT_FAST48_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define INT_FAST48_WIDTH     UINT_FAST48_WIDTH$/;"	d
INT_FAST56_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST56_MAX /;"	d
INT_FAST56_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST56_MIN /;"	d
INT_FAST56_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST56_WIDTH     UINT_FAST56_WIDTH$/;"	d
INT_FAST64_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_FAST64_MAX	/;"	d
INT_FAST64_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST64_MAX /;"	d
INT_FAST64_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_FAST64_MIN	/;"	d
INT_FAST64_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST64_MIN /;"	d
INT_FAST64_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_FAST64_WIDTH /;"	d
INT_FAST64_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST64_WIDTH   UINT_FAST64_WIDTH$/;"	d
INT_FAST8_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_FAST8_MAX	/;"	d
INT_FAST8_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST8_MAX /;"	d
INT_FAST8_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_FAST8_MIN	/;"	d
INT_FAST8_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST8_MIN /;"	d
INT_FAST8_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_FAST8_WIDTH /;"	d
INT_FAST8_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_FAST8_WIDTH   UINT_FAST8_WIDTH$/;"	d
INT_LEAST16_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_LEAST16_MAX	/;"	d
INT_LEAST16_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST16_MAX   __INT_LEAST16_MAX$/;"	d
INT_LEAST16_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_LEAST16_MIN	/;"	d
INT_LEAST16_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST16_MIN   __INT_LEAST16_MIN$/;"	d
INT_LEAST16_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_LEAST16_WIDTH /;"	d
INT_LEAST16_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST16_WIDTH  UINT_LEAST16_WIDTH$/;"	d
INT_LEAST24_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST24_MAX /;"	d
INT_LEAST24_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST24_MIN /;"	d
INT_LEAST24_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST24_WIDTH    UINT_LEAST24_WIDTH$/;"	d
INT_LEAST32_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_LEAST32_MAX	/;"	d
INT_LEAST32_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST32_MAX   __INT_LEAST32_MAX$/;"	d
INT_LEAST32_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_LEAST32_MIN	/;"	d
INT_LEAST32_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST32_MIN   __INT_LEAST32_MIN$/;"	d
INT_LEAST32_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_LEAST32_WIDTH /;"	d
INT_LEAST32_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST32_WIDTH  UINT_LEAST32_WIDTH$/;"	d
INT_LEAST40_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST40_MAX /;"	d
INT_LEAST40_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST40_MIN /;"	d
INT_LEAST40_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST40_WIDTH    UINT_LEAST40_WIDTH$/;"	d
INT_LEAST48_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST48_MAX /;"	d
INT_LEAST48_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST48_MIN /;"	d
INT_LEAST48_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define INT_LEAST48_WIDTH    UINT_LEAST48_WIDTH$/;"	d
INT_LEAST56_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST56_MAX /;"	d
INT_LEAST56_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST56_MIN /;"	d
INT_LEAST56_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST56_WIDTH    UINT_LEAST56_WIDTH$/;"	d
INT_LEAST64_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_LEAST64_MAX	/;"	d
INT_LEAST64_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST64_MAX   __INT_LEAST64_MAX$/;"	d
INT_LEAST64_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_LEAST64_MIN	/;"	d
INT_LEAST64_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST64_MIN   __INT_LEAST64_MIN$/;"	d
INT_LEAST64_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_LEAST64_WIDTH /;"	d
INT_LEAST64_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST64_WIDTH  UINT_LEAST64_WIDTH$/;"	d
INT_LEAST8_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_LEAST8_MAX	/;"	d
INT_LEAST8_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST8_MAX   __INT_LEAST8_MAX$/;"	d
INT_LEAST8_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_LEAST8_MIN	/;"	d
INT_LEAST8_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST8_MIN   __INT_LEAST8_MIN$/;"	d
INT_LEAST8_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define INT_LEAST8_WIDTH /;"	d
INT_LEAST8_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define INT_LEAST8_WIDTH  UINT_LEAST8_WIDTH$/;"	d
Init	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    class Init$/;"	c	class:std::ios_base
LC_ADDRESS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^#define LC_ADDRESS	  __LC_ADDRESS$/;"	d
LC_ADDRESS_MASK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^# define LC_ADDRESS_MASK	/;"	d
LC_ALL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^#define	LC_ALL		  __LC_ALL$/;"	d
LC_ALL_MASK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^# define LC_ALL_MASK	/;"	d
LC_COLLATE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^#define LC_COLLATE        __LC_COLLATE$/;"	d
LC_COLLATE_MASK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^# define LC_COLLATE_MASK	/;"	d
LC_CTYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^#define LC_CTYPE          __LC_CTYPE$/;"	d
LC_CTYPE_MASK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^# define LC_CTYPE_MASK	/;"	d
LC_GLOBAL_LOCALE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^# define LC_GLOBAL_LOCALE	/;"	d
LC_IDENTIFICATION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^#define LC_IDENTIFICATION __LC_IDENTIFICATION$/;"	d
LC_IDENTIFICATION_MASK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^# define LC_IDENTIFICATION_MASK	/;"	d
LC_MEASUREMENT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^#define LC_MEASUREMENT	  __LC_MEASUREMENT$/;"	d
LC_MEASUREMENT_MASK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^# define LC_MEASUREMENT_MASK	/;"	d
LC_MESSAGES	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^#define LC_MESSAGES       __LC_MESSAGES$/;"	d
LC_MESSAGES_MASK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^# define LC_MESSAGES_MASK	/;"	d
LC_MONETARY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^#define LC_MONETARY       __LC_MONETARY$/;"	d
LC_MONETARY_MASK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^# define LC_MONETARY_MASK	/;"	d
LC_NAME	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^#define LC_NAME		  __LC_NAME$/;"	d
LC_NAME_MASK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^# define LC_NAME_MASK	/;"	d
LC_NUMERIC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^#define LC_NUMERIC        __LC_NUMERIC$/;"	d
LC_NUMERIC_MASK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^# define LC_NUMERIC_MASK	/;"	d
LC_PAPER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^#define LC_PAPER	  __LC_PAPER$/;"	d
LC_PAPER_MASK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^# define LC_PAPER_MASK	/;"	d
LC_TELEPHONE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^#define LC_TELEPHONE	  __LC_TELEPHONE$/;"	d
LC_TELEPHONE_MASK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^# define LC_TELEPHONE_MASK	/;"	d
LC_TIME	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^#define LC_TIME           __LC_TIME$/;"	d
LC_TIME_MASK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^# define LC_TIME_MASK	/;"	d
LITTLE_ENDIAN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^# define LITTLE_ENDIAN	__LITTLE_ENDIAN$/;"	d
L_ctermid	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^# define L_ctermid /;"	d
L_cuserid	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#  define L_cuserid /;"	d
L_tmpnam	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define L_tmpnam /;"	d
MB_CUR_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#define	MB_CUR_MAX	/;"	d
MOD_CLKA	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define MOD_CLKA	/;"	d
MOD_CLKB	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define MOD_CLKB	/;"	d
MOD_ESTERROR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define MOD_ESTERROR	/;"	d
MOD_FREQUENCY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define MOD_FREQUENCY	/;"	d
MOD_MAXERROR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define MOD_MAXERROR	/;"	d
MOD_MICRO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define MOD_MICRO	/;"	d
MOD_NANO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define MOD_NANO	/;"	d
MOD_OFFSET	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define MOD_OFFSET	/;"	d
MOD_STATUS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define MOD_STATUS	/;"	d
MOD_TAI	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define MOD_TAI	/;"	d
MOD_TIMECONST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define MOD_TIMECONST	/;"	d
NFDBITS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^# define NFDBITS		__NFDBITS$/;"	d
NULL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^#    define NULL /;"	d
NULL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^#  define NULL /;"	d
NeedBase	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@smart_ptr_polymorphism.c++	/^	NeedBase( const shared_ptr< Base >& base = make_shared< Derived >( ) )$/;"	f	class:NeedBase	file:
NeedBase	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@smart_ptr_polymorphism.c++	/^class NeedBase$/;"	c	file:
NeedBase	tests/adhoc/smart_ptr_polymorphism.c++	/^	NeedBase( const shared_ptr< Base >& base = make_shared< Derived >( ) )$/;"	f	class:NeedBase	file:
NeedBase	tests/adhoc/smart_ptr_polymorphism.c++	/^class NeedBase$/;"	c	file:
PDP_ENDIAN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^# define PDP_ENDIAN	__PDP_ENDIAN$/;"	d
PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^# define PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP /;"	d
PTHREAD_ATTR_NO_SIGMASK_NP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_ATTR_NO_SIGMASK_NP /;"	d
PTHREAD_BARRIER_SERIAL_THREAD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^# define PTHREAD_BARRIER_SERIAL_THREAD /;"	d
PTHREAD_CANCELED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_CANCELED /;"	d
PTHREAD_CANCEL_ASYNCHRONOUS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_CANCEL_ASYNCHRONOUS$/;"	e	enum:__anon9201e7230a03
PTHREAD_CANCEL_ASYNCHRONOUS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_CANCEL_ASYNCHRONOUS	PTHREAD_CANCEL_ASYNCHRONOUS$/;"	d
PTHREAD_CANCEL_DEFERRED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_CANCEL_DEFERRED,$/;"	e	enum:__anon9201e7230a03
PTHREAD_CANCEL_DEFERRED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_CANCEL_DEFERRED	PTHREAD_CANCEL_DEFERRED$/;"	d
PTHREAD_CANCEL_DISABLE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_CANCEL_DISABLE$/;"	e	enum:__anon9201e7230903
PTHREAD_CANCEL_DISABLE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_CANCEL_DISABLE  PTHREAD_CANCEL_DISABLE$/;"	d
PTHREAD_CANCEL_ENABLE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_CANCEL_ENABLE,$/;"	e	enum:__anon9201e7230903
PTHREAD_CANCEL_ENABLE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_CANCEL_ENABLE   PTHREAD_CANCEL_ENABLE$/;"	d
PTHREAD_COND_INITIALIZER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_COND_INITIALIZER /;"	d
PTHREAD_CREATE_DETACHED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_CREATE_DETACHED$/;"	e	enum:__anon9201e7230103
PTHREAD_CREATE_DETACHED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_CREATE_DETACHED	PTHREAD_CREATE_DETACHED$/;"	d
PTHREAD_CREATE_JOINABLE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_CREATE_JOINABLE,$/;"	e	enum:__anon9201e7230103
PTHREAD_CREATE_JOINABLE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_CREATE_JOINABLE	PTHREAD_CREATE_JOINABLE$/;"	d
PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^# define PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP /;"	d
PTHREAD_EXPLICIT_SCHED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_EXPLICIT_SCHED$/;"	e	enum:__anon9201e7230603
PTHREAD_EXPLICIT_SCHED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_EXPLICIT_SCHED  PTHREAD_EXPLICIT_SCHED$/;"	d
PTHREAD_INHERIT_SCHED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_INHERIT_SCHED,$/;"	e	enum:__anon9201e7230603
PTHREAD_INHERIT_SCHED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_INHERIT_SCHED   PTHREAD_INHERIT_SCHED$/;"	d
PTHREAD_MUTEX_ADAPTIVE_NP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_MUTEX_ADAPTIVE_NP$/;"	e	enum:__anon9201e7230203
PTHREAD_MUTEX_DEFAULT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_MUTEX_DEFAULT = PTHREAD_MUTEX_NORMAL$/;"	e	enum:__anon9201e7230203
PTHREAD_MUTEX_ERRORCHECK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_MUTEX_ERRORCHECK = PTHREAD_MUTEX_ERRORCHECK_NP,$/;"	e	enum:__anon9201e7230203
PTHREAD_MUTEX_ERRORCHECK_NP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_MUTEX_ERRORCHECK_NP,$/;"	e	enum:__anon9201e7230203
PTHREAD_MUTEX_FAST_NP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  , PTHREAD_MUTEX_FAST_NP = PTHREAD_MUTEX_TIMED_NP$/;"	e	enum:__anon9201e7230203
PTHREAD_MUTEX_INITIALIZER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_MUTEX_INITIALIZER /;"	d
PTHREAD_MUTEX_NORMAL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_MUTEX_NORMAL = PTHREAD_MUTEX_TIMED_NP,$/;"	e	enum:__anon9201e7230203
PTHREAD_MUTEX_RECURSIVE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,$/;"	e	enum:__anon9201e7230203
PTHREAD_MUTEX_RECURSIVE_NP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_MUTEX_RECURSIVE_NP,$/;"	e	enum:__anon9201e7230203
PTHREAD_MUTEX_ROBUST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_MUTEX_ROBUST,$/;"	e	enum:__anon9201e7230303
PTHREAD_MUTEX_ROBUST_NP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_MUTEX_ROBUST_NP = PTHREAD_MUTEX_ROBUST$/;"	e	enum:__anon9201e7230303
PTHREAD_MUTEX_STALLED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_MUTEX_STALLED,$/;"	e	enum:__anon9201e7230303
PTHREAD_MUTEX_STALLED_NP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_MUTEX_STALLED_NP = PTHREAD_MUTEX_STALLED,$/;"	e	enum:__anon9201e7230303
PTHREAD_MUTEX_TIMED_NP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_MUTEX_TIMED_NP,$/;"	e	enum:__anon9201e7230203
PTHREAD_ONCE_INIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_ONCE_INIT /;"	d
PTHREAD_PRIO_INHERIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_PRIO_INHERIT,$/;"	e	enum:__anon9201e7230403
PTHREAD_PRIO_NONE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_PRIO_NONE,$/;"	e	enum:__anon9201e7230403
PTHREAD_PRIO_PROTECT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_PRIO_PROTECT$/;"	e	enum:__anon9201e7230403
PTHREAD_PROCESS_PRIVATE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_PROCESS_PRIVATE,$/;"	e	enum:__anon9201e7230803
PTHREAD_PROCESS_PRIVATE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_PROCESS_PRIVATE PTHREAD_PROCESS_PRIVATE$/;"	d
PTHREAD_PROCESS_SHARED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_PROCESS_SHARED$/;"	e	enum:__anon9201e7230803
PTHREAD_PROCESS_SHARED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_PROCESS_SHARED  PTHREAD_PROCESS_SHARED$/;"	d
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^# define PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP /;"	d
PTHREAD_RWLOCK_DEFAULT_NP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_RWLOCK_DEFAULT_NP = PTHREAD_RWLOCK_PREFER_READER_NP$/;"	e	enum:__anon9201e7230503
PTHREAD_RWLOCK_INITIALIZER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^# define PTHREAD_RWLOCK_INITIALIZER /;"	d
PTHREAD_RWLOCK_PREFER_READER_NP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_RWLOCK_PREFER_READER_NP,$/;"	e	enum:__anon9201e7230503
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,$/;"	e	enum:__anon9201e7230503
PTHREAD_RWLOCK_PREFER_WRITER_NP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_RWLOCK_PREFER_WRITER_NP,$/;"	e	enum:__anon9201e7230503
PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#  define PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP /;"	d
PTHREAD_SCOPE_PROCESS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_SCOPE_PROCESS$/;"	e	enum:__anon9201e7230703
PTHREAD_SCOPE_PROCESS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_SCOPE_PROCESS   PTHREAD_SCOPE_PROCESS$/;"	d
PTHREAD_SCOPE_SYSTEM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  PTHREAD_SCOPE_SYSTEM,$/;"	e	enum:__anon9201e7230703
PTHREAD_SCOPE_SYSTEM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define PTHREAD_SCOPE_SYSTEM    PTHREAD_SCOPE_SYSTEM$/;"	d
PTHREAD_STACK_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthread_stack_min-dynamic.h	/^#   define PTHREAD_STACK_MIN /;"	d
PTRDIFF_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#   define PTRDIFF_MAX	/;"	d
PTRDIFF_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define PTRDIFF_MAX	/;"	d
PTRDIFF_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define PTRDIFF_MAX   __PTRDIFF_MAX_/;"	d
PTRDIFF_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#   define PTRDIFF_MIN	/;"	d
PTRDIFF_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define PTRDIFF_MIN	/;"	d
PTRDIFF_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define PTRDIFF_MIN /;"	d
PTRDIFF_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define PTRDIFF_WIDTH /;"	d
PTRDIFF_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define PTRDIFF_WIDTH    __PTRDIFF_WIDTH_/;"	d
P_tmpdir	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^# define P_tmpdir	/;"	d
Product	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^	Product($/;"	f	class:Product	file:
Product	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^class Product$/;"	c	file:
Product	tests/sak/parser/test_serial_data.c++	/^	Product($/;"	f	class:Product	file:
Product	tests/sak/parser/test_serial_data.c++	/^class Product$/;"	c	file:
RAND_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#define	RAND_MAX	/;"	d
RENAME_EXCHANGE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^# define RENAME_EXCHANGE /;"	d
RENAME_NOREPLACE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^# define RENAME_NOREPLACE /;"	d
RENAME_WHITEOUT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^# define RENAME_WHITEOUT /;"	d
RSIZE_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define   RSIZE_MAX /;"	d
SAK_DECLARE_DEFAULT_DERIVED	include/sak/pattern/default_derived.hpp	/^#define SAK_DECLARE_DEFAULT_DERIVED(/;"	d
SAK_DECLARE_NAMESPACE_DEFAULT_DERIVED	include/sak/pattern/default_derived.hpp	/^#define SAK_DECLARE_NAMESPACE_DEFAULT_DERIVED(/;"	d
SAK_DEFAULT_DERIVED	include/sak/pattern/default_derived.hpp	/^#define SAK_DEFAULT_DERIVED(/;"	d
SAK_PRINT_EXEC	include/sak/debug/debug.hpp	/^#define SAK_PRINT_EXEC(/;"	d
SAK_TEST	include/sak/debug/test_handler/test_handler.hpp	/^#define SAK_TEST(/;"	d
SAK_USING_DEFAULT_DERIVED	include/sak/pattern/default_derived.hpp	/^#define SAK_USING_DEFAULT_DERIVED	/;"	d
SAK_USING_IOS	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/include@sak@common.hpp	/^#define SAK_USING_IOS	/;"	d
SAK_USING_IOS	include/sak/common.hpp	/^#define SAK_USING_IOS	/;"	d
SAK_USING_LINES	include/sak/string.hpp	/^#define SAK_USING_LINES	/;"	d
SAK_USING_STRING	include/sak/string.hpp	/^#define SAK_USING_STRING	/;"	d
SAK_USING_TEST_HANDLER	include/sak/debug/test_handler/test_handler.hpp	/^#define SAK_USING_TEST_HANDLER	/;"	d
SCHED_BATCH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define SCHED_BATCH	/;"	d
SCHED_DEADLINE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define SCHED_DEADLINE	/;"	d
SCHED_FIFO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^#define SCHED_FIFO	/;"	d
SCHED_IDLE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define SCHED_IDLE	/;"	d
SCHED_ISO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define SCHED_ISO	/;"	d
SCHED_OTHER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^#define SCHED_OTHER	/;"	d
SCHED_RESET_ON_FORK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^# define SCHED_RESET_ON_FORK	/;"	d
SCHED_RR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^#define SCHED_RR	/;"	d
SEEK_CUR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define SEEK_CUR	/;"	d
SEEK_DATA	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^# define SEEK_DATA	/;"	d
SEEK_END	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define SEEK_END	/;"	d
SEEK_HOLE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^# define SEEK_HOLE	/;"	d
SEEK_SET	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define SEEK_SET	/;"	d
SERIALDATA_BASE	include/sak/stream/serial_data.hpp	/^#define SERIALDATA_BASE(/;"	d
SERIALDATA_FRIEND	include/sak/stream/serial_data.hpp	/^#define SERIALDATA_FRIEND(/;"	d
SERIALDATA_ITEM	include/sak/stream/serial_data.hpp	/^#define SERIALDATA_ITEM(/;"	d
SERIALDATA_OPERATOR	include/sak/stream/serial_data.hpp	/^#define SERIALDATA_OPERATOR(/;"	d
SIG_ATOMIC_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define SIG_ATOMIC_MAX	/;"	d
SIG_ATOMIC_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define SIG_ATOMIC_MAX /;"	d
SIG_ATOMIC_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define SIG_ATOMIC_MIN	/;"	d
SIG_ATOMIC_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define SIG_ATOMIC_MIN /;"	d
SIG_ATOMIC_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define SIG_ATOMIC_WIDTH /;"	d
SIG_ATOMIC_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define SIG_ATOMIC_WIDTH __SIG_ATOMIC_WIDTH_/;"	d
SIZE_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#   define SIZE_MAX	/;"	d
SIZE_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define SIZE_MAX	/;"	d
SIZE_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define    SIZE_MAX      __SIZE_MAX_/;"	d
SIZE_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define SIZE_WIDTH /;"	d
SIZE_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define SIZE_WIDTH       __SIZE_WIDTH_/;"	d
STA_CLK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_CLK	/;"	d
STA_CLOCKERR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_CLOCKERR	/;"	d
STA_DEL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_DEL	/;"	d
STA_FLL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_FLL	/;"	d
STA_FREQHOLD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_FREQHOLD	/;"	d
STA_INS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_INS	/;"	d
STA_MODE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_MODE	/;"	d
STA_NANO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_NANO	/;"	d
STA_PLL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_PLL	/;"	d
STA_PPSERROR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_PPSERROR	/;"	d
STA_PPSFREQ	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_PPSFREQ	/;"	d
STA_PPSJITTER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_PPSJITTER	/;"	d
STA_PPSSIGNAL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_PPSSIGNAL	/;"	d
STA_PPSTIME	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_PPSTIME	/;"	d
STA_PPSWANDER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_PPSWANDER	/;"	d
STA_RONLY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_RONLY /;"	d
STA_UNSYNC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define STA_UNSYNC	/;"	d
Streamable	include/sak/stream/streamable.hpp	/^	Streamable( ) { };$/;"	f	class:sak::stream::Streamable
Streamable	include/sak/stream/streamable.hpp	/^class Streamable $/;"	c	namespace:sak::stream
TIMER_ABSTIME	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time.h	/^# define TIMER_ABSTIME	/;"	d
TIME_UTC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^# define TIME_UTC /;"	d
TMP_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define TMP_MAX /;"	d
UINT16_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT16_C(/;"	d
UINT16_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define UINT16_C(/;"	d
UINT16_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT16_MAX	/;"	d
UINT16_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define UINT16_MAX /;"	d
UINT16_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT16_WIDTH /;"	d
UINT16_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT16_WIDTH /;"	d
UINT24_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define UINT24_C(/;"	d
UINT24_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT24_MAX /;"	d
UINT24_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT24_WIDTH /;"	d
UINT32_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT32_C(/;"	d
UINT32_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define UINT32_C(/;"	d
UINT32_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT32_MAX	/;"	d
UINT32_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT32_MAX /;"	d
UINT32_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT32_WIDTH /;"	d
UINT32_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT32_WIDTH /;"	d
UINT40_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define UINT40_C(/;"	d
UINT40_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT40_MAX /;"	d
UINT40_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT40_WIDTH /;"	d
UINT48_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define UINT48_C(/;"	d
UINT48_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT48_MAX /;"	d
UINT48_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define UINT48_WIDTH /;"	d
UINT56_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define UINT56_C(/;"	d
UINT56_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT56_MAX /;"	d
UINT56_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT56_WIDTH /;"	d
UINT64_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define UINT64_C(/;"	d
UINT64_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define UINT64_C(/;"	d
UINT64_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT64_MAX	/;"	d
UINT64_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT64_MAX /;"	d
UINT64_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT64_WIDTH /;"	d
UINT64_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT64_WIDTH /;"	d
UINT8_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT8_C(/;"	d
UINT8_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define UINT8_C(/;"	d
UINT8_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT8_MAX	/;"	d
UINT8_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT8_MAX /;"	d
UINT8_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT8_WIDTH /;"	d
UINT8_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT8_WIDTH /;"	d
UINTMAX_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define UINTMAX_C(/;"	d
UINTMAX_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define UINTMAX_C(v) __int_c(v, __UINTMAX_C_/;"	d
UINTMAX_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINTMAX_MAX	/;"	d
UINTMAX_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define UINTMAX_MAX  __UINTMAX_MAX_/;"	d
UINTMAX_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINTMAX_WIDTH /;"	d
UINTMAX_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define UINTMAX_WIDTH __UINTMAX_WIDTH_/;"	d
UINTPTR_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define UINTPTR_MAX	/;"	d
UINTPTR_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define UINTPTR_MAX   __UINTPTR_MAX_/;"	d
UINTPTR_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINTPTR_WIDTH /;"	d
UINTPTR_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define UINTPTR_WIDTH __UINTPTR_WIDTH_/;"	d
UINT_FAST16_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define UINT_FAST16_MAX	/;"	d
UINT_FAST16_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_FAST16_MAX /;"	d
UINT_FAST16_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT_FAST16_WIDTH /;"	d
UINT_FAST16_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_FAST16_WIDTH /;"	d
UINT_FAST24_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_FAST24_MAX /;"	d
UINT_FAST24_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_FAST24_WIDTH /;"	d
UINT_FAST32_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define UINT_FAST32_MAX	/;"	d
UINT_FAST32_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_FAST32_MAX /;"	d
UINT_FAST32_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT_FAST32_WIDTH /;"	d
UINT_FAST32_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_FAST32_WIDTH /;"	d
UINT_FAST40_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_FAST40_MAX /;"	d
UINT_FAST40_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_FAST40_WIDTH /;"	d
UINT_FAST48_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_FAST48_MAX /;"	d
UINT_FAST48_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define UINT_FAST48_WIDTH /;"	d
UINT_FAST56_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_FAST56_MAX /;"	d
UINT_FAST56_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_FAST56_WIDTH /;"	d
UINT_FAST64_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT_FAST64_MAX	/;"	d
UINT_FAST64_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_FAST64_MAX /;"	d
UINT_FAST64_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT_FAST64_WIDTH /;"	d
UINT_FAST64_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_FAST64_WIDTH /;"	d
UINT_FAST8_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT_FAST8_MAX	/;"	d
UINT_FAST8_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_FAST8_MAX /;"	d
UINT_FAST8_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT_FAST8_WIDTH /;"	d
UINT_FAST8_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_FAST8_WIDTH /;"	d
UINT_LEAST16_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT_LEAST16_MAX	/;"	d
UINT_LEAST16_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_LEAST16_MAX __UINT_LEAST16_MAX$/;"	d
UINT_LEAST16_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT_LEAST16_WIDTH /;"	d
UINT_LEAST16_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_LEAST16_WIDTH __UINT_LEAST16_WIDTH$/;"	d
UINT_LEAST24_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_LEAST24_MAX /;"	d
UINT_LEAST24_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_LEAST24_WIDTH /;"	d
UINT_LEAST32_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT_LEAST32_MAX	/;"	d
UINT_LEAST32_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_LEAST32_MAX __UINT_LEAST32_MAX$/;"	d
UINT_LEAST32_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT_LEAST32_WIDTH /;"	d
UINT_LEAST32_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_LEAST32_WIDTH __UINT_LEAST32_WIDTH$/;"	d
UINT_LEAST40_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_LEAST40_MAX /;"	d
UINT_LEAST40_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_LEAST40_WIDTH /;"	d
UINT_LEAST48_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_LEAST48_MAX /;"	d
UINT_LEAST48_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define UINT_LEAST48_WIDTH /;"	d
UINT_LEAST56_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_LEAST56_MAX /;"	d
UINT_LEAST56_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_LEAST56_WIDTH /;"	d
UINT_LEAST64_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT_LEAST64_MAX	/;"	d
UINT_LEAST64_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_LEAST64_MAX __UINT_LEAST64_MAX$/;"	d
UINT_LEAST64_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT_LEAST64_WIDTH /;"	d
UINT_LEAST64_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_LEAST64_WIDTH __UINT_LEAST64_WIDTH$/;"	d
UINT_LEAST8_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT_LEAST8_MAX	/;"	d
UINT_LEAST8_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_LEAST8_MAX __UINT_LEAST8_MAX$/;"	d
UINT_LEAST8_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define UINT_LEAST8_WIDTH /;"	d
UINT_LEAST8_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define UINT_LEAST8_WIDTH __UINT_LEAST8_WIDTH$/;"	d
WCHAR_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define WCHAR_MAX		__WCHAR_MAX$/;"	d
WCHAR_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^# define WCHAR_MAX __WCHAR_MAX$/;"	d
WCHAR_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define WCHAR_MAX __WCHAR_MAX_/;"	d
WCHAR_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define WCHAR_MIN		__WCHAR_MIN$/;"	d
WCHAR_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^# define WCHAR_MIN __WCHAR_MIN$/;"	d
WCHAR_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define WCHAR_MIN /;"	d
WCHAR_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define WCHAR_WIDTH /;"	d
WCHAR_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define WCHAR_WIDTH      __WCHAR_WIDTH_/;"	d
WCONTINUED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitflags.h	/^# define WCONTINUED	/;"	d
WEOF	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^# define WEOF /;"	d
WEOF	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wctype.h	/^# define WEOF /;"	d
WEXITED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitflags.h	/^# define WEXITED	/;"	d
WEXITSTATUS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^# define WEXITSTATUS(status)	__WEXITSTATUS /;"	d
WIFCONTINUED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#  define WIFCONTINUED(status)	__WIFCONTINUED /;"	d
WIFEXITED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^# define WIFEXITED(status)	__WIFEXITED /;"	d
WIFSIGNALED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^# define WIFSIGNALED(status)	__WIFSIGNALED /;"	d
WIFSTOPPED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^# define WIFSTOPPED(status)	__WIFSTOPPED /;"	d
WINT_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define WINT_MAX	/;"	d
WINT_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define WINT_MAX /;"	d
WINT_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define WINT_MIN	/;"	d
WINT_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define WINT_MIN /;"	d
WINT_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^# define WINT_WIDTH /;"	d
WINT_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define WINT_WIDTH       __WINT_WIDTH_/;"	d
WNOHANG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitflags.h	/^#define	WNOHANG	/;"	d
WNOWAIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitflags.h	/^# define WNOWAIT	/;"	d
WSTOPPED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitflags.h	/^# define WSTOPPED	/;"	d
WSTOPSIG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^# define WSTOPSIG(status)	__WSTOPSIG /;"	d
WTERMSIG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^# define WTERMSIG(status)	__WTERMSIG /;"	d
WUNTRACED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitflags.h	/^#define	WUNTRACED	/;"	d
Weighed	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^	Weighed( float weight	=	0 )$/;"	f	class:Weighed	file:
Weighed	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^class Weighed$/;"	c	file:
Weighed	tests/sak/parser/test_serial_data.c++	/^	Weighed( float weight	=	0 )$/;"	f	class:Weighed	file:
Weighed	tests/sak/parser/test_serial_data.c++	/^class Weighed$/;"	c	file:
_ALIGNED_BUFFER_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^#define _ALIGNED_BUFFER_H /;"	d
_ALLOCATED_PTR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocated_ptr.h	/^#define _ALLOCATED_PTR_H /;"	d
_ALLOCATOR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^#define _ALLOCATOR_H /;"	d
_ALLOCA_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@alloca.h	/^#define	_ALLOCA_H	/;"	d
_ALLOC_TRAITS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^#define _ALLOC_TRAITS_H /;"	d
_ASM_GENERIC_ERRNO_BASE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno-base.h	/^#define _ASM_GENERIC_ERRNO_BASE_H$/;"	d
_ASM_GENERIC_ERRNO_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@asm-generic@errno.h	/^#define _ASM_GENERIC_ERRNO_H$/;"	d
_ASSERT_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@assert.h	/^#define	_ASSERT_H	/;"	d
_ATFILE_SOURCE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define _ATFILE_SOURCE	/;"	d
_ATr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^	  using _ATr = _AllocTraits;$/;"	t	function:std::_Node_handle_common::_Optional_alloc::operator =	typeref:typename:_AllocTraits
_A_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	typedef _Sp_ebo_helper<0, _Alloc>	_A_base;$/;"	t	class:std::_Sp_counted_ptr_inplace::_Impl	typeref:typename:_Sp_ebo_helper<0,_Alloc>
_Alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	  using _Alloc = allocator<_Sp_overwrite_tag>;$/;"	t	function:std::make_shared_for_overwrite	typeref:typename:allocator<_Sp_overwrite_tag>
_Alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      using _Alloc = allocator<void>;$/;"	t	function:std::make_shared	typeref:typename:allocator<void>
_Alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	  using _Alloc = allocator<_Sp_cd_type>;$/;"	t	function:std::__shared_count::__shared_count	typeref:typename:allocator<_Sp_cd_type>
_Alloc2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	  using _Alloc2 = __alloc_rebind<_Alloc, _Sp_overwrite_tag>;$/;"	t	function:std::allocate_shared_for_overwrite	typeref:typename:__alloc_rebind<_Alloc,_Sp_overwrite_tag>
_AllocTraits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      using _AllocTraits = allocator_traits<_NodeAlloc>;$/;"	t	class:std::_Node_handle	typeref:typename:allocator_traits<_NodeAlloc>
_AllocTraits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      using _AllocTraits = allocator_traits<_NodeAlloc>;$/;"	t	class:std::_Node_handle_common	typeref:typename:allocator_traits<_NodeAlloc>
_Alloc_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	typedef _Sp_ebo_helper<1, _Alloc>	_Alloc_base;$/;"	t	class:std::_Sp_counted_deleter::_Impl	typeref:typename:_Sp_ebo_helper<1,_Alloc>
_Alloc_hider	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())$/;"	f	struct:std::basic_string::_Alloc_hider
_Alloc_hider	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      struct _Alloc_hider : allocator_type \/\/ TODO check __is_final$/;"	s	class:std::basic_string
_Alloc_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_Alloc_node(_Rb_tree& __t)$/;"	f	struct:std::_Rb_tree::_Alloc_node
_Alloc_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      struct _Alloc_node$/;"	s	class:std::_Rb_tree
_Alloc_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;$/;"	t	class:std::basic_string	typeref:typename:__gnu_cxx::__alloc_traits<_Char_alloc_type>
_Alloc_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef __gnu_cxx::__alloc_traits<allocator_type> _Alloc_traits;$/;"	t	function:std::__str_concat	typeref:typename:__gnu_cxx::__alloc_traits<allocator_type>
_Alloc_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      using _Alloc_traits = allocator_traits<_Alloc>;$/;"	t	function:std::operator +	typeref:typename:allocator_traits<_Alloc>
_Alloc_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	  using _Alloc_traits = allocator_traits<_Alloc>;$/;"	t	function:std::__shared_count::__shared_count	typeref:typename:allocator_traits<_Alloc>
_Alloc_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	 _Alloc_traits;$/;"	t	class:std::_Deque_base	typeref:typename:__gnu_cxx::__alloc_traits<_Tp_alloc_type>
_Alloc_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef typename _Base::_Alloc_traits		_Alloc_traits;$/;"	t	class:std::deque	typeref:typename:_Base::_Alloc_traits
_Alloc_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef __gnu_cxx::__alloc_traits<_Pair_alloc_type> _Alloc_traits;$/;"	t	class:std::map	typeref:typename:__gnu_cxx::__alloc_traits<_Pair_alloc_type>
_Alloc_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef __gnu_cxx::__alloc_traits<_Node_allocator> _Alloc_traits;$/;"	t	class:std::_Rb_tree	typeref:typename:__gnu_cxx::__alloc_traits<_Node_allocator>
_Alloc_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;$/;"	t	class:std::vector	typeref:typename:__gnu_cxx::__alloc_traits<_Tp_alloc_type>
_Alloc_value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef typename _Alloc::value_type	_Alloc_value_type;$/;"	t	class:std::deque	typeref:typename:_Alloc::value_type
_Alloc_value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef typename _Alloc::value_type		_Alloc_value_type;$/;"	t	class:std::map	typeref:typename:_Alloc::value_type
_Alloc_value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      typedef typename _Alloc::value_type		_Alloc_value_type;$/;"	t	class:std::vector	typeref:typename:_Alloc::value_type
_AnyMatcher	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _AnyMatcher(const _TraitsT& __traits)$/;"	f	struct:std::__detail::_AnyMatcher
_AnyMatcher	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^    struct _AnyMatcher<_TraitsT, false, __icase, __collate>$/;"	s	namespace:std::__detail
_AnyMatcher	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^    struct _AnyMatcher<_TraitsT, true, __icase, __collate>$/;"	s	namespace:std::__detail
_Any_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^  union [[gnu::may_alias]] _Any_data$/;"	u	namespace:std
_Arg1_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^      typedef typename _Operation::first_argument_type _Arg1_type;$/;"	t	function:std::bind1st	typeref:typename:_Operation::first_argument_type
_Arg2_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^      typedef typename _Operation::second_argument_type _Arg2_type;$/;"	t	function:std::bind2nd	typeref:typename:_Operation::second_argument_type
_Asan	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	  struct _Asan$/;"	s	struct:std::_Vector_base::_Vector_impl
_Asan	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	  struct _Asan<allocator<_Up> >$/;"	s	struct:std::_Vector_base::_Vector_impl
_Assignable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	using _Assignable = typename enable_if<$/;"	t	class:std::shared_ptr	typeref:typename:enable_if<is_assignable<__shared_ptr<_Tp> &,_Arg>::value,shared_ptr &>::type
_Assignable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	using _Assignable = typename enable_if<$/;"	t	class:std::weak_ptr	typeref:typename:enable_if<is_assignable<__weak_ptr<_Tp> &,_Arg>::value,weak_ptr &>::type
_Assignable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	using _Assignable = _Compatible<_Yp, __shared_ptr&>;$/;"	t	class:std::__shared_ptr	typeref:typename:_Compatible<_Yp,__shared_ptr &>
_Assignable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	using _Assignable = _Compatible<_Yp, __weak_ptr&>;$/;"	t	class:std::__weak_ptr	typeref:typename:_Compatible<_Yp,__weak_ptr &>
_Atomic_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^	_Atomic_count(__count_type&& __c) noexcept$/;"	f	struct:std::_Sp_atomic::_Atomic_count
_Atomic_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      struct _Atomic_count$/;"	s	class:std::_Sp_atomic
_Atomic_word	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@atomic_word.h	/^typedef int _Atomic_word;$/;"	t	typeref:typename:int
_Auto_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	  _Auto_node(_Rb_tree& __t, _Args&&... __args)$/;"	f	struct:std::_Rb_tree::_Auto_node
_Auto_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_Auto_node(_Auto_node&& __n)$/;"	f	struct:std::_Rb_tree::_Auto_node
_Auto_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      struct _Auto_node$/;"	s	class:std::_Rb_tree
_AutomatonPtr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef std::shared_ptr<const __detail::_NFA<_Rx_traits>> _AutomatonPtr;$/;"	t	class:std::basic_regex	typeref:typename:std::shared_ptr<const __detail::_NFA<_Rx_traits>>
_BACKWARD_AUTO_PTR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^#define _BACKWARD_AUTO_PTR_H /;"	d
_BACKWARD_BINDERS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^#define _BACKWARD_BINDERS_H /;"	d
_BASIC_IOS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^#define _BASIC_IOS_H /;"	d
_BASIC_STRING_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^#define _BASIC_STRING_H /;"	d
_BITS_ATOMIC_WIDE_COUNTER_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@atomic_wide_counter.h	/^#define _BITS_ATOMIC_WIDE_COUNTER_H$/;"	d
_BITS_BYTESWAP_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@byteswap.h	/^#define _BITS_BYTESWAP_H /;"	d
_BITS_CPU_SET_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^#define _BITS_CPU_SET_H /;"	d
_BITS_ENDIANNESS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@endianness.h	/^#define _BITS_ENDIANNESS_H /;"	d
_BITS_ENDIAN_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@endian.h	/^#define _BITS_ENDIAN_H /;"	d
_BITS_ERRNO_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@errno.h	/^#define _BITS_ERRNO_H /;"	d
_BITS_FLOATN_COMMON_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#define _BITS_FLOATN_COMMON_H$/;"	d
_BITS_FLOATN_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn.h	/^#define _BITS_FLOATN_H$/;"	d
_BITS_LOCALE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@locale.h	/^#define _BITS_LOCALE_H	/;"	d
_BITS_PTHREADTYPES_ARCH_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^#define _BITS_PTHREADTYPES_ARCH_H	/;"	d
_BITS_PTHREADTYPES_COMMON_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^# define _BITS_PTHREADTYPES_COMMON_H	/;"	d
_BITS_SCHED_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@sched.h	/^#define _BITS_SCHED_H /;"	d
_BITS_SETJMP_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@setjmp.h	/^#define _BITS_SETJMP_H /;"	d
_BITS_STDINT_INTN_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@stdint-intn.h	/^#define _BITS_STDINT_INTN_H	/;"	d
_BITS_STDINT_UINTN_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@stdint-uintn.h	/^#define _BITS_STDINT_UINTN_H	/;"	d
_BITS_STDIO_LIM_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@stdio_lim.h	/^#define _BITS_STDIO_LIM_H /;"	d
_BITS_TIME64_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time64.h	/^#define	_BITS_TIME64_H	/;"	d
_BITS_TIMEX_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^#define	_BITS_TIMEX_H	/;"	d
_BITS_TIME_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time.h	/^#define _BITS_TIME_H	/;"	d
_BITS_TYPESIZES_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define	_BITS_TYPESIZES_H	/;"	d
_BITS_TYPES_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^#define	_BITS_TYPES_H	/;"	d
_BITS_TYPES_LOCALE_T_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@locale_t.h	/^#define _BITS_TYPES_LOCALE_T_H /;"	d
_BITS_TYPES_STRUCT_SCHED_PARAM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_sched_param.h	/^#define _BITS_TYPES_STRUCT_SCHED_PARAM /;"	d
_BITS_TYPES___LOCALE_T_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__locale_t.h	/^#define _BITS_TYPES___LOCALE_T_H /;"	d
_BITS_UINTN_IDENTITY_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@uintn-identity.h	/^#define _BITS_UINTN_IDENTITY_H /;"	d
_BITS_WCHAR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wchar.h	/^#define _BITS_WCHAR_H	/;"	d
_BITS_WCTYPE_WCHAR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^#define _BITS_WCTYPE_WCHAR_H /;"	d
_Base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^	_Base;$/;"	t	class:std::__detail::_RegexTranslator	typeref:typename:_RegexTranslatorBase<std::regex_traits<_CharType>,true,true>
_Base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef _RegexTranslatorBase<_TraitsT, __icase, __collate> _Base;$/;"	t	class:std::__detail::_RegexTranslator	typeref:typename:_RegexTranslatorBase<_TraitsT,__icase,__collate>
_Base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef _RegexTranslatorBase<_TraitsT, __icase, false> _Base;$/;"	t	class:std::__detail::_RegexTranslator	typeref:typename:_RegexTranslatorBase<_TraitsT,__icase,false>
_Base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      using _Base = _Function_base::_Base_manager<_Functor>;$/;"	t	class:std::_Function_handler	typeref:typename:_Function_base::_Base_manager<_Functor>
_Base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef _Bvector_base<_Alloc>			_Base;$/;"	t	class:std::vector	typeref:typename:_Bvector_base<_Alloc>
_Base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef _Deque_base<_Tp, _Alloc>			_Base;$/;"	t	class:std::deque	typeref:typename:_Deque_base<_Tp,_Alloc>
_Base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef is_base_of<random_access_iterator_tag, _Cat> _Base;$/;"	t	struct:std::__is_random_access_iter	typeref:typename:is_base_of<random_access_iterator_tag,_Cat>
_Base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      typedef _Vector_base<_Tp, _Alloc>			_Base;$/;"	t	class:std::vector	typeref:typename:_Vector_base<_Tp,_Alloc>
_BaseType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  typedef std::ctype_base::mask _BaseType;$/;"	t	struct:std::regex_traits::_RegexMask	typeref:typename:std::ctype_base::mask
_Base_key_compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	  typedef _Rb_tree_key_compare<_Key_compare> _Base_key_compare;$/;"	t	struct:std::_Rb_tree::_Rb_tree_impl	typeref:typename:_Rb_tree_key_compare<_Key_compare>
_Base_manager	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      class _Base_manager$/;"	c	class:std::_Function_base
_Base_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Rb_tree_node_base* 		_Base_ptr;$/;"	t	class:std::_Rb_tree	typeref:typename:_Rb_tree_node_base *
_Base_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Rb_tree_node_base::_Base_ptr	_Base_ptr;$/;"	t	struct:std::_Rb_tree_iterator	typeref:typename:_Rb_tree_node_base::_Base_ptr
_Base_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Rb_tree_node_base::_Const_Base_ptr	_Base_ptr;$/;"	t	struct:std::_Rb_tree_const_iterator	typeref:typename:_Rb_tree_node_base::_Const_Base_ptr
_Base_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    typedef _Rb_tree_node_base* _Base_ptr;$/;"	t	struct:std::_Rb_tree_node_base	typeref:typename:_Rb_tree_node_base *
_Base_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef std::vector<sub_match<_Bi_iter>, _Alloc>     _Base_type;$/;"	t	class:std::match_results	typeref:typename:std::vector<sub_match<_Bi_iter>,_Alloc>
_Base_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    typedef std::allocator_traits<_Alloc>           _Base_type;$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:std::allocator_traits<_Alloc>
_Bit_alloc_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_Bit_alloc_traits;$/;"	t	struct:std::_Bvector_base	typeref:typename:__gnu_cxx::__alloc_traits<_Bit_alloc_type>
_Bit_alloc_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef typename _Base::_Bit_alloc_traits		_Bit_alloc_traits;$/;"	t	class:std::vector	typeref:typename:_Base::_Bit_alloc_traits
_Bit_alloc_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^        rebind<_Bit_type>::other _Bit_alloc_type;$/;"	t	struct:std::_Bvector_base	typeref:typename:__gnu_cxx::__alloc_traits<_Alloc>::template rebind<_Bit_type>::other
_Bit_const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    _Bit_const_iterator() : _Bit_iterator_base(0, 0) { }$/;"	f	struct:std::_Bit_const_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR
_Bit_const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    _Bit_const_iterator(_Bit_type * __x, unsigned int __y)$/;"	f	struct:std::_Bit_const_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR
_Bit_const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    _Bit_const_iterator(const _Bit_iterator& __x)$/;"	f	struct:std::_Bit_const_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR
_Bit_const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^  struct _Bit_const_iterator : public _Bit_iterator_base$/;"	s	namespace:std
_Bit_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    _Bit_iterator() : _Bit_iterator_base(0, 0) { }$/;"	f	struct:std::_Bit_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR
_Bit_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    _Bit_iterator(_Bit_type * __x, unsigned int __y)$/;"	f	struct:std::_Bit_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR
_Bit_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^  struct _Bit_iterator : public _Bit_iterator_base$/;"	s	namespace:std
_Bit_iterator_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    _Bit_iterator_base(_Bit_type * __x, unsigned int __y)$/;"	f	struct:std::_Bit_iterator_base	typeref:typename:_GLIBCXX20_CONSTEXPR
_Bit_iterator_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^  struct _Bit_iterator_base$/;"	s	namespace:std
_Bit_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef typename _Base::_Bit_pointer		_Bit_pointer;$/;"	t	class:std::vector	typeref:typename:_Base::_Bit_pointer
_Bit_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef typename _Bit_alloc_traits::pointer _Bit_pointer;$/;"	t	struct:std::_Bvector_base	typeref:typename:_Bit_alloc_traits::pointer
_Bit_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    _Bit_reference() _GLIBCXX_NOEXCEPT : _M_p(0), _M_mask(0) { }$/;"	f	struct:std::_Bit_reference	typeref:typename:_GLIBCXX20_CONSTEXPR
_Bit_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    _Bit_reference(_Bit_type * __x, _Bit_type __y)$/;"	f	struct:std::_Bit_reference	typeref:typename:_GLIBCXX20_CONSTEXPR
_Bit_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^  struct _Bit_reference$/;"	s	namespace:std
_Bit_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^  typedef unsigned long _Bit_type;$/;"	t	namespace:std	typeref:typename:unsigned long
_BoundedArray	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    using _BoundedArray = _Tp;$/;"	t	namespace:std	typeref:typename:_Tp
_BoundedArray	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    using _BoundedArray$/;"	t	namespace:std	typeref:typename:__enable_if_t<__is_array_known_bounds<_Tp>::value,_Tp>
_BracketMatcher	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^	using _BracketMatcher$/;"	t	class:std::__detail::_Compiler	typeref:typename:std::__detail::_BracketMatcher<_TraitsT,__icase,__collate>
_BracketMatcher	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _BracketMatcher(bool __is_non_matching,$/;"	f	struct:std::__detail::_BracketMatcher
_BracketMatcher	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^    struct _BracketMatcher$/;"	s	namespace:std::__detail
_BracketState	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      struct _BracketState$/;"	s	class:std::__detail::_Compiler
_Build_index_tuple	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    struct _Build_index_tuple$/;"	s	namespace:std
_Bvector_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _Bvector_base() { }$/;"	f	struct:std::_Bvector_base
_Bvector_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _Bvector_base(_Bvector_base&& __x, const allocator_type& __a) noexcept$/;"	f	struct:std::_Bvector_base	typeref:typename:_GLIBCXX20_CONSTEXPR
_Bvector_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _Bvector_base(const allocator_type& __a)$/;"	f	struct:std::_Bvector_base	typeref:typename:_GLIBCXX20_CONSTEXPR
_Bvector_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    struct _Bvector_base$/;"	s	namespace:std
_Bvector_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_Bvector_impl() _GLIBCXX_NOEXCEPT_IF($/;"	f	struct:std::_Bvector_base::_Bvector_impl	typeref:typename:_GLIBCXX20_CONSTEXPR
_Bvector_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_Bvector_impl(_Bit_alloc_type&& __a, _Bvector_impl&& __x) noexcept$/;"	f	struct:std::_Bvector_base::_Bvector_impl	typeref:typename:_GLIBCXX20_CONSTEXPR
_Bvector_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_Bvector_impl(_Bvector_impl&& __x) noexcept$/;"	f	struct:std::_Bvector_base::_Bvector_impl	typeref:typename:_GLIBCXX20_CONSTEXPR
_Bvector_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_Bvector_impl(const _Bit_alloc_type& __a) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Bvector_base::_Bvector_impl	typeref:typename:_GLIBCXX20_CONSTEXPR
_Bvector_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      struct _Bvector_impl$/;"	s	struct:std::_Bvector_base
_Bvector_impl_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_Bvector_impl_data() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Bvector_base::_Bvector_impl_data	typeref:typename:_GLIBCXX20_CONSTEXPR
_Bvector_impl_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_Bvector_impl_data(_Bvector_impl_data&& __x) noexcept$/;"	f	struct:std::_Bvector_base::_Bvector_impl_data	typeref:typename:_GLIBCXX20_CONSTEXPR
_Bvector_impl_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      struct _Bvector_impl_data$/;"	s	struct:std::_Bvector_base
_CHAR_TRAITS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^#define _CHAR_TRAITS_H /;"	d
_CIter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	  using _CIter = common_iterator<_Iter, _Sent>;$/;"	t	struct:std::iterator_traits::__ptr	typeref:typename:common_iterator<_Iter,_Sent>
_CODECVT_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^#define _CODECVT_H /;"	d
_CONCEPT_CHECK_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@concept_check.h	/^#define _CONCEPT_CHECK_H /;"	d
_CONCURRENCE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^#define _CONCURRENCE_H /;"	d
_CPP_TYPE_TRAITS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^#define _CPP_TYPE_TRAITS_H /;"	d
_CT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	                 typename unique_ptr<_Up, _Ep>::pointer>::type _CT;$/;"	t	function:std::operator <	typeref:typename:std::common_type<typename unique_ptr<_Tp,_Dp>::pointer,typename unique_ptr<_Up,_Ep>::pointer>::type
_CTYPE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#define	_CTYPE_H	/;"	d
_CXXABI_FORCED_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cxxabi_forced.h	/^#define _CXXABI_FORCED_H /;"	d
_CXXABI_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^#define _CXXABI_H /;"	d
_CXXABI_INIT_EXCEPTION_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cxxabi_init_exception.h	/^#define _CXXABI_INIT_EXCEPTION_H /;"	d
_CXXABI_TWEAKS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@cxxabi_tweaks.h	/^#define _CXXABI_TWEAKS_H /;"	d
_CacheT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      using _CacheT = std::__conditional_t<_UseCache::value,$/;"	t	struct:std::__detail::_BracketMatcher	typeref:typename:std::__conditional_t<_UseCache::value,std::bitset<_S_cache_size>,_Dummy>
_Call_wrapper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^      using _Call_wrapper = _Invoker<tuple<typename decay<_Tp>::type...>>;$/;"	t	class:std::thread	typeref:typename:_Invoker<tuple<typename decay<_Tp>::type...>>
_Callable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	struct _Callable$/;"	s	class:std::function
_Callback_list	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _Callback_list(ios_base::event_callback __fn, int __index,$/;"	f	struct:std::ios_base::_Callback_list
_Callback_list	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    struct _Callback_list$/;"	s	class:std::ios_base
_Cat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^	    using _Cat = typename _ChTraits::comparison_category;$/;"	t	function:std::__detail::__char_traits_cmp_cat	typeref:typename:_ChTraits::comparison_category
_Cat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      using _Cat = typename iterator_traits<_InputIterator>::iterator_category;$/;"	t	function:std::for_each_n	typeref:typename:iterator_traits<_InputIterator>::iterator_category
_Cat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^      using _Cat = decltype(__comp(*__first1, *__first2));$/;"	t	function:std::lexicographical_compare_three_way
_Cat1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      using _Cat1$/;"	t	function:std::__is_permutation	typeref:typename:iterator_traits<_ForwardIterator1>::iterator_category
_Cat1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^      using _Cat1 = typename iterator_traits<_II1>::iterator_category;$/;"	t	function:std::__equal4	typeref:typename:iterator_traits<_II1>::iterator_category
_Cat2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      using _Cat2$/;"	t	function:std::__is_permutation	typeref:typename:iterator_traits<_ForwardIterator2>::iterator_category
_Cat2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^      using _Cat2 = typename iterator_traits<_II2>::iterator_category;$/;"	t	function:std::__equal4	typeref:typename:iterator_traits<_II2>::iterator_category
_Category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^      typedef typename iterator_traits<_BI1>::iterator_category _Category;$/;"	t	function:std::__copy_move_backward_a2	typeref:typename:iterator_traits<_BI1>::iterator_category
_Category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^      typedef typename iterator_traits<_II>::iterator_category _Category;$/;"	t	function:std::__copy_move_a2	typeref:typename:iterator_traits<_II>::iterator_category
_Category1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^      typedef typename iterator_traits<_II1>::iterator_category _Category1;$/;"	t	function:std::__lexicographical_compare_impl	typeref:typename:iterator_traits<_II1>::iterator_category
_Category2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^      typedef typename iterator_traits<_II2>::iterator_category _Category2;$/;"	t	function:std::__lexicographical_compare_impl	typeref:typename:iterator_traits<_II2>::iterator_category
_Char	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^	enum class _Type : char { _None, _Char, _Class } _M_type = _Type::_None;$/;"	e	enum:std::__detail::_Compiler::_BracketState::_Type
_CharClassT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef typename _TraitsT::char_class_type             _CharClassT;$/;"	t	struct:std::__detail::_BracketMatcher	typeref:typename:_TraitsT::char_class_type
_CharMatcher	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _CharMatcher(_CharT __ch, const _TraitsT& __traits)$/;"	f	struct:std::__detail::_CharMatcher
_CharMatcher	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^    struct _CharMatcher$/;"	s	namespace:std::__detail
_CharT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef typename _Base::_CharT _CharT;$/;"	t	class:std::__detail::_RegexTranslator	typeref:typename:_Base::_CharT
_CharT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef typename _TraitsT::char_type	      _CharT;$/;"	t	class:std::__detail::_RegexTranslatorBase	typeref:typename:_TraitsT::char_type
_CharT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef typename _TraitsT::char_type        _CharT;$/;"	t	class:std::__detail::_Compiler	typeref:typename:_TraitsT::char_type
_CharT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef typename _TraitsT::char_type _CharT;$/;"	t	class:std::__detail::_RegexTranslator	typeref:typename:_TraitsT::char_type
_CharT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef typename _TransT::_CharT                       _CharT;$/;"	t	struct:std::__detail::_AnyMatcher	typeref:typename:_TransT::_CharT
_CharT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef typename _TransT::_CharT                       _CharT;$/;"	t	struct:std::__detail::_BracketMatcher	typeref:typename:_TransT::_CharT
_CharT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef typename _TransT::_CharT                       _CharT;$/;"	t	struct:std::__detail::_CharMatcher	typeref:typename:_TransT::_CharT
_CharT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      typedef typename iterator_traits<_BiIter>::value_type _CharT;$/;"	t	class:std::__detail::_Executor	typeref:typename:iterator_traits<_BiIter>::value_type
_Char_alloc_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	rebind<_CharT>::other _Char_alloc_type;$/;"	t	class:std::basic_string	typeref:typename:__gnu_cxx::__alloc_traits<_Alloc>::template rebind<_CharT>::other
_Char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      typedef typename _TraitsT::char_type	_Char_type;$/;"	t	struct:std::__detail::_NFA	typeref:typename:_TraitsT::char_type
_Char_types	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^    struct _Char_types$/;"	s	namespace:__gnu_cxx
_Class	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^	enum class _Type : char { _None, _Char, _Class } _M_type = _Type::_None;$/;"	e	enum:std::__detail::_Compiler::_BracketState::_Type
_ClassT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      typedef typename _TraitsT::char_class_type            _ClassT;$/;"	t	class:std::__detail::_Executor	typeref:typename:_TraitsT::char_class_type
_Cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^	  typedef __decltype(__comp) _Cmp;$/;"	t	function:std::pop_heap
_Cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^      typedef __decltype(__comp) _Cmp;$/;"	t	function:std::__is_heap
_Cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^      typedef __decltype(__comp) _Cmp;$/;"	t	function:std::is_heap
_Cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^      typedef __decltype(__comp) _Cmp;$/;"	t	function:std::is_heap_until
_Cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^      typedef __decltype(__comp) _Cmp;$/;"	t	function:std::make_heap
_Cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^      typedef __decltype(__comp) _Cmp;$/;"	t	function:std::sort_heap
_Codecvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      using _Codecvt = codecvt<_CharT, char, _State>;$/;"	t	function:std::__str_codecvt_in	typeref:typename:codecvt<_CharT,char,_State>
_Codecvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      using _Codecvt = codecvt<_CharT, char, _State>;$/;"	t	function:std::__str_codecvt_out	typeref:typename:codecvt<_CharT,char,_State>
_Codecvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      using _Codecvt = codecvt<_CharT, char8_t, _State>;$/;"	t	function:std::__str_codecvt_out	typeref:typename:codecvt<_CharT,char8_t,_State>
_Compatible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	using _Compatible = typename$/;"	t	class:std::__shared_ptr	typeref:typename:enable_if<__sp_compatible_with<_Yp *,_Tp * >::value,_Res>::type
_Compatible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	using _Compatible = typename$/;"	t	class:std::__weak_ptr	typeref:typename:enable_if<__sp_compatible_with<_Yp *,_Tp * >::value,_Res>::type
_Compatible_tree	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	using _Compatible_tree$/;"	t	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare2,_Alloc>
_Compiler	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^    class _Compiler$/;"	c	namespace:std::__detail
_Const_Base_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef const _Rb_tree_node_base* 	_Const_Base_ptr;$/;"	t	class:std::_Rb_tree	typeref:typename:const _Rb_tree_node_base *
_Const_Base_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    typedef const _Rb_tree_node_base* _Const_Base_ptr;$/;"	t	struct:std::_Rb_tree_node_base	typeref:typename:const _Rb_tree_node_base *
_Const_Link_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef const _Rb_tree_node<_Val>*	_Const_Link_type;$/;"	t	class:std::_Rb_tree	typeref:typename:const _Rb_tree_node<_Val> *
_Construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^    _Construct(_T1* __p, const _T2& __value)$/;"	f	namespace:std	typeref:typename:void
_Construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^    _Construct(_Tp* __p, _Args&&... __args)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
_Construct_novalue	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^    _Construct_novalue(_T1* __p)$/;"	f	namespace:std	typeref:typename:void
_Constructible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	using _Constructible = typename enable_if<$/;"	t	class:std::shared_ptr	typeref:typename:enable_if<is_constructible<__shared_ptr<_Tp>,_Args...>::value>::type
_Constructible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	using _Constructible = typename enable_if<$/;"	t	class:std::weak_ptr	typeref:typename:enable_if<is_constructible<__weak_ptr<_Tp>,_Arg>::value>::type
_ConstructiblePair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      static constexpr bool _ConstructiblePair()$/;"	f	struct:std::_PCC	typeref:typename:bool
_ConvFn	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      using _ConvFn$/;"	t	function:std::__str_codecvt_in
_ConvFn	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      using _ConvFn$/;"	t	function:std::__str_codecvt_out
_CopyConstructible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^      using _CopyConstructible$/;"	t	function:std::throw_with_nested	typeref:typename:__and_<is_copy_constructible<_Up>,is_move_constructible<_Up>>
_CtypeT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef std::ctype<_CharT>             _CtypeT;$/;"	t	class:std::__detail::_Compiler	typeref:typename:std::ctype<_CharT>
_CtypeT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      typedef const std::ctype<_CharT>                            _CtypeT;$/;"	t	class:std::__detail::_Scanner	typeref:typename:const std::ctype<_CharT>
_Cxx_hashtable_define_trivial_hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^#define _Cxx_hashtable_define_trivial_hash(/;"	d
_DEFAULT_SOURCE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define _DEFAULT_SOURCE	/;"	d
_DYNAMIC_STACK_SIZE_SOURCE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define _DYNAMIC_STACK_SIZE_SOURCE /;"	d
_DanglingCheck1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	  typedef int _DanglingCheck1[$/;"	t	function:std::pair::pair	typeref:typename:int[__reference_constructs_from_temporary (_T1,const _U1 &)?-1:1]
_DanglingCheck2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	  typedef int _DanglingCheck2[$/;"	t	function:std::pair::pair	typeref:typename:int[__reference_constructs_from_temporary (_T2,const _U2 &)?-1:1]
_Decay_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	using _Decay_t$/;"	t	class:std::function	typeref:typename:__enable_if_t<!_Self,decay<_Func>>::type
_Del2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	  using _Del2 = __conditional_t<is_reference<_Del>::value,$/;"	t	function:std::__shared_count::__shared_count	typeref:typename:__conditional_t<is_reference<_Del>::value,reference_wrapper<typename remove_reference<_Del>::type>,_Del>
_Del_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	typedef _Sp_ebo_helper<0, _Deleter>	_Del_base;$/;"	t	class:std::_Sp_counted_deleter::_Impl	typeref:typename:_Sp_ebo_helper<0,_Deleter>
_DeleterConstraint	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	using _DeleterConstraint =$/;"	t	class:std::unique_ptr	typeref:typename:__uniq_ptr_impl<_Tp,_Up>::_DeleterConstraint::type
_DeleterConstraint	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      using _DeleterConstraint = enable_if<$/;"	t	class:std::__uniq_ptr_impl	typeref:typename:enable_if<__and_<__not_<is_pointer<_Dp>>,is_default_constructible<_Dp>>::value>
_DeleterConstraint	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      using _DeleterConstraint =$/;"	t	class:std::unique_ptr	typeref:typename:__uniq_ptr_impl<_Tp,_Up>::_DeleterConstraint::type
_Deque_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _Deque_base()$/;"	f	class:std::_Deque_base
_Deque_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _Deque_base(_Deque_base&& __x)$/;"	f	class:std::_Deque_base
_Deque_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _Deque_base(_Deque_base&& __x, const allocator_type& __a)$/;"	f	class:std::_Deque_base
_Deque_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _Deque_base(_Deque_base&& __x, const allocator_type& __a, size_t __n)$/;"	f	class:std::_Deque_base
_Deque_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _Deque_base(const allocator_type& __a)$/;"	f	class:std::_Deque_base
_Deque_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _Deque_base(const allocator_type& __a, size_t __num_elements)$/;"	f	class:std::_Deque_base
_Deque_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _Deque_base(size_t __num_elements)$/;"	f	class:std::_Deque_base
_Deque_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^    class _Deque_base$/;"	c	namespace:std
_Deque_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	_Deque_impl(_Deque_impl&& __d, _Tp_alloc_type&& __a)$/;"	f	struct:std::_Deque_base::_Deque_impl
_Deque_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	_Deque_impl(_Tp_alloc_type&& __a) noexcept$/;"	f	struct:std::_Deque_base::_Deque_impl
_Deque_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	_Deque_impl(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_base::_Deque_impl
_Deque_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      struct _Deque_impl$/;"	s	class:std::_Deque_base
_Deque_impl_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	_Deque_impl_data() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_base::_Deque_impl_data
_Deque_impl_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	_Deque_impl_data(_Deque_impl_data&& __x) noexcept$/;"	f	struct:std::_Deque_base::_Deque_impl_data
_Deque_impl_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      struct _Deque_impl_data$/;"	s	class:std::_Deque_base
_Deque_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^       _Deque_iterator(const _Iter& __x) noexcept$/;"	f	struct:std::_Deque_iterator
_Deque_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _Deque_iterator() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_iterator
_Deque_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _Deque_iterator(_Elt_pointer __x, _Map_pointer __y) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_iterator
_Deque_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _Deque_iterator(const _Deque_iterator& __x) noexcept$/;"	f	struct:std::_Deque_iterator
_Deque_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _Deque_iterator(const iterator& __x) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_iterator
_Deque_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^    struct _Deque_iterator$/;"	s	namespace:std
_Destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    _Destroy(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
_Destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^    _Destroy(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
_Destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^    _Destroy(_Tp* __pointer)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR void
_Destroy_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^    struct _Destroy_aux$/;"	s	namespace:std
_Destroy_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^    struct _Destroy_aux<true>$/;"	s	namespace:std
_Destroy_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^    _Destroy_n(_ForwardIterator __first, _Size __count)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
_Destroy_n_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^    struct _Destroy_n_aux$/;"	s	namespace:std
_Destroy_n_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^    struct _Destroy_n_aux<true>$/;"	s	namespace:std
_Diff	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	struct _Diff$/;"	s	struct:std::allocator_traits
_Diff	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>$/;"	s	struct:std::allocator_traits
_Diff	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      using _Diff = __conditional_t<is_pointer_v<_Tp>, ptrdiff_t, _Val<_Tp>>;$/;"	t	namespace:std::__atomic_impl	typeref:typename:__conditional_t<is_pointer_v<_Tp>,ptrdiff_t,_Val<_Tp>>
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, '0'> : integral_constant<unsigned, 0>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, '1'> : integral_constant<unsigned, 1>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, '2'> : _Digit_impl<_Base, 2>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, '3'> : _Digit_impl<_Base, 3>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, '4'> : _Digit_impl<_Base, 4>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, '5'> : _Digit_impl<_Base, 5>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, '6'> : _Digit_impl<_Base, 6>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, '7'> : _Digit_impl<_Base, 7>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, '8'> : _Digit_impl<_Base, 8>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, '9'> : _Digit_impl<_Base, 9>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, 'A'> : _Digit_impl<_Base, 0xa>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, 'B'> : _Digit_impl<_Base, 0xb>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, 'C'> : _Digit_impl<_Base, 0xc>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, 'D'> : _Digit_impl<_Base, 0xd>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, 'E'> : _Digit_impl<_Base, 0xe>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, 'F'> : _Digit_impl<_Base, 0xf>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, '\\''> : integral_constant<unsigned, 0>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, 'a'> : _Digit_impl<_Base, 0xa>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, 'b'> : _Digit_impl<_Base, 0xb>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, 'c'> : _Digit_impl<_Base, 0xc>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, 'd'> : _Digit_impl<_Base, 0xd>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, 'e'> : _Digit_impl<_Base, 0xe>$/;"	s	namespace:std::__parse_int
_Digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit<_Base, 'f'> : _Digit_impl<_Base, 0xf>$/;"	s	namespace:std::__parse_int
_Digit_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Digit_impl : integral_constant<unsigned, _Val>$/;"	s	namespace:std::__parse_int
_Distance	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	_Distance;$/;"	t	function:std::__merge_sort_with_buffer	typeref:typename:iterator_traits<_RandomAccessIterator>::difference_type
_Distance	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	_Distance;$/;"	t	function:std::__rotate	typeref:typename:iterator_traits<_RandomAccessIterator>::difference_type
_Distance	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	  typedef typename iterator_traits<_II>::difference_type _Distance;$/;"	t	function:std::__copy_move::__copy_m	typeref:typename:iterator_traits<_II>::difference_type
_DistanceType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	  _DistanceType;$/;"	t	function:std::__inplace_merge	typeref:typename:iterator_traits<_BidirectionalIterator>::difference_type
_DistanceType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	_DistanceType;$/;"	t	function:std::__equal_range	typeref:typename:iterator_traits<_ForwardIterator>::difference_type
_DistanceType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	_DistanceType;$/;"	t	function:std::__search_n_aux	typeref:typename:std::iterator_traits<_RandomAccessIter>::difference_type
_DistanceType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	_DistanceType;$/;"	t	function:std::__stable_partition	typeref:typename:iterator_traits<_ForwardIterator>::difference_type
_DistanceType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	_DistanceType;$/;"	t	function:std::__stable_sort	typeref:typename:iterator_traits<_RandomAccessIterator>::difference_type
_DistanceType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	_DistanceType;$/;"	t	function:std::__upper_bound	typeref:typename:iterator_traits<_ForwardIterator>::difference_type
_DistanceType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	_DistanceType;$/;"	t	function:std::partition_point	typeref:typename:iterator_traits<_ForwardIterator>::difference_type
_DistanceType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	_DistanceType;$/;"	t	function:std::shuffle	typeref:typename:iterator_traits<_RandomAccessIterator>::difference_type
_DistanceType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      typedef typename _RItTraits::difference_type _DistanceType;$/;"	t	function:std::__partial_sort_copy	typeref:typename:_RItTraits::difference_type
_DistanceType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	_DistanceType;$/;"	t	function:std::__lower_bound	typeref:typename:iterator_traits<_ForwardIterator>::difference_type
_DistanceType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^	  _DistanceType;$/;"	t	function:std::__make_heap	typeref:typename:iterator_traits<_RandomAccessIterator>::difference_type
_DistanceType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^	  _DistanceType;$/;"	t	function:std::push_heap	typeref:typename:iterator_traits<_RandomAccessIterator>::difference_type
_DistanceType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^	_DistanceType;$/;"	t	function:std::__pop_heap	typeref:typename:iterator_traits<_RandomAccessIterator>::difference_type
_Dummy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      struct _Dummy { };$/;"	s	struct:std::__detail::_BracketMatcher
_ENDIAN_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^#define	_ENDIAN_H	/;"	d
_ERRNO_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@errno.h	/^#define	_ERRNO_H /;"	d
_EXCEPTION_DEFINES_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_defines.h	/^#define _EXCEPTION_DEFINES_H /;"	d
_EXCEPTION_PTR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^#define _EXCEPTION_PTR_H$/;"	d
_EXT_ALLOC_TRAITS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^#define _EXT_ALLOC_TRAITS_H /;"	d
_EXT_NUMERIC_TRAITS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^#define _EXT_NUMERIC_TRAITS /;"	d
_EXT_TYPE_TRAITS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^#define _EXT_TYPE_TRAITS /;"	d
_Elt_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef _Tp*					   _Elt_pointer;$/;"	t	struct:std::_Deque_iterator	typeref:typename:_Tp *
_Empty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^	struct _Empty { };$/;"	s	union:std::_Node_handle_common::_Optional_alloc
_Ex2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^      using _Ex2 = typename decay<_Ex>::type;$/;"	t	function:std::make_exception_ptr	typeref:typename:decay<_Ex>::type
_Exact	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      enum class _Match_mode : unsigned char { _Exact, _Prefix };$/;"	e	enum:std::__detail::_Executor::_Match_mode
_Executor	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      _Executor(_BiIter         __begin,$/;"	f	class:std::__detail::_Executor
_Executor	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^    class _Executor$/;"	c	namespace:std::__detail
_FEATURES_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#define	_FEATURES_H	/;"	d
_FUNCTEXCEPT_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functexcept.h	/^#define _FUNCTEXCEPT_H /;"	d
_FUNCTIONAL_HASH_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^#define _FUNCTIONAL_HASH_H /;"	d
_FlagT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    typedef regex_constants::syntax_option_type _FlagT;$/;"	t	struct:std::__detail::_NFA_base	typeref:typename:regex_constants::syntax_option_type
_FlagT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef regex_constants::syntax_option_type _FlagT;$/;"	t	class:std::__detail::_Compiler	typeref:typename:regex_constants::syntax_option_type
_FlagT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      typedef regex_constants::match_flag_type              _FlagT;$/;"	t	class:std::__detail::_Executor	typeref:typename:regex_constants::match_flag_type
_FlagT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      typedef regex_constants::syntax_option_type                 _FlagT;$/;"	t	class:std::__detail::_Scanner	typeref:typename:regex_constants::syntax_option_type
_FlagT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    typedef regex_constants::syntax_option_type _FlagT;$/;"	t	struct:std::__detail::_ScannerBase	typeref:typename:regex_constants::syntax_option_type
_Float128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn.h	/^typedef __float128 _Float128;$/;"	t	typeref:typename:__float128
_Float16	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^typedef float _Float16 __attribute__ ((__mode__ (__HF__)));$/;"	t	typeref:typename:float
_Float32	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^typedef float _Float32;$/;"	t	typeref:typename:float
_Float32x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^typedef double _Float32x;$/;"	t	typeref:typename:double
_Float64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^typedef double _Float64;$/;"	t	typeref:typename:double
_Float64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^typedef long double _Float64;$/;"	t	typeref:typename:long double
_Float64x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^typedef _Float128 _Float64x;$/;"	t	typeref:typename:_Float128
_Float64x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^typedef long double _Float64x;$/;"	t	typeref:typename:long double
_Fnv_hash_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^  struct _Fnv_hash_impl$/;"	s	namespace:std
_From	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^      typedef typename iterator_traits<_InputIterator>::reference _From;$/;"	t	function:std::uninitialized_copy	typeref:typename:iterator_traits<_InputIterator>::reference
_From	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^      using _From = decltype(*__first);$/;"	t	function:std::uninitialized_copy
_Function_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^  class _Function_base$/;"	c	namespace:std
_Function_handler	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    class _Function_handler<_Res(_ArgTypes...), _Functor>$/;"	c	namespace:std
_Function_handler	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    class _Function_handler<void, void>$/;"	c	namespace:std
_GLIBCXX11_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^    } _GLIBCXX11_DEPRECATED;$/;"	v	namespace:std	typeref:class:std::auto_ptr
_GLIBCXX11_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^    } _GLIBCXX11_DEPRECATED;$/;"	v	namespace:std	typeref:struct:std::auto_ptr_ref
_GLIBCXX11_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    } _GLIBCXX11_DEPRECATED;$/;"	v	namespace:std	typeref:class:std::const_mem_fun1_ref_t
_GLIBCXX11_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    } _GLIBCXX11_DEPRECATED;$/;"	v	namespace:std	typeref:class:std::const_mem_fun1_t
_GLIBCXX11_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    } _GLIBCXX11_DEPRECATED;$/;"	v	namespace:std	typeref:class:std::const_mem_fun_ref_t
_GLIBCXX11_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    } _GLIBCXX11_DEPRECATED;$/;"	v	namespace:std	typeref:class:std::const_mem_fun_t
_GLIBCXX11_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    } _GLIBCXX11_DEPRECATED;$/;"	v	namespace:std	typeref:class:std::mem_fun1_ref_t
_GLIBCXX11_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    } _GLIBCXX11_DEPRECATED;$/;"	v	namespace:std	typeref:class:std::mem_fun1_t
_GLIBCXX11_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    } _GLIBCXX11_DEPRECATED;$/;"	v	namespace:std	typeref:class:std::mem_fun_ref_t
_GLIBCXX11_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    } _GLIBCXX11_DEPRECATED;$/;"	v	namespace:std	typeref:class:std::mem_fun_t
_GLIBCXX11_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    } _GLIBCXX11_DEPRECATED;$/;"	v	namespace:std	typeref:class:std::pointer_to_binary_function
_GLIBCXX11_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    } _GLIBCXX11_DEPRECATED;$/;"	v	namespace:std	typeref:class:std::pointer_to_unary_function
_GLIBCXX11_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    } _GLIBCXX11_DEPRECATED;$/;"	v	namespace:std	typeref:struct:std::binary_function
_GLIBCXX11_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    } _GLIBCXX11_DEPRECATED;$/;"	v	namespace:std	typeref:struct:std::unary_function
_GLIBCXX11_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX11_DEPRECATED /;"	d
_GLIBCXX11_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX11_DEPRECATED$/;"	d
_GLIBCXX11_DEPRECATED_SUGGEST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^    } _GLIBCXX11_DEPRECATED_SUGGEST("std::unique_ptr");$/;"	v	namespace:std	typeref:class:std::auto_ptr
_GLIBCXX11_DEPRECATED_SUGGEST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^    } _GLIBCXX11_DEPRECATED_SUGGEST("std::bind");$/;"	v	namespace:std	typeref:class:std::binder1st
_GLIBCXX11_DEPRECATED_SUGGEST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^    } _GLIBCXX11_DEPRECATED_SUGGEST("std::bind");$/;"	v	namespace:std	typeref:class:std::binder2nd
_GLIBCXX11_DEPRECATED_SUGGEST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX11_DEPRECATED_SUGGEST(/;"	d
_GLIBCXX14_CONSTEXPR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX14_CONSTEXPR /;"	d
_GLIBCXX14_CONSTEXPR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX14_CONSTEXPR$/;"	d
_GLIBCXX14_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX14_DEPRECATED /;"	d
_GLIBCXX14_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX14_DEPRECATED$/;"	d
_GLIBCXX14_DEPRECATED_SUGGEST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX14_DEPRECATED_SUGGEST(/;"	d
_GLIBCXX17_CONSTEXPR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX17_CONSTEXPR /;"	d
_GLIBCXX17_CONSTEXPR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX17_CONSTEXPR$/;"	d
_GLIBCXX17_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^      typedef _Arg      argument_type _GLIBCXX17_DEPRECATED;$/;"	t	struct:std::__hash_base	typeref:typename:_Arg argument_type
_GLIBCXX17_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^      typedef _Result     result_type _GLIBCXX17_DEPRECATED;$/;"	t	struct:std::__hash_base	typeref:typename:_Result result_type
_GLIBCXX17_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX17_DEPRECATED /;"	d
_GLIBCXX17_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX17_DEPRECATED$/;"	d
_GLIBCXX17_DEPRECATED_SUGGEST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX17_DEPRECATED_SUGGEST(/;"	d
_GLIBCXX17_INLINE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX17_INLINE /;"	d
_GLIBCXX17_INLINE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX17_INLINE$/;"	d
_GLIBCXX20_CONSTEXPR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX20_CONSTEXPR /;"	d
_GLIBCXX20_CONSTEXPR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX20_CONSTEXPR$/;"	d
_GLIBCXX20_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX20_DEPRECATED /;"	d
_GLIBCXX20_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX20_DEPRECATED$/;"	d
_GLIBCXX20_DEPRECATED_SUGGEST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX20_DEPRECATED_SUGGEST(/;"	d
_GLIBCXX20_INIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^# define _GLIBCXX20_INIT(/;"	d
_GLIBCXX23_CONSTEXPR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX23_CONSTEXPR /;"	d
_GLIBCXX23_CONSTEXPR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX23_CONSTEXPR$/;"	d
_GLIBCXX23_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX23_DEPRECATED /;"	d
_GLIBCXX23_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX23_DEPRECATED$/;"	d
_GLIBCXX23_DEPRECATED_SUGGEST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX23_DEPRECATED_SUGGEST(/;"	d
_GLIBCXX_ABI_TAG_CXX11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_ABI_TAG_CXX11 /;"	d
_GLIBCXX_ALGORITHMFWD_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@algorithmfwd.h	/^#define _GLIBCXX_ALGORITHMFWD_H /;"	d
_GLIBCXX_ALIGN_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@align.h	/^#define _GLIBCXX_ALIGN_H /;"	d
_GLIBCXX_ALWAYS_INLINE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^#define _GLIBCXX_ALWAYS_INLINE /;"	d
_GLIBCXX_ALWAYS_INLINE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^# define _GLIBCXX_ALWAYS_INLINE /;"	d
_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^#define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC /;"	d
_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^#define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC$/;"	d
_GLIBCXX_ASAN_ANNOTATE_GREW	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^#define _GLIBCXX_ASAN_ANNOTATE_GREW(/;"	d
_GLIBCXX_ASAN_ANNOTATE_GROW	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^#define _GLIBCXX_ASAN_ANNOTATE_GROW(/;"	d
_GLIBCXX_ASAN_ANNOTATE_REINIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^#define _GLIBCXX_ASAN_ANNOTATE_REINIT /;"	d
_GLIBCXX_ASAN_ANNOTATE_REINIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^#define _GLIBCXX_ASAN_ANNOTATE_REINIT$/;"	d
_GLIBCXX_ASAN_ANNOTATE_SHRINK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^#define _GLIBCXX_ASAN_ANNOTATE_SHRINK(/;"	d
_GLIBCXX_ASSERTIONS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#define _GLIBCXX_ASSERTIONS /;"	d
_GLIBCXX_ATOMICITY_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@atomicity.h	/^#define _GLIBCXX_ATOMICITY_H	/;"	d
_GLIBCXX_ATOMIC_BASE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^#define _GLIBCXX_ATOMIC_BASE_H /;"	d
_GLIBCXX_ATOMIC_LOCK_FREE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_lockfree_defines.h	/^#define _GLIBCXX_ATOMIC_LOCK_FREE_H /;"	d
_GLIBCXX_ATOMIC_WORD_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@atomic_word.h	/^#define _GLIBCXX_ATOMIC_WORD_H	/;"	d
_GLIBCXX_BEGIN_INLINE_ABI_NAMESPACE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^_GLIBCXX_BEGIN_INLINE_ABI_NAMESPACE(_V2)$/;"	f	namespace:std
_GLIBCXX_BEGIN_INLINE_ABI_NAMESPACE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_BEGIN_INLINE_ABI_NAMESPACE(/;"	d
_GLIBCXX_BEGIN_NAMESPACE_ALGO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_BEGIN_NAMESPACE_ALGO /;"	d
_GLIBCXX_BEGIN_NAMESPACE_ALGO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_BEGIN_NAMESPACE_ALGO$/;"	d
_GLIBCXX_BEGIN_NAMESPACE_CONTAINER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER /;"	d
_GLIBCXX_BEGIN_NAMESPACE_CONTAINER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER$/;"	d
_GLIBCXX_BEGIN_NAMESPACE_CXX11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_BEGIN_NAMESPACE_CXX11 /;"	d
_GLIBCXX_BEGIN_NAMESPACE_CXX11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_BEGIN_NAMESPACE_CXX11$/;"	d
_GLIBCXX_BEGIN_NAMESPACE_LDBL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_BEGIN_NAMESPACE_LDBL /;"	d
_GLIBCXX_BEGIN_NAMESPACE_LDBL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_BEGIN_NAMESPACE_LDBL$/;"	d
_GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 /;"	d
_GLIBCXX_BEGIN_NAMESPACE_VERSION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_BEGIN_NAMESPACE_VERSION /;"	d
_GLIBCXX_BEGIN_NAMESPACE_VERSION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_BEGIN_NAMESPACE_VERSION$/;"	d
_GLIBCXX_BITS_STD_ABS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^#define _GLIBCXX_BITS_STD_ABS_H$/;"	d
_GLIBCXX_BITS_UNIFORM_INT_DIST_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^#define _GLIBCXX_BITS_UNIFORM_INT_DIST_H$/;"	d
_GLIBCXX_CDTOR_CALLABI	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cxxabi_init_exception.h	/^#define _GLIBCXX_CDTOR_CALLABI$/;"	d
_GLIBCXX_CHARCONV_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@charconv.h	/^#define _GLIBCXX_CHARCONV_H /;"	d
_GLIBCXX_CHRONO_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^#define _GLIBCXX_CHRONO_H /;"	d
_GLIBCXX_CHRONO_INT64_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^# define _GLIBCXX_CHRONO_INT64_T /;"	d
_GLIBCXX_CONST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_CONST /;"	d
_GLIBCXX_CONSTEXPR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX_CONSTEXPR /;"	d
_GLIBCXX_CONSTEXPR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX_CONSTEXPR$/;"	d
_GLIBCXX_CPU_DEFINES	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@cpu_defines.h	/^#define _GLIBCXX_CPU_DEFINES /;"	d
_GLIBCXX_CXA_VEC_CTOR_RETURN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@cxxabi_tweaks.h	/^#define _GLIBCXX_CXA_VEC_CTOR_RETURN(/;"	d
_GLIBCXX_CXX_ALLOCATOR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++allocator.h	/^#define _GLIBCXX_CXX_ALLOCATOR_H /;"	d
_GLIBCXX_CXX_CONFIG_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#define _GLIBCXX_CXX_CONFIG_H /;"	d
_GLIBCXX_CXX_LOCALE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++locale.h	/^#define _GLIBCXX_CXX_LOCALE_H /;"	d
_GLIBCXX_C_LOCALE_GNU	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++locale.h	/^#define _GLIBCXX_C_LOCALE_GNU /;"	d
_GLIBCXX_DEBUG_ASSERT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@assertions.h	/^# define _GLIBCXX_DEBUG_ASSERT(/;"	d
_GLIBCXX_DEBUG_ASSERTIONS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@assertions.h	/^#define _GLIBCXX_DEBUG_ASSERTIONS_H /;"	d
_GLIBCXX_DEBUG_MACRO_SWITCH_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^#define _GLIBCXX_DEBUG_MACRO_SWITCH_H /;"	d
_GLIBCXX_DEBUG_ONLY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@assertions.h	/^# define _GLIBCXX_DEBUG_ONLY(/;"	d
_GLIBCXX_DEBUG_PEDASSERT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@assertions.h	/^#  define _GLIBCXX_DEBUG_PEDASSERT(/;"	d
_GLIBCXX_DEBUG_PEDASSERT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@assertions.h	/^# define _GLIBCXX_DEBUG_PEDASSERT(/;"	d
_GLIBCXX_DEFAULT_ABI_TAG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_DEFAULT_ABI_TAG /;"	d
_GLIBCXX_DEFAULT_ABI_TAG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_DEFAULT_ABI_TAG$/;"	d
_GLIBCXX_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_DEPRECATED /;"	d
_GLIBCXX_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_DEPRECATED$/;"	d
_GLIBCXX_DEPRECATED_SUGGEST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _GLIBCXX_DEPRECATED_SUGGEST("std::iostate");$/;"	t	class:std::ios_base	typeref:typename:int io_state ()("std::iostate")
_GLIBCXX_DEPRECATED_SUGGEST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _GLIBCXX_DEPRECATED_SUGGEST("std::openmode");$/;"	t	class:std::ios_base	typeref:typename:int open_mode ()("std::openmode")
_GLIBCXX_DEPRECATED_SUGGEST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _GLIBCXX_DEPRECATED_SUGGEST("std::seekdir");$/;"	t	class:std::ios_base	typeref:typename:int seek_dir ()("std::seekdir")
_GLIBCXX_DEPRECATED_SUGGEST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _GLIBCXX_DEPRECATED_SUGGEST("std::streamoff");$/;"	t	class:std::ios_base	typeref:typename:std::streamoff streamoff ()("std::streamoff")
_GLIBCXX_DEPRECATED_SUGGEST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _GLIBCXX_DEPRECATED_SUGGEST("std::streampos");$/;"	t	class:std::ios_base	typeref:typename:std::streampos streampos ()("std::streampos")
_GLIBCXX_DEPRECATED_SUGGEST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_DEPRECATED_SUGGEST(/;"	d
_GLIBCXX_DEQUE_BUF_SIZE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^#define _GLIBCXX_DEQUE_BUF_SIZE /;"	d
_GLIBCXX_EH_PTR_USED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^# define _GLIBCXX_EH_PTR_USED /;"	d
_GLIBCXX_EH_PTR_USED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^# define _GLIBCXX_EH_PTR_USED$/;"	d
_GLIBCXX_END_INLINE_ABI_NAMESPACE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^_GLIBCXX_END_INLINE_ABI_NAMESPACE(_V2)$/;"	f	namespace:std
_GLIBCXX_END_INLINE_ABI_NAMESPACE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_END_INLINE_ABI_NAMESPACE(/;"	d
_GLIBCXX_END_NAMESPACE_ALGO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_END_NAMESPACE_ALGO /;"	d
_GLIBCXX_END_NAMESPACE_ALGO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_END_NAMESPACE_ALGO$/;"	d
_GLIBCXX_END_NAMESPACE_CONTAINER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_END_NAMESPACE_CONTAINER /;"	d
_GLIBCXX_END_NAMESPACE_CONTAINER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_END_NAMESPACE_CONTAINER$/;"	d
_GLIBCXX_END_NAMESPACE_CXX11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_END_NAMESPACE_CXX11 /;"	d
_GLIBCXX_END_NAMESPACE_CXX11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_END_NAMESPACE_CXX11$/;"	d
_GLIBCXX_END_NAMESPACE_LDBL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_END_NAMESPACE_LDBL /;"	d
_GLIBCXX_END_NAMESPACE_LDBL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_END_NAMESPACE_LDBL$/;"	d
_GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 /;"	d
_GLIBCXX_END_NAMESPACE_VERSION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_END_NAMESPACE_VERSION /;"	d
_GLIBCXX_END_NAMESPACE_VERSION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_END_NAMESPACE_VERSION$/;"	d
_GLIBCXX_ERROR_CONSTANTS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^#define _GLIBCXX_ERROR_CONSTANTS /;"	d
_GLIBCXX_EXTERN_TEMPLATE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_EXTERN_TEMPLATE /;"	d
_GLIBCXX_FORWARD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@move.h	/^#define _GLIBCXX_FORWARD(/;"	d
_GLIBCXX_FWDREF	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@move.h	/^#define _GLIBCXX_FWDREF(/;"	d
_GLIBCXX_GCC_GTHR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr.h	/^#define _GLIBCXX_GCC_GTHR_H$/;"	d
_GLIBCXX_GCC_GTHR_POSIX_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^#define _GLIBCXX_GCC_GTHR_POSIX_H$/;"	d
_GLIBCXX_GTHREAD_USE_WEAK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr.h	/^#define _GLIBCXX_GTHREAD_USE_WEAK /;"	d
_GLIBCXX_GTHREAD_USE_WEAK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@os_defines.h	/^#  define _GLIBCXX_GTHREAD_USE_WEAK /;"	d
_GLIBCXX_GUARD_BIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@cxxabi_tweaks.h	/^#define _GLIBCXX_GUARD_BIT /;"	d
_GLIBCXX_GUARD_PENDING_BIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@cxxabi_tweaks.h	/^#define _GLIBCXX_GUARD_PENDING_BIT /;"	d
_GLIBCXX_GUARD_SET	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@cxxabi_tweaks.h	/^#define _GLIBCXX_GUARD_SET(/;"	d
_GLIBCXX_GUARD_TEST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@cxxabi_tweaks.h	/^#define _GLIBCXX_GUARD_TEST(/;"	d
_GLIBCXX_GUARD_WAITING_BIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@cxxabi_tweaks.h	/^#define _GLIBCXX_GUARD_WAITING_BIT /;"	d
_GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY /;"	d
_GLIBCXX_HAVE_CDTOR_CALLABI	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cxxabi_init_exception.h	/^#define _GLIBCXX_HAVE_CDTOR_CALLABI /;"	d
_GLIBCXX_HAVE_FLOAT128_MATH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@os_defines.h	/^# define _GLIBCXX_HAVE_FLOAT128_MATH /;"	d
_GLIBCXX_HAVE_IS_CONSTANT_EVALUATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED /;"	d
_GLIBCXX_INCLUDE_NEXT_C_HEADERS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^#define _GLIBCXX_INCLUDE_NEXT_C_HEADERS$/;"	d
_GLIBCXX_INLINE_VERSION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_INLINE_VERSION /;"	d
_GLIBCXX_INT_N_TRAITS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^#define _GLIBCXX_INT_N_TRAITS(/;"	d
_GLIBCXX_INVOKE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^#define _GLIBCXX_INVOKE_H /;"	d
_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^#define _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(/;"	d
_GLIBCXX_MAKE_MOVE_ITERATOR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^#define _GLIBCXX_MAKE_MOVE_ITERATOR(/;"	d
_GLIBCXX_MEMORY_RESOURCE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^#define _GLIBCXX_MEMORY_RESOURCE_H /;"	d
_GLIBCXX_MEM_FN_TRAITS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^#define _GLIBCXX_MEM_FN_TRAITS(/;"	d
_GLIBCXX_MEM_FN_TRAITS2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^#define _GLIBCXX_MEM_FN_TRAITS2(/;"	d
_GLIBCXX_MOVE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@move.h	/^#define _GLIBCXX_MOVE(/;"	d
_GLIBCXX_MOVE3	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^#define _GLIBCXX_MOVE3(/;"	d
_GLIBCXX_MOVE_BACKWARD3	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^#define _GLIBCXX_MOVE_BACKWARD3(/;"	d
_GLIBCXX_NAMESPACE_CXX11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_NAMESPACE_CXX11 /;"	d
_GLIBCXX_NAMESPACE_CXX11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_NAMESPACE_CXX11$/;"	d
_GLIBCXX_NAMESPACE_LDBL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_NAMESPACE_LDBL /;"	d
_GLIBCXX_NAMESPACE_LDBL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_NAMESPACE_LDBL$/;"	d
_GLIBCXX_NAMESPACE_LDBL_OR_CXX11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 /;"	d
_GLIBCXX_NATIVE_THREAD_ID	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@os_defines.h	/^#  define _GLIBCXX_NATIVE_THREAD_ID /;"	d
_GLIBCXX_NESTED_EXCEPTION_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^#define _GLIBCXX_NESTED_EXCEPTION_H /;"	d
_GLIBCXX_NODISCARD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_NODISCARD /;"	d
_GLIBCXX_NODISCARD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_NODISCARD$/;"	d
_GLIBCXX_NOEXCEPT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX_NOEXCEPT /;"	d
_GLIBCXX_NOEXCEPT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX_NOEXCEPT$/;"	d
_GLIBCXX_NOEXCEPT_IF	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	_Deque_impl() _GLIBCXX_NOEXCEPT_IF($/;"	f	struct:std::_Deque_base::_Deque_impl	typeref:typename:_Deque_impl ()
_GLIBCXX_NOEXCEPT_IF	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	    _GLIBCXX_NOEXCEPT_IF($/;"	f	struct:std::_Rb_tree::_Rb_tree_impl	typeref:typename:_Rb_tree_impl ()
_GLIBCXX_NOEXCEPT_IF	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _GLIBCXX_NOEXCEPT_IF($/;"	f	struct:std::_Rb_tree_key_compare	typeref:typename:_Rb_tree_key_compare ()
_GLIBCXX_NOEXCEPT_IF	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX_NOEXCEPT_IF(/;"	d
_GLIBCXX_NOEXCEPT_PARM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#define _GLIBCXX_NOEXCEPT_PARM /;"	d
_GLIBCXX_NOEXCEPT_PARM	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#define _GLIBCXX_NOEXCEPT_PARM$/;"	d
_GLIBCXX_NOEXCEPT_QUAL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#define _GLIBCXX_NOEXCEPT_QUAL /;"	d
_GLIBCXX_NOEXCEPT_QUAL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#define _GLIBCXX_NOEXCEPT_QUAL$/;"	d
_GLIBCXX_NORETURN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_NORETURN /;"	d
_GLIBCXX_NOTHROW	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX_NOTHROW /;"	d
_GLIBCXX_NOTHROW	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_NOTHROW /;"	d
_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@os_defines.h	/^#define _GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC /;"	d
_GLIBCXX_NUM_CATEGORIES	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++locale.h	/^#define _GLIBCXX_NUM_CATEGORIES /;"	d
_GLIBCXX_NUM_CXX11_FACETS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^#define  _GLIBCXX_NUM_CXX11_FACETS /;"	d
_GLIBCXX_NUM_FACETS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^#define  _GLIBCXX_NUM_FACETS /;"	d
_GLIBCXX_NUM_LBDL_ALT128_FACETS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^#define _GLIBCXX_NUM_LBDL_ALT128_FACETS /;"	d
_GLIBCXX_NUM_UNICODE_FACETS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^# define _GLIBCXX_NUM_UNICODE_FACETS /;"	d
_GLIBCXX_OPERATOR_DELETE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^# define _GLIBCXX_OPERATOR_DELETE /;"	d
_GLIBCXX_OPERATOR_NEW	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^# define _GLIBCXX_OPERATOR_NEW /;"	d
_GLIBCXX_OS_DEFINES	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@os_defines.h	/^#define _GLIBCXX_OS_DEFINES /;"	d
_GLIBCXX_PARSE_NUMBERS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^#define _GLIBCXX_PARSE_NUMBERS_H /;"	d
_GLIBCXX_POSTYPES_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^#define _GLIBCXX_POSTYPES_H /;"	d
_GLIBCXX_PREDEFINED_OPS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^#define _GLIBCXX_PREDEFINED_OPS_H	/;"	d
_GLIBCXX_PURE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_PURE /;"	d
_GLIBCXX_RANGE_ACCESS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^#define _GLIBCXX_RANGE_ACCESS_H /;"	d
_GLIBCXX_READ_MEM_BARRIER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@atomicity.h	/^#define _GLIBCXX_READ_MEM_BARRIER /;"	d
_GLIBCXX_READ_MEM_BARRIER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@atomic_word.h	/^#define _GLIBCXX_READ_MEM_BARRIER /;"	d
_GLIBCXX_REFWRAP_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^#define _GLIBCXX_REFWRAP_H /;"	d
_GLIBCXX_REGEX_STATE_LIMIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^#define _GLIBCXX_REGEX_STATE_LIMIT /;"	d
_GLIBCXX_RELEASE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#define _GLIBCXX_RELEASE /;"	d
_GLIBCXX_SANITIZE_STD_ALLOCATOR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++allocator.h	/^#   define _GLIBCXX_SANITIZE_STD_ALLOCATOR /;"	d
_GLIBCXX_SANITIZE_STD_ALLOCATOR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++allocator.h	/^#  define _GLIBCXX_SANITIZE_STD_ALLOCATOR /;"	d
_GLIBCXX_SIZED_DEALLOC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^# define _GLIBCXX_SIZED_DEALLOC(/;"	d
_GLIBCXX_STDLIB_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@stdlib.h	/^#define _GLIBCXX_STDLIB_H /;"	d
_GLIBCXX_STD_A	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_STD_A /;"	d
_GLIBCXX_STD_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_STD_C /;"	d
_GLIBCXX_STD_FUNCTION_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^#define _GLIBCXX_STD_FUNCTION_H /;"	d
_GLIBCXX_STRING_CONSTEXPR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^# define _GLIBCXX_STRING_CONSTEXPR /;"	d
_GLIBCXX_THIS_THREAD_SLEEP_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@this_thread_sleep.h	/^#define _GLIBCXX_THIS_THREAD_SLEEP_H /;"	d
_GLIBCXX_THREAD_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^#define _GLIBCXX_THREAD_H /;"	d
_GLIBCXX_THROW	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX_THROW(/;"	d
_GLIBCXX_THROW_OR_ABORT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX_THROW_OR_ABORT(/;"	d
_GLIBCXX_TSAN_MUTEX_DESTROY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^#define _GLIBCXX_TSAN_MUTEX_DESTROY(/;"	d
_GLIBCXX_TSAN_MUTEX_LOCKED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^#define _GLIBCXX_TSAN_MUTEX_LOCKED(/;"	d
_GLIBCXX_TSAN_MUTEX_POST_SIGNAL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^#define _GLIBCXX_TSAN_MUTEX_POST_SIGNAL(/;"	d
_GLIBCXX_TSAN_MUTEX_POST_UNLOCK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^#define _GLIBCXX_TSAN_MUTEX_POST_UNLOCK(/;"	d
_GLIBCXX_TSAN_MUTEX_PRE_SIGNAL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^#define _GLIBCXX_TSAN_MUTEX_PRE_SIGNAL(/;"	d
_GLIBCXX_TSAN_MUTEX_PRE_UNLOCK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^#define _GLIBCXX_TSAN_MUTEX_PRE_UNLOCK(/;"	d
_GLIBCXX_TSAN_MUTEX_TRY_LOCK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^#define _GLIBCXX_TSAN_MUTEX_TRY_LOCK(/;"	d
_GLIBCXX_TSAN_MUTEX_TRY_LOCK_FAILED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^#define _GLIBCXX_TSAN_MUTEX_TRY_LOCK_FAILED(/;"	d
_GLIBCXX_USE_ASSIGN_FOR_INIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^# define _GLIBCXX_USE_ASSIGN_FOR_INIT(/;"	d
_GLIBCXX_USE_CONSTEXPR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX_USE_CONSTEXPR /;"	d
_GLIBCXX_USE_CXX11_ABI	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_USE_CXX11_ABI /;"	d
_GLIBCXX_USE_DEPRECATED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_USE_DEPRECATED /;"	d
_GLIBCXX_USE_DUAL_ABI	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_USE_DUAL_ABI /;"	d
_GLIBCXX_USE_NOEXCEPT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#  define _GLIBCXX_USE_NOEXCEPT /;"	d
_GLIBCXX_UTILITY_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^#define _GLIBCXX_UTILITY_H /;"	d
_GLIBCXX_VISIBILITY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^# define _GLIBCXX_VISIBILITY(/;"	d
_GLIBCXX_WRITE_MEM_BARRIER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@atomicity.h	/^#define _GLIBCXX_WRITE_MEM_BARRIER /;"	d
_GLIBCXX_WRITE_MEM_BARRIER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@atomic_word.h	/^#define _GLIBCXX_WRITE_MEM_BARRIER /;"	d
_GTHREAD_USE_MUTEX_TIMEDLOCK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^#  define _GTHREAD_USE_MUTEX_TIMEDLOCK /;"	d
_G_fpos64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__fpos64_t.h	/^typedef struct _G_fpos64_t$/;"	s
_G_fpos_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__fpos_t.h	/^typedef struct _G_fpos_t$/;"	s
_Gen	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	_Gen;$/;"	t	function:std::shuffle	typeref:typename:remove_reference<_UniformRandomNumberGenerator>::type
_Gen	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      using _Gen = remove_reference_t<_UniformRandomBitGenerator>;$/;"	t	function:std::__sample	typeref:typename:remove_reference_t<_UniformRandomBitGenerator>
_Gresult_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	typedef typename _UniformRandomBitGenerator::result_type _Gresult_type;$/;"	t	function:std::uniform_int_distribution::__generate_impl	typeref:typename:_UniformRandomBitGenerator::result_type
_Gresult_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	typedef typename _UniformRandomBitGenerator::result_type _Gresult_type;$/;"	t	function:std::uniform_int_distribution::operator ()	typeref:typename:_UniformRandomBitGenerator::result_type
_Grow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	      _GLIBCXX20_CONSTEXPR _Grow(_Vector_impl&, size_type) { }$/;"	f	struct:std::_Vector_base::_Vector_impl::_Asan::_Grow	typeref:typename:_GLIBCXX20_CONSTEXPR
_Grow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	      _Grow(_Vector_impl& __impl, size_type __n)$/;"	f	struct:std::_Vector_base::_Vector_impl::_Asan::_Grow	typeref:typename:_GLIBCXX20_CONSTEXPR
_Grow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	    struct _Grow$/;"	s	struct:std::_Vector_base::_Vector_impl::_Asan
_Guarded_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	    _Guarded_ptr(_Sp_counted_array_base<_Alloc> __a)$/;"	f	struct:std::__shared_count::__shared_count::_Guarded_ptr
_Guarded_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	  struct _Guarded_ptr : _Sp_counted_array_base<_Alloc>$/;"	s	function:std::__shared_count::__shared_count
_HASH_BYTES_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@hash_bytes.h	/^#define _HASH_BYTES_H /;"	d
_Handler	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	      using _Handler = _Target_handler<_Res(_ArgTypes...), _Functor>;$/;"	t	function:std::function::target
_Handler	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	using _Handler$/;"	t	class:std::function
_Hash_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^  struct _Hash_impl$/;"	s	namespace:std
_INTPTR_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define _INTPTR_T$/;"	d
_IOFBF	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define _IOFBF /;"	d
_IOLBF	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define _IOLBF /;"	d
_IONBF	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define _IONBF /;"	d
_IOS_BASE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^#define _IOS_BASE_H /;"	d
_IO_EOF_SEEN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^#define _IO_EOF_SEEN /;"	d
_IO_ERR_SEEN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^#define _IO_ERR_SEEN /;"	d
_IO_FILE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^struct _IO_FILE$/;"	s
_IO_FILE_complete	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^struct _IO_FILE_complete$/;"	s
_IO_USER_LOCK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^#define _IO_USER_LOCK /;"	d
_IO_backup_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  char *_IO_backup_base;  \/* Pointer to first valid character of backup area *\/$/;"	m	struct:_IO_FILE	typeref:typename:char *
_IO_buf_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  char *_IO_buf_base;	\/* Start of reserve area. *\/$/;"	m	struct:_IO_FILE	typeref:typename:char *
_IO_buf_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  char *_IO_buf_end;	\/* End of reserve area. *\/$/;"	m	struct:_IO_FILE	typeref:typename:char *
_IO_cookie_io_functions_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@cookie_io_functions_t.h	/^typedef struct _IO_cookie_io_functions_t$/;"	s
_IO_lock_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^typedef void _IO_lock_t;$/;"	t	typeref:typename:void
_IO_read_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  char *_IO_read_base;	\/* Start of putback+get area. *\/$/;"	m	struct:_IO_FILE	typeref:typename:char *
_IO_read_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  char *_IO_read_end;	\/* End of get area. *\/$/;"	m	struct:_IO_FILE	typeref:typename:char *
_IO_read_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  char *_IO_read_ptr;	\/* Current read pointer *\/$/;"	m	struct:_IO_FILE	typeref:typename:char *
_IO_save_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  char *_IO_save_base; \/* Pointer to start of non-current get area. *\/$/;"	m	struct:_IO_FILE	typeref:typename:char *
_IO_save_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  char *_IO_save_end; \/* Pointer to end of non-current get area. *\/$/;"	m	struct:_IO_FILE	typeref:typename:char *
_IO_write_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  char *_IO_write_base;	\/* Start of put area. *\/$/;"	m	struct:_IO_FILE	typeref:typename:char *
_IO_write_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  char *_IO_write_end;	\/* End of put area. *\/$/;"	m	struct:_IO_FILE	typeref:typename:char *
_IO_write_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  char *_IO_write_ptr;	\/* Current put pointer. *\/$/;"	m	struct:_IO_FILE	typeref:typename:char *
_ISOC11_SOURCE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define _ISOC11_SOURCE	/;"	d
_ISOC2X_SOURCE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define _ISOC2X_SOURCE	/;"	d
_ISOC95_SOURCE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define _ISOC95_SOURCE	/;"	d
_ISOC99_SOURCE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define _ISOC99_SOURCE	/;"	d
_ISalnum	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^  _ISalnum = _ISbit (11)	\/* Alphanumeric.  *\/$/;"	e	enum:__anone306b5000103
_ISalpha	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^  _ISalpha = _ISbit (2),	\/* Alphabetic.  *\/$/;"	e	enum:__anone306b5000103
_ISbit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define _ISbit(/;"	d
_ISblank	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^  _ISblank = _ISbit (8),	\/* Blank (usually SPC and TAB).  *\/$/;"	e	enum:__anone306b5000103
_IScntrl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^  _IScntrl = _ISbit (9),	\/* Control character.  *\/$/;"	e	enum:__anone306b5000103
_ISdigit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^  _ISdigit = _ISbit (3),	\/* Numeric.  *\/$/;"	e	enum:__anone306b5000103
_ISgraph	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^  _ISgraph = _ISbit (7),	\/* Graphical.  *\/$/;"	e	enum:__anone306b5000103
_ISlower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^  _ISlower = _ISbit (1),	\/* lowercase.  *\/$/;"	e	enum:__anone306b5000103
_ISprint	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^  _ISprint = _ISbit (6),	\/* Printing.  *\/$/;"	e	enum:__anone306b5000103
_ISpunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^  _ISpunct = _ISbit (10),	\/* Punctuation.  *\/$/;"	e	enum:__anone306b5000103
_ISspace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^  _ISspace = _ISbit (5),	\/* Whitespace.  *\/$/;"	e	enum:__anone306b5000103
_ISupper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^  _ISupper = _ISbit (0),	\/* UPPERCASE.  *\/$/;"	e	enum:__anone306b5000103
_ISwalnum	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  _ISwalnum = _ISwbit (__ISwalnum)	\/* Alphanumeric.  *\/$/;"	e	enum:__anon16a540eb0103
_ISwalpha	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  _ISwalpha = _ISwbit (__ISwalpha),	\/* Alphabetic.  *\/$/;"	e	enum:__anon16a540eb0103
_ISwbit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^#   define _ISwbit(/;"	d
_ISwblank	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  _ISwblank = _ISwbit (__ISwblank),	\/* Blank (usually SPC and TAB).  *\/$/;"	e	enum:__anon16a540eb0103
_ISwcntrl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  _ISwcntrl = _ISwbit (__ISwcntrl),	\/* Control character.  *\/$/;"	e	enum:__anon16a540eb0103
_ISwdigit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  _ISwdigit = _ISwbit (__ISwdigit),	\/* Numeric.  *\/$/;"	e	enum:__anon16a540eb0103
_ISwgraph	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  _ISwgraph = _ISwbit (__ISwgraph),	\/* Graphical.  *\/$/;"	e	enum:__anon16a540eb0103
_ISwlower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  _ISwlower = _ISwbit (__ISwlower),	\/* lowercase.  *\/$/;"	e	enum:__anon16a540eb0103
_ISwprint	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  _ISwprint = _ISwbit (__ISwprint),	\/* Printing.  *\/$/;"	e	enum:__anon16a540eb0103
_ISwpunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  _ISwpunct = _ISwbit (__ISwpunct),	\/* Punctuation.  *\/$/;"	e	enum:__anon16a540eb0103
_ISwspace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  _ISwspace = _ISwbit (__ISwspace),	\/* Whitespace.  *\/$/;"	e	enum:__anon16a540eb0103
_ISwupper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  _ISwupper = _ISwbit (__ISwupper),	\/* UPPERCASE.  *\/$/;"	e	enum:__anon16a540eb0103
_ISwxdigit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  _ISwxdigit = _ISwbit (__ISwxdigit),	\/* Hexadecimal numeric.  *\/$/;"	e	enum:__anon16a540eb0103
_ISxdigit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^  _ISxdigit = _ISbit (4),	\/* Hexadecimal numeric.  *\/$/;"	e	enum:__anone306b5000103
_Identity	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct _Identity$/;"	s	namespace:std
_Identity	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^  template<typename _Tp> struct _Identity<const _Tp> : _Identity<_Tp> { };$/;"	s	namespace:std
_IdxTuple	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^	using _IdxTuple = _Index_tuple<_Indices...>;$/;"	t	struct:std::_Build_index_tuple	typeref:typename:_Index_tuple<_Indices...>
_If_sv	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	using _If_sv = enable_if_t<$/;"	t	class:std::basic_string
_Impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^  class locale::_Impl$/;"	c	class:std::locale
_Impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	_Impl(_Ptr __p, _Deleter __d, const _Alloc& __a) noexcept$/;"	f	class:std::_Sp_counted_deleter::_Impl
_Impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }$/;"	f	class:std::_Sp_counted_ptr_inplace::_Impl
_Impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      class _Impl : _Sp_ebo_helper<0, _Alloc>$/;"	c	class:std::_Sp_counted_ptr_inplace
_Impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      class _Impl : _Sp_ebo_helper<0, _Deleter>, _Sp_ebo_helper<1, _Alloc>$/;"	c	class:std::_Sp_counted_deleter
_Impl_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    struct _Impl_base$/;"	s	class:std::thread
_ImplicitlyConvertiblePair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      static constexpr bool _ImplicitlyConvertiblePair()$/;"	f	struct:std::_PCC	typeref:typename:bool
_ImplicitlyMoveConvertiblePair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      static constexpr bool _ImplicitlyMoveConvertiblePair()$/;"	f	struct:std::_PCC	typeref:typename:bool
_Index_tuple	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^  template<size_t... _Indexes> struct _Index_tuple { };$/;"	s	namespace:std
_Indices	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^	  using _Indices$/;"	t	function:std::thread::_Invoker::operator ()	typeref:typename:_Build_index_tuple<tuple_size<_Tuple>::value>::__type
_InputValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	_InputValueType;$/;"	t	function:std::__partial_sort_copy	typeref:typename:iterator_traits<_InputIterator>::value_type
_InputValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	_InputValueType;$/;"	t	function:std::partial_sort_copy	typeref:typename:iterator_traits<_InputIterator>::value_type
_IntSize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      typedef __decltype(std::__size_to_integer(__n)) _IntSize;$/;"	t	function:std::generate_n
_Integral	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;$/;"	t	function:std::basic_string::replace	typeref:typename:std::__is_integer<_InputIterator>::__type
_Integral	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;$/;"	t	function:std::vector::assign	typeref:typename:std::__is_integer<_InputIterator>::__type
_Integral	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;$/;"	t	function:std::vector::insert	typeref:typename:std::__is_integer<_InputIterator>::__type
_Integral	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;$/;"	t	function:std::vector::vector	typeref:typename:std::__is_integer<_InputIterator>::__type
_Integral	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;$/;"	t	function:std::deque::assign	typeref:typename:std::__is_integer<_InputIterator>::__type
_Integral	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;$/;"	t	function:std::deque::deque	typeref:typename:std::__is_integer<_InputIterator>::__type
_Integral	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;$/;"	t	function:std::deque::insert	typeref:typename:std::__is_integer<_InputIterator>::__type
_Integral	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;$/;"	t	function:std::vector::assign	typeref:typename:std::__is_integer<_InputIterator>::__type
_Integral	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;$/;"	t	function:std::vector::insert	typeref:typename:std::__is_integer<_InputIterator>::__type
_Integral	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;$/;"	t	function:std::vector::vector	typeref:typename:std::__is_integer<_InputIterator>::__type
_Invoker	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^	  _Invoker(_Args&&... __args)$/;"	f	struct:std::thread::_Invoker
_Invoker	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^      struct _Invoker$/;"	s	class:std::thread
_Invoker_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      using _Invoker_type = _Res (*)(const _Any_data&, _ArgTypes&&...);$/;"	t	class:std::function
_Ios_Fmtflags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  enum _Ios_Fmtflags $/;"	g	namespace:std
_Ios_Iostate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  enum _Ios_Iostate$/;"	g	namespace:std
_Ios_Openmode	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  enum _Ios_Openmode $/;"	g	namespace:std
_Ios_Seekdir	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  enum _Ios_Seekdir $/;"	g	namespace:std
_It1_is_RA	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      using _It1_is_RA = is_same<_Cat1, random_access_iterator_tag>;$/;"	t	function:std::__is_permutation	typeref:typename:is_same<_Cat1,random_access_iterator_tag>
_It2_is_RA	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      using _It2_is_RA = is_same<_Cat2, random_access_iterator_tag>;$/;"	t	function:std::__is_permutation	typeref:typename:is_same<_Cat2,random_access_iterator_tag>
_Iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	      struct _Iter$/;"	s	function:std::_Sp_counted_array_base::_M_init
_Iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using _Iter = std::__detail::__range_iter_t<_Container>;$/;"	t	class:std::insert_iterator	typeref:typename:std::__detail::__range_iter_t<_Container>
_Iter_comp_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Iter_comp_iter(_Compare __comp)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_iter	typeref:typename:_GLIBCXX14_CONSTEXPR
_Iter_comp_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    struct _Iter_comp_iter$/;"	s	namespace:__gnu_cxx::__ops
_Iter_comp_to_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Iter_comp_to_iter(_Compare __comp, _Iterator1 __it1)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_to_iter	typeref:typename:_GLIBCXX20_CONSTEXPR
_Iter_comp_to_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    struct _Iter_comp_to_iter$/;"	s	namespace:__gnu_cxx::__ops
_Iter_comp_to_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Iter_comp_to_val(_Compare __comp, _Value& __value)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_to_val	typeref:typename:_GLIBCXX20_CONSTEXPR
_Iter_comp_to_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    struct _Iter_comp_to_val$/;"	s	namespace:__gnu_cxx::__ops
_Iter_comp_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Iter_comp_val(_Compare __comp)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_val	typeref:typename:_GLIBCXX20_CONSTEXPR
_Iter_comp_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Iter_comp_val(_Iter_comp_iter<_Compare>&& __comp)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_val	typeref:typename:_GLIBCXX20_CONSTEXPR
_Iter_comp_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Iter_comp_val(const _Iter_comp_iter<_Compare>& __comp)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_val	typeref:typename:_GLIBCXX20_CONSTEXPR
_Iter_comp_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    struct _Iter_comp_val$/;"	s	namespace:__gnu_cxx::__ops
_Iter_equal_to_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^  struct _Iter_equal_to_iter$/;"	s	namespace:__gnu_cxx::__ops
_Iter_equal_to_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^  struct _Iter_equal_to_val$/;"	s	namespace:__gnu_cxx::__ops
_Iter_equals_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Iter_equals_iter(_Iterator1 __it1)$/;"	f	struct:__gnu_cxx::__ops::_Iter_equals_iter	typeref:typename:_GLIBCXX20_CONSTEXPR
_Iter_equals_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    struct _Iter_equals_iter$/;"	s	namespace:__gnu_cxx::__ops
_Iter_equals_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Iter_equals_val(_Value& __value)$/;"	f	struct:__gnu_cxx::__ops::_Iter_equals_val	typeref:typename:_GLIBCXX20_CONSTEXPR
_Iter_equals_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    struct _Iter_equals_val$/;"	s	namespace:__gnu_cxx::__ops
_Iter_less_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^  struct _Iter_less_iter$/;"	s	namespace:__gnu_cxx::__ops
_Iter_less_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    _Iter_less_val(_Iter_less_iter) { }$/;"	f	struct:__gnu_cxx::__ops::_Iter_less_val	typeref:typename:_GLIBCXX20_CONSTEXPR
_Iter_less_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^  struct _Iter_less_val$/;"	s	namespace:__gnu_cxx::__ops
_Iter_negate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Iter_negate(_Predicate __pred)$/;"	f	struct:__gnu_cxx::__ops::_Iter_negate	typeref:typename:_GLIBCXX20_CONSTEXPR
_Iter_negate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    struct _Iter_negate$/;"	s	namespace:__gnu_cxx::__ops
_Iter_pred	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Iter_pred(_Predicate __pred)$/;"	f	struct:__gnu_cxx::__ops::_Iter_pred	typeref:typename:_GLIBCXX20_CONSTEXPR
_Iter_pred	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    struct _Iter_pred$/;"	s	namespace:__gnu_cxx::__ops
_LARGEFILE64_SOURCE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define _LARGEFILE64_SOURCE	/;"	d
_LARGEFILE_SOURCE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#  define _LARGEFILE_SOURCE	/;"	d
_LIBINTL_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@libintl.h	/^#define _LIBINTL_H	/;"	d
_LOCALE_CLASSES_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^#define _LOCALE_CLASSES_H /;"	d
_LOCALE_CONV_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^#define _LOCALE_CONV_H /;"	d
_LOCALE_FACETS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^#define _LOCALE_FACETS_H /;"	d
_LOCALE_FACETS_NONIO_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^#define _LOCALE_FACETS_NONIO_H /;"	d
_LOCALE_FWD_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@localefwd.h	/^#define _LOCALE_FWD_H /;"	d
_LOCALE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^#define	_LOCALE_H	/;"	d
_Link_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Rb_tree_node<_Tp>*		_Link_type;$/;"	t	struct:std::_Rb_tree_iterator	typeref:typename:_Rb_tree_node<_Tp> *
_Link_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Rb_tree_node<_Val>* 		_Link_type;$/;"	t	class:std::_Rb_tree	typeref:typename:_Rb_tree_node<_Val> *
_Link_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Rb_tree_node<_Val>* _Link_type;$/;"	t	struct:std::_Rb_tree_node	typeref:typename:_Rb_tree_node<_Val> *
_Link_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef const _Rb_tree_node<_Tp>*			_Link_type;$/;"	t	struct:std::_Rb_tree_const_iterator	typeref:typename:const _Rb_tree_node<_Tp> *
_Local_storage	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	using _Local_storage = integral_constant<bool, __stored_locally>;$/;"	t	class:std::_Function_base::_Base_manager	typeref:typename:integral_constant<bool,__stored_locally>
_Lock_policy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  enum _Lock_policy { _S_single, _S_mutex, _S_atomic }; $/;"	g	namespace:__gnu_cxx
_MEMORYFWD_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memoryfwd.h	/^#define _MEMORYFWD_H /;"	d
_MOVE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@move.h	/^#define _MOVE_H /;"	d
_M_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      const _Alloc& _M_a;$/;"	m	struct:std::_Sp_alloc_shared_tag	typeref:typename:const _Alloc &
_M_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	_IntType _M_a;$/;"	m	struct:std::uniform_int_distribution::param_type	typeref:typename:_IntType
_M_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    struct _Sink { void _GLIBCXX20_CONSTEXPR operator=(const void*) { } } _M_a;$/;"	m	struct:std::__uses_alloc0	typeref:struct:std::__uses_alloc0::_Sink
_M_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    struct __uses_alloc1 : __uses_alloc_base { const _Alloc* _M_a; };$/;"	m	struct:std::__uses_alloc1	typeref:typename:const _Alloc *
_M_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    struct __uses_alloc2 : __uses_alloc_base { const _Alloc* _M_a; };$/;"	m	struct:std::__uses_alloc2	typeref:typename:const _Alloc *
_M_access	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      _M_access() const noexcept$/;"	f	union:std::_Any_data	typeref:typename:const _Tp &
_M_access	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      _M_access() noexcept$/;"	f	union:std::_Any_data	typeref:typename:_Tp &
_M_access	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    const void* _M_access() const noexcept { return &_M_pod_data[0]; }$/;"	f	union:std::_Any_data	typeref:typename:const void *
_M_access	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    void*       _M_access()       noexcept { return &_M_pod_data[0]; }$/;"	f	union:std::_Any_data	typeref:typename:void *
_M_aday1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_aday1;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_aday2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_aday2;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_aday3	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_aday3;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_aday4	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_aday4;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_aday5	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_aday5;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_aday6	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_aday6;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_aday7	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_aday7;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_add_char	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_add_char(_CharT __c)$/;"	f	struct:std::__detail::_BracketMatcher	typeref:typename:void
_M_add_character_class	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_add_character_class(const _StringT& __s, bool __neg)$/;"	f	struct:std::__detail::_BracketMatcher	typeref:typename:void
_M_add_collate_element	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_add_collate_element(const _StringT& __s)$/;"	f	struct:std::__detail::_BracketMatcher	typeref:typename:_StringT
_M_add_equivalence_class	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_add_equivalence_class(const _StringT& __s)$/;"	f	struct:std::__detail::_BracketMatcher	typeref:typename:void
_M_add_ref_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_add_ref_copy()$/;"	f	class:std::_Sp_counted_base	typeref:typename:void
_M_add_ref_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    _Sp_counted_base<_S_single>::_M_add_ref_copy()$/;"	f	class:std::_Sp_counted_base	typeref:typename:void
_M_add_ref_lock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_add_ref_lock()$/;"	f	class:std::_Sp_counted_base	typeref:typename:void
_M_add_ref_lock_nothrow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    _M_add_ref_lock_nothrow() noexcept$/;"	f	class:std::_Sp_counted_base	typeref:typename:bool
_M_add_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _M_add_reference() { __gnu_cxx::__atomic_add_dispatch(&_M_refcount, 1); }$/;"	f	struct:std::ios_base::_Callback_list	typeref:typename:void
_M_add_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    _M_add_reference() const throw()$/;"	f	class:std::locale::facet	typeref:typename:void
_M_add_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    _M_add_reference() throw()$/;"	f	class:std::locale::_Impl	typeref:typename:void
_M_addr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^      _M_addr() const noexcept$/;"	f	struct:__gnu_cxx::__aligned_buffer	typeref:typename:const void *
_M_addr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^      _M_addr() const noexcept$/;"	f	struct:__gnu_cxx::__aligned_membuf	typeref:typename:const void *
_M_addr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^      _M_addr() noexcept$/;"	f	struct:__gnu_cxx::__aligned_buffer	typeref:typename:void *
_M_addr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^      _M_addr() noexcept$/;"	f	struct:__gnu_cxx::__aligned_membuf	typeref:typename:void *
_M_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocated_ptr.h	/^      _Alloc* _M_alloc;$/;"	m	struct:std::__allocated_ptr	typeref:typename:_Alloc *
_M_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^	[[__no_unique_address__]] _NodeAlloc _M_alloc;$/;"	m	union:std::_Node_handle_common::_Optional_alloc	typeref:typename:_NodeAlloc
_M_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      [[__no_unique_address__]] _Optional_alloc _M_alloc;$/;"	m	class:std::_Node_handle_common	typeref:typename:_Optional_alloc
_M_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	_Alloc& _M_alloc() noexcept { return _A_base::_S_get(*this); }$/;"	f	class:std::_Sp_counted_ptr_inplace::_Impl	typeref:typename:_Alloc &
_M_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	_Alloc& _M_alloc() noexcept { return _Alloc_base::_S_get(*this); }$/;"	f	class:std::_Sp_counted_deleter::_Impl	typeref:typename:_Alloc &
_M_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      [[no_unique_address]] _Alloc _M_alloc;$/;"	m	class:std::_Sp_counted_ptr_inplace	typeref:typename:_Alloc
_M_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      [[no_unique_address]] _Alloc _M_alloc{};$/;"	m	struct:std::_Sp_counted_array_base	typeref:typename:_Alloc
_M_alloc_array	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_alloc_array(size_t __tail)$/;"	f	struct:std::_Sp_counted_array_base	typeref:typename:allocator_traits<_Alloc>::pointer
_M_alloc_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      pointer _M_alloc_ptr;$/;"	m	class:std::_Sp_counted_array	typeref:typename:pointer
_M_allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _M_allocate(size_t __n)$/;"	f	struct:std::_Bvector_base	typeref:typename:_GLIBCXX20_CONSTEXPR _Bit_pointer
_M_allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _M_allocate(size_t __n)$/;"	f	struct:std::_Vector_base	typeref:typename:_GLIBCXX20_CONSTEXPR pointer
_M_allocate_and_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_allocate_and_copy(size_type __n,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR pointer
_M_allocate_map	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_allocate_map(size_t __n)$/;"	f	class:std::_Deque_base	typeref:typename:_Map_pointer
_M_allocate_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_allocate_node()$/;"	f	class:std::_Deque_base	typeref:typename:_Ptr
_M_allocated	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      bool				_M_allocated;$/;"	m	struct:std::__numpunct_cache	typeref:typename:bool
_M_allocated	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      bool				_M_allocated;$/;"	m	struct:std::__moneypunct_cache	typeref:typename:bool
_M_allocated	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      bool				_M_allocated;$/;"	m	struct:std::__timepunct_cache	typeref:typename:bool
_M_allocated_capacity	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	size_type        _M_allocated_capacity;$/;"	m	union:std::basic_string::__anon8c4663c1020a	typeref:typename:size_type
_M_alt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^	_StateIdT  _M_alt;$/;"	m	struct:std::__detail::_State_base::__anonb226b13b010a::__anonb226b13b0208	typeref:typename:_StateIdT
_M_always_noconv	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      bool			_M_always_noconv;$/;"	m	class:std::wbuffer_convert	typeref:typename:bool
_M_am	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_am;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_am_pm	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _M_am_pm(const _CharT** __ampm) const$/;"	f	class:std::__timepunct	typeref:typename:void
_M_am_pm_format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _M_am_pm_format(const _CharT*) const$/;"	f	class:std::__timepunct	typeref:typename:void
_M_am_pm_format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _M_am_pm_format(const _CharT** __ampm_format) const$/;"	f	class:std::__timepunct	typeref:typename:void
_M_am_pm_format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_am_pm_format;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_amonth01	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_amonth01;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_amonth02	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_amonth02;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_amonth03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_amonth03;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_amonth04	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_amonth04;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_amonth05	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_amonth05;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_amonth06	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_amonth06;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_amonth07	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_amonth07;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_amonth08	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_amonth08;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_amonth09	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_amonth09;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_amonth10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_amonth10;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_amonth11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_amonth11;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_amonth12	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_amonth12;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_append	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_append(_StateIdT __id)$/;"	f	class:std::__detail::_StateSeq	typeref:typename:void
_M_append	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_append(const _StateSeq& __s)$/;"	f	class:std::__detail::_StateSeq	typeref:typename:void
_M_apply	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_apply(_CharT __ch, false_type) const$/;"	f	struct:std::__detail::_AnyMatcher	typeref:typename:bool
_M_apply	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_apply(_CharT __ch, true_type) const$/;"	f	struct:std::__detail::_AnyMatcher	typeref:typename:bool
_M_apply	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_apply(_CharT __ch, true_type) const$/;"	f	struct:std::__detail::_BracketMatcher	typeref:typename:bool
_M_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_assign(_Tp* __ptr, const __shared_count<_Lp>& __refcount) noexcept$/;"	f	class:std::__weak_ptr	typeref:typename:void
_M_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _M_assign(_CIt&& __x)$/;"	f	class:std::common_iterator	typeref:typename:void
_M_assign_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_assign_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_M_assign_aux(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_assign_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	class:std::deque	typeref:typename:void
_M_assign_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector	typeref:typename:void
_M_assign_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)$/;"	f	class:std::vector	typeref:typename:void
_M_assign_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::deque	typeref:typename:void
_M_assign_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)$/;"	f	class:std::deque	typeref:typename:void
_M_assign_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_assign_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_assign_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_assign_equal(_Iterator __first, _Iterator __last)$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_assign_unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_assign_unique(_Iterator __first, _Iterator __last)$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_at_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      _M_at_begin() const$/;"	f	class:std::__detail::_Executor	typeref:typename:bool
_M_at_bracket_start	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    bool                          _M_at_bracket_start;$/;"	m	struct:std::__detail::_ScannerBase	typeref:typename:bool
_M_at_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      _M_at_end() const$/;"	f	class:std::__detail::_Executor	typeref:typename:bool
_M_at_eof	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      _M_at_eof() const$/;"	f	class:std::istreambuf_iterator	typeref:typename:bool
_M_atoms	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _CharT				_M_atoms[money_base::_S_end];$/;"	m	struct:std::__moneypunct_cache	typeref:typename:_CharT[]
_M_atoms_in	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      _CharT				_M_atoms_in[__num_base::_S_iend];$/;"	m	struct:std::__numpunct_cache	typeref:typename:_CharT[]
_M_atoms_out	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      _CharT				_M_atoms_out[__num_base::_S_oend];$/;"	m	struct:std::__numpunct_cache	typeref:typename:_CharT[]
_M_automaton	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _AutomatonPtr	_M_automaton;$/;"	m	class:std::basic_regex	typeref:typename:_AutomatonPtr
_M_awk_escape_tbl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    const std::pair<char, char> _M_awk_escape_tbl[11] =$/;"	m	struct:std::__detail::_ScannerBase	typeref:typename:const std::pair<char,char>[11]
_M_b	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	_IntType _M_b;$/;"	m	struct:std::uniform_int_distribution::param_type	typeref:typename:_IntType
_M_backref_index	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      size_t _M_backref_index;  \/\/ for _S_opcode_backref$/;"	m	union:std::__detail::_State_base::__anonb226b13b010a	typeref:typename:size_t
_M_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  _BaseType _M_base;$/;"	m	struct:std::regex_traits::_RegexMask	typeref:typename:_BaseType
_M_basic_spec_char	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    const char* _M_basic_spec_char = ".[\\\\*^$";$/;"	m	struct:std::__detail::_ScannerBase	typeref:typename:const char *
_M_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _Bi_iter				_M_begin {};$/;"	m	class:std::regex_iterator	typeref:typename:_Bi_iter
_M_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _Bi_iter _M_begin {};$/;"	m	class:std::match_results	typeref:typename:_Bi_iter
_M_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      _BiIter                                               _M_begin;$/;"	m	class:std::__detail::_Executor	typeref:typename:_BiIter
_M_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_begin() _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Link_type
_M_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_begin() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Const_Link_type
_M_bit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      mask                      _M_bit[16];$/;"	m	class:std::ctype	typeref:typename:mask[16]
_M_buf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      streambuf*			_M_buf;$/;"	m	class:std::wbuffer_convert	typeref:typename:streambuf *
_M_buffer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^      pointer    _M_buffer;$/;"	m	class:std::_Temporary_buffer	typeref:typename:pointer
_M_bump_down	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    _M_bump_down()$/;"	f	struct:std::_Bit_iterator_base	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_bump_up	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    _M_bump_up()$/;"	f	struct:std::_Bit_iterator_base	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_byte	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	  unsigned char _M_byte;$/;"	m	union:std::vector::_Temporary_value::_Storage	typeref:typename:unsigned char
_M_byte_err_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      byte_string		_M_byte_err_string;$/;"	m	class:std::wstring_convert	typeref:typename:byte_string
_M_c	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      int_type			_M_c;$/;"	m	class:std::istreambuf_iterator	typeref:typename:int_type
_M_c_locale_codecvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      __c_locale			_M_c_locale_codecvt;$/;"	m	class:std::codecvt	typeref:typename:__c_locale
_M_c_locale_collate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      __c_locale			_M_c_locale_collate;$/;"	m	class:std::collate	typeref:typename:__c_locale
_M_c_locale_ctype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      __c_locale		_M_c_locale_ctype;$/;"	m	class:std::ctype	typeref:typename:__c_locale
_M_c_locale_messages	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      __c_locale			_M_c_locale_messages;$/;"	m	class:std::messages	typeref:typename:__c_locale
_M_c_locale_timepunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      __c_locale			_M_c_locale_timepunct;$/;"	m	class:std::__timepunct	typeref:typename:__c_locale
_M_cache	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _CacheT					_M_cache;$/;"	m	struct:std::__detail::_BracketMatcher	typeref:typename:_CacheT
_M_caches	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    const facet**			_M_caches;$/;"	m	class:std::locale::_Impl	typeref:typename:const facet **
_M_callbacks	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^     _Callback_list*	_M_callbacks;$/;"	m	class:std::ios_base	typeref:typename:_Callback_list *
_M_capacity	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_capacity(size_type __capacity)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_cat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^	const void*	_M_cat;$/;"	m	struct:std::ios_base::system_error::error_code	typeref:typename:const void *
_M_century	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    int _M_century;$/;"	m	struct:std::__time_get_state	typeref:typename:int
_M_ch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _CharT  _M_ch;$/;"	m	struct:std::__detail::_CharMatcher	typeref:typename:_CharT
_M_char	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^	_CharT _M_char = _CharT();$/;"	m	struct:std::__detail::_Compiler::_BracketState	typeref:typename:_CharT
_M_char_set	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _GLIBCXX_STD_C::vector<_CharT>            _M_char_set;$/;"	m	struct:std::__detail::_BracketMatcher	typeref:typename:_GLIBCXX_STD_C::vector<_CharT>
_M_check	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_check(size_type __pos, const char* __s) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR size_type
_M_check_len	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _M_check_len(size_type __n, const char* __s) const$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR size_type
_M_check_len	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _M_check_len(size_type __n, const char* __s) const$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR size_type
_M_check_length	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_check_length(size_type __n1, size_type __n2, const char* __s) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_check_same_name	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    _M_check_same_name()$/;"	f	class:std::locale::_Impl	typeref:typename:bool
_M_class_set	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _CharClassT                               _M_class_set;$/;"	m	struct:std::__detail::_BracketMatcher	typeref:typename:_CharClassT
_M_clone_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_clone_node(_Link_type __x, _NodeGen& __node_gen)$/;"	f	class:std::_Rb_tree	typeref:typename:_Link_type
_M_cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	decltype(__x <=> __y) _M_cmp;$/;"	m	struct:std::__min_cmp::_Res	typeref:typename:decltype(__x<=>__y)
_M_code	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      } _M_code;$/;"	m	struct:std::ios_base::system_error	typeref:struct:std::ios_base::system_error::error_code
_M_code	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^    error_type _M_code;$/;"	m	class:std::regex_error	typeref:typename:error_type
_M_color	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _Rb_tree_color	_M_color;$/;"	m	struct:std::_Rb_tree_node_base	typeref:typename:_Rb_tree_color
_M_comp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_iter	typeref:typename:_Compare
_M_comp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_to_iter	typeref:typename:_Compare
_M_comp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_to_val	typeref:typename:_Compare
_M_comp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_val	typeref:typename:_Compare
_M_comp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_cxx::__ops::_Val_comp_iter	typeref:typename:_Compare
_M_compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _M_compare(const value_type* __s, size_t __n) const$/;"	f	class:std::sub_match	typeref:typename:int
_M_compile	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _M_compile(const _Ch_type* __first, const _Ch_type* __last,$/;"	f	class:std::basic_regex	typeref:typename:void
_M_cond	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    __gthread_cond_t _M_cond = __GTHREAD_COND_INIT;$/;"	m	class:__gnu_cxx::__cond	typeref:typename:__gthread_cond_t
_M_const_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    _M_const_cast() const$/;"	f	struct:std::_Bit_const_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR _Bit_iterator
_M_const_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    _M_const_cast() const$/;"	f	struct:std::_Bit_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
_M_const_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_const_cast() const _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_iterator	typeref:typename:iterator
_M_const_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_const_cast() const _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_const_iterator	typeref:typename:iterator
_M_const_object	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    const void* _M_const_object;$/;"	m	union:std::_Nocopy_types	typeref:typename:const void *
_M_construct_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^        _M_construct_aux(_InIterator __beg, _InIterator __end,$/;"	f	class:std::basic_string	typeref:typename:void
_M_construct_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^        _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)$/;"	f	class:std::basic_string	typeref:typename:void
_M_construct_aux_2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_construct_aux_2(size_type __req, _CharT __c)$/;"	f	class:std::basic_string	typeref:typename:void
_M_construct_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_construct_node(_Link_type __node, _Args&&... __args)$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_construct_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_construct_node(_Link_type __node, const value_type& __x)$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_conv_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      _M_conv_get()$/;"	f	class:std::wbuffer_convert	typeref:typename:bool
_M_conv_put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      _M_conv_put()$/;"	f	class:std::wbuffer_convert	typeref:typename:bool
_M_convert_from_char	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _M_convert_from_char(char*) const$/;"	f	class:std::messages	typeref:typename:string_type
_M_convert_to_char	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _M_convert_to_char(const string_type& __msg) const$/;"	f	class:std::messages	typeref:typename:char *
_M_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_copy(const _Rb_tree& __x, _NodeGen& __gen)$/;"	f	class:std::_Rb_tree	typeref:typename:_Link_type
_M_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_copy(_Link_type __x, _Base_ptr __p, _NodeGen& __node_gen)$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KoV,_Compare,_Alloc>::_Link_type
_M_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_copy(const _Rb_tree& __x)$/;"	f	class:std::_Rb_tree	typeref:typename:_Link_type
_M_copy_aligned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _M_copy_aligned(const_iterator __first, const_iterator __last,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
_M_copy_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Vector_base::_Vector_impl_data	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      size_t			_M_count = 0;$/;"	m	class:std::wstring_convert	typeref:typename:size_t
_M_count_tr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_count_tr(const _Kt& __k) const$/;"	f	class:std::_Rb_tree	typeref:typename:size_type
_M_create	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	  _M_create(_Any_data& __dest, _Fn&& __f, false_type)$/;"	f	class:std::_Function_base::_Base_manager	typeref:typename:void
_M_create	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)$/;"	f	class:std::_Function_base::_Base_manager	typeref:typename:void
_M_create_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_create_node(_Args&&... __args)$/;"	f	class:std::_Rb_tree	typeref:typename:_Link_type
_M_create_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_create_node(const value_type& __x)$/;"	f	class:std::_Rb_tree	typeref:typename:_Link_type
_M_create_nodes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^    _M_create_nodes(_Map_pointer __nstart, _Map_pointer __nfinish)$/;"	f	class:std::_Deque_base	typeref:typename:void
_M_create_storage	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _M_create_storage(size_t __n)$/;"	f	struct:std::_Vector_base	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_ctype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      const __ctype_type*                            _M_ctype;$/;"	m	class:std::basic_ios	typeref:typename:const __ctype_type *
_M_ctype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      const _CtypeT&      _M_ctype;$/;"	m	class:std::__detail::_Compiler	typeref:typename:const _CtypeT &
_M_ctype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _CtypeT&                      _M_ctype;$/;"	m	class:std::__detail::_Scanner	typeref:typename:_CtypeT &
_M_cur	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _Elt_pointer _M_cur;$/;"	m	struct:std::_Deque_iterator	typeref:typename:_Elt_pointer
_M_cur_results	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      _ResultsVec                                           _M_cur_results;$/;"	m	class:std::__detail::_Executor	typeref:typename:_ResultsVec
_M_curr_symbol	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_curr_symbol;$/;"	m	struct:std::__moneypunct_cache	typeref:typename:const _CharT *
_M_curr_symbol_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      size_t                            _M_curr_symbol_size;$/;"	m	struct:std::__moneypunct_cache	typeref:typename:size_t
_M_current	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      _BiIter                                               _M_current;$/;"	m	class:std::__detail::_Executor	typeref:typename:_BiIter
_M_current	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      const _CharT*                 _M_current;$/;"	m	class:std::__detail::_Scanner	typeref:typename:const _CharT *
_M_current	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _It _M_current = _It();$/;"	m	class:std::counted_iterator	typeref:typename:_It
_M_current	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _Iterator _M_current;$/;"	m	class:__gnu_cxx::__normal_iterator	typeref:typename:_Iterator
_M_current	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _Iterator _M_current;$/;"	m	class:std::move_iterator	typeref:typename:_Iterator
_M_current	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    _It _M_current = _It();$/;"	m	class:std::basic_const_iterator	typeref:typename:_It
_M_current_match	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _M_current_match() const$/;"	f	class:std::regex_token_iterator	typeref:typename:const value_type &
_M_cvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      __detail::_Scoped_ptr<_Codecvt>	_M_cvt;$/;"	m	class:std::wbuffer_convert	typeref:typename:__detail::_Scoped_ptr<_Codecvt>
_M_cvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      __detail::_Scoped_ptr<_Codecvt>	_M_cvt;$/;"	m	class:std::wstring_convert	typeref:typename:__detail::_Scoped_ptr<_Codecvt>
_M_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_data() const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR pointer
_M_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_data(pointer __p)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      __cache_type*			_M_data;$/;"	m	class:std::numpunct	typeref:typename:__cache_type *
_M_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      __cache_type*			_M_data;$/;"	m	class:std::__timepunct	typeref:typename:__cache_type *
_M_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      __cache_type*			_M_data;$/;"	m	class:std::moneypunct	typeref:typename:__cache_type *
_M_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^      _Tp* _M_data;$/;"	m	class:std::reference_wrapper	typeref:typename:_Tp *
_M_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	const value_type* _M_data = nullptr;$/;"	m	struct:std::sub_match::__string_view	typeref:typename:const value_type *
_M_data_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_data_ptr(_Ptr __ptr) const$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR typename std::pointer_traits<_Ptr>::element_type *
_M_data_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_data_ptr(_Ptr __ptr) const$/;"	f	class:std::vector	typeref:typename:const value_type *
_M_data_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_data_ptr(_Ptr __ptr)$/;"	f	class:std::vector	typeref:typename:value_type *
_M_data_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_data_ptr(_Up* __ptr) _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_Up *
_M_data_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR _Up *
_M_dataplus	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _Alloc_hider	_M_dataplus;$/;"	m	class:std::basic_string	typeref:typename:_Alloc_hider
_M_date_era_format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_date_era_format;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_date_format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_date_format;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_date_formats	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _M_date_formats(const _CharT** __date) const$/;"	f	class:std::__timepunct	typeref:typename:void
_M_date_time_era_format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_date_time_era_format;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_date_time_format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_date_time_format;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_date_time_formats	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _M_date_time_formats(const _CharT** __dt) const$/;"	f	class:std::__timepunct	typeref:typename:void
_M_day1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_day1;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_day2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_day2;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_day3	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_day3;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_day4	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_day4;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_day5	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_day5;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_day6	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_day6;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_day7	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_day7;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_days	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _M_days(const _CharT** __days) const$/;"	f	class:std::__timepunct	typeref:typename:void
_M_days_abbreviated	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _M_days_abbreviated(const _CharT** __days) const$/;"	f	class:std::__timepunct	typeref:typename:void
_M_dealloc_array	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_dealloc_array(typename allocator_traits<_Alloc>::pointer __p,$/;"	f	struct:std::_Sp_counted_array_base	typeref:typename:void
_M_deallocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _M_deallocate()$/;"	f	struct:std::_Bvector_base	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_deallocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _M_deallocate(pointer __p, size_t __n)$/;"	f	struct:std::_Vector_base	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_deallocate_map	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_deallocate_map(_Map_pointer __p, size_t __n) _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Deque_base	typeref:typename:void
_M_deallocate_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_deallocate_node(_Ptr __p) _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Deque_base	typeref:typename:void
_M_decimal_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      _CharT				_M_decimal_point;$/;"	m	struct:std::__numpunct_cache	typeref:typename:_CharT
_M_decimal_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _CharT				_M_decimal_point;$/;"	m	struct:std::__moneypunct_cache	typeref:typename:_CharT
_M_default_initialize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _M_default_initialize(size_type __n)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_del	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      bool			_M_del;$/;"	m	class:std::ctype	typeref:typename:bool
_M_del	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	_Deleter& _M_del() noexcept { return _Del_base::_S_get(*this); }$/;"	f	class:std::_Sp_counted_deleter::_Impl	typeref:typename:_Deleter &
_M_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }$/;"	f	class:std::__uniq_ptr_impl	typeref:typename:_GLIBCXX23_CONSTEXPR _Dp &
_M_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      const _Dp& _M_deleter() const noexcept { return std::get<1>(_M_t); }$/;"	f	class:std::__uniq_ptr_impl	typeref:typename:_GLIBCXX23_CONSTEXPR const _Dp &
_M_destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_destroy(size_type __size) throw()$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_destroy() noexcept$/;"	f	class:std::_Sp_counted_array	typeref:typename:void
_M_destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_destroy() noexcept$/;"	f	class:std::_Sp_counted_base	typeref:typename:void
_M_destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_destroy() noexcept$/;"	f	class:std::_Sp_counted_deleter	typeref:typename:void
_M_destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_destroy() noexcept$/;"	f	class:std::_Sp_counted_ptr	typeref:typename:void
_M_destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_destroy() noexcept$/;"	f	class:std::_Sp_counted_ptr_inplace	typeref:typename:void
_M_destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	_M_destroy(_Any_data& __victim, false_type)$/;"	f	class:std::_Function_base::_Base_manager	typeref:typename:void
_M_destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	_M_destroy(_Any_data& __victim, true_type)$/;"	f	class:std::_Function_base::_Base_manager	typeref:typename:void
_M_destroy_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	_M_destroy_data(iterator __first, iterator __last, const _Alloc1&)$/;"	f	class:std::deque	typeref:typename:void
_M_destroy_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_destroy_data(iterator __first, iterator __last,$/;"	f	class:std::deque	typeref:typename:void
_M_destroy_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_destroy_nodes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^    _M_destroy_nodes(_Map_pointer __nstart,$/;"	f	class:std::_Deque_base	typeref:typename:void
_M_device	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    __mutex_type& _M_device;$/;"	m	class:__gnu_cxx::__scoped_lock	typeref:typename:__mutex_type &
_M_disjunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:bool
_M_dispose	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_dispose()$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_dispose	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_dispose() noexcept$/;"	f	class:std::_Sp_counted_array	typeref:typename:void
_M_dispose	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_dispose() noexcept$/;"	f	class:std::_Sp_counted_deleter	typeref:typename:void
_M_dispose	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_dispose() noexcept$/;"	f	class:std::_Sp_counted_ptr	typeref:typename:void
_M_dispose	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_dispose() noexcept$/;"	f	class:std::_Sp_counted_ptr_inplace	typeref:typename:void
_M_dispose	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    _Sp_counted_ptr<nullptr_t, _S_atomic>::_M_dispose() noexcept { }$/;"	f	class:std::_Sp_counted_ptr	typeref:typename:void
_M_dispose	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    _Sp_counted_ptr<nullptr_t, _S_mutex>::_M_dispose() noexcept { }$/;"	f	class:std::_Sp_counted_ptr	typeref:typename:void
_M_dispose	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    _Sp_counted_ptr<nullptr_t, _S_single>::_M_dispose() noexcept { }$/;"	f	class:std::_Sp_counted_ptr	typeref:typename:void
_M_dispose_array	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_dispose_array(typename allocator_traits<_Alloc>::value_type* __p)$/;"	f	struct:std::_Sp_counted_array_base	typeref:typename:void
_M_dot	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _M_dot(std::ostream& __ostr)$/;"	f	class:std::basic_regex	typeref:typename:void
_M_drop_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_eat_escape	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      void (_Scanner::* _M_eat_escape)();$/;"	m	class:std::__detail::_Scanner	typeref:typename:void (_Scanner::*)()
_M_ecma_escape_tbl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    const std::pair<char, char> _M_ecma_escape_tbl[8] =$/;"	m	struct:std::__detail::_ScannerBase	typeref:typename:const std::pair<char,char>[8]
_M_ecma_spec_char	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    const char* _M_ecma_spec_char = "^$\\\\.*+?()[]{}|";$/;"	m	struct:std::__detail::_ScannerBase	typeref:typename:const char *
_M_emplace_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _M_emplace_aux(const_iterator __position, value_type&& __v)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
_M_emplace_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_emplace_equal(_Args&&... __args)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
_M_emplace_hint_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_emplace_hint_equal(const_iterator __pos, _Args&&... __args)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
_M_emplace_hint_unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
_M_emplace_unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_emplace_unique(_Args&&... __args)$/;"	f	class:std::_Rb_tree	typeref:typename:pair<iterator,bool>
_M_empty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^	[[__no_unique_address__]] _Empty     _M_empty;$/;"	m	union:std::_Node_handle_common::_Optional_alloc	typeref:typename:_Empty
_M_empty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    bool _M_empty() const { return !_M_manager; }$/;"	f	class:std::_Function_base	typeref:typename:bool
_M_enable_shared_from_this_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	_M_enable_shared_from_this_with(_Yp* __p) noexcept$/;"	f	class:std::__shared_ptr	typeref:typename:enable_if<__has_esft_base<_Yp2>::value>::type
_M_enable_shared_from_this_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	_M_enable_shared_from_this_with(_Yp*) noexcept$/;"	f	class:std::__shared_ptr	typeref:typename:enable_if<!__has_esft_base<_Yp2>::value>::type
_M_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _Bi_iter				_M_end {};$/;"	m	class:std::regex_iterator	typeref:typename:_Bi_iter
_M_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _StateIdT _M_end;$/;"	m	class:std::__detail::_StateSeq	typeref:typename:_StateIdT
_M_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      const _BiIter                                         _M_end;$/;"	m	class:std::__detail::_Executor	typeref:typename:const _BiIter
_M_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      const _CharT*                 _M_end;$/;"	m	class:std::__detail::_Scanner	typeref:typename:const _CharT *
_M_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_end() _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Base_ptr
_M_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_end() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Const_Base_ptr
_M_end_addr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_M_end_addr() const _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Bvector_base::_Bvector_impl	typeref:typename:_GLIBCXX20_CONSTEXPR _Bit_type *
_M_end_of_seq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _M_end_of_seq() const noexcept$/;"	f	class:std::regex_token_iterator	typeref:typename:bool
_M_end_of_storage	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_Bit_pointer	_M_end_of_storage;$/;"	m	struct:std::_Bvector_base::_Bvector_impl_data	typeref:typename:_Bit_pointer
_M_end_of_storage	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	pointer _M_end_of_storage;$/;"	m	struct:std::_Vector_base::_Vector_impl_data	typeref:typename:pointer
_M_equal_range_tr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_equal_range_tr(const _Kt& __k) const$/;"	f	class:std::_Rb_tree	typeref:typename:pair<const_iterator,const_iterator>
_M_equal_range_tr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_equal_range_tr(const _Kt& __k)$/;"	f	class:std::_Rb_tree	typeref:typename:pair<iterator,iterator>
_M_equiv_set	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _GLIBCXX_STD_C::vector<_StringT>          _M_equiv_set;$/;"	m	struct:std::__detail::_BracketMatcher	typeref:typename:_GLIBCXX_STD_C::vector<_StringT>
_M_erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_erase(_Link_type __x)$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_erase_at_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_erase_at_begin(iterator __pos)$/;"	f	class:std::deque	typeref:typename:void
_M_erase_at_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _M_erase_at_end(iterator __pos)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_erase_at_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_erase_at_end(iterator __pos)$/;"	f	class:std::deque	typeref:typename:void
_M_erase_at_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_erase_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_erase_aux(const_iterator __first, const_iterator __last)$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_erase_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_erase_aux(const_iterator __position)$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_errno	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@string_conversions.h	/^	int _M_errno;$/;"	m	struct:__gnu_cxx::__stoa::_Save_errno	typeref:typename:int
_M_escape_tbl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    const std::pair<char, char>*  _M_escape_tbl;$/;"	m	struct:std::__detail::_ScannerBase	typeref:typename:const std::pair<char,char> *
_M_establish_failed_match	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _M_establish_failed_match(_Bi_iter __end)$/;"	f	class:std::match_results	typeref:typename:void
_M_exception	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    iostate		_M_exception;$/;"	m	class:std::ios_base	typeref:typename:iostate
_M_exception_object	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^      void* _M_exception_object;$/;"	m	class:std::__exception_ptr::exception_ptr	typeref:typename:void *
_M_extended	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  unsigned char _M_extended;$/;"	m	struct:std::regex_traits::_RegexMask	typeref:typename:unsigned char
_M_extended_spec_char	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    const char* _M_extended_spec_char = ".[\\\\()*+?{|^$";$/;"	m	struct:std::__detail::_ScannerBase	typeref:typename:const char *
_M_extract	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_extract()$/;"	f	struct:std::_Rb_tree::_Reuse_or_alloc_node	typeref:typename:_Base_ptr
_M_facets	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    const facet**			_M_facets;$/;"	m	class:std::locale::_Impl	typeref:typename:const facet **
_M_facets_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    size_t				_M_facets_size;$/;"	m	class:std::locale::_Impl	typeref:typename:size_t
_M_failed	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      bool		_M_failed;$/;"	m	class:std::ostreambuf_iterator	typeref:typename:bool
_M_falsename	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      const _CharT*			_M_falsename;$/;"	m	struct:std::__numpunct_cache	typeref:typename:const _CharT *
_M_falsename_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      size_t                            _M_falsename_size;$/;"	m	struct:std::__numpunct_cache	typeref:typename:size_t
_M_fill	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      mutable char_type                              _M_fill;$/;"	m	class:std::basic_ios	typeref:typename:char_type
_M_fill_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _M_fill_assign(size_t __n, bool __x)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_fill_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_fill_assign(size_type __n, const value_type& __val)$/;"	f	class:std::deque	typeref:typename:void
_M_fill_init	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      mutable bool                                   _M_fill_init;$/;"	m	class:std::basic_ios	typeref:typename:bool
_M_fill_initialize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _M_fill_initialize(size_type __n, const value_type& __value)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^	_M_find(const _CharT2* __zero, size_t __len, _CharT2 __c) const$/;"	f	class:std::num_get	typeref:typename:__gnu_cxx::__enable_if<!__is_char<_CharT2>::__value,int>::__type
_M_find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^	_M_find(const _CharT2*, size_t __len, _CharT2 __c) const$/;"	f	class:std::num_get	typeref:typename:__gnu_cxx::__enable_if<__is_char<_CharT2>::__value,int>::__type
_M_find_escape	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    _M_find_escape(char __c)$/;"	f	struct:std::__detail::_ScannerBase	typeref:typename:const char *
_M_find_tr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_find_tr(const _Kt& __k) const$/;"	f	class:std::_Rb_tree	typeref:typename:const_iterator
_M_find_tr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_find_tr(const _Kt& __k)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
_M_finish	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_Bit_iterator	_M_finish;$/;"	m	struct:std::_Bvector_base::_Bvector_impl_data	typeref:typename:_Bit_iterator
_M_finish	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	iterator _M_finish;$/;"	m	struct:std::_Deque_base::_Deque_impl_data	typeref:typename:iterator
_M_finish	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	pointer _M_finish;$/;"	m	struct:std::_Vector_base::_Vector_impl_data	typeref:typename:pointer
_M_first	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _Elt_pointer _M_first;$/;"	m	struct:std::_Deque_iterator	typeref:typename:_Elt_pointer
_M_flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    fmtflags		_M_flags;$/;"	m	class:std::ios_base	typeref:typename:fmtflags
_M_flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      flag_type		_M_flags;$/;"	m	class:std::basic_regex	typeref:typename:flag_type
_M_flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      regex_constants::match_flag_type	_M_flags {};$/;"	m	class:std::regex_iterator	typeref:typename:regex_constants::match_flag_type
_M_flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    _FlagT                    _M_flags;$/;"	m	struct:std::__detail::_NFA_base	typeref:typename:_FlagT
_M_flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _FlagT              _M_flags;$/;"	m	class:std::__detail::_Compiler	typeref:typename:_FlagT
_M_flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      _FlagT                                                _M_flags;$/;"	m	class:std::__detail::_Executor	typeref:typename:_FlagT
_M_flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    _FlagT                        _M_flags;$/;"	m	struct:std::__detail::_ScannerBase	typeref:typename:_FlagT
_M_fn	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      ios_base::event_callback	_M_fn;$/;"	m	struct:std::ios_base::_Callback_list	typeref:typename:ios_base::event_callback
_M_frac_digits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      int				_M_frac_digits;$/;"	m	struct:std::__moneypunct_cache	typeref:typename:int
_M_func	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^	_Callable		_M_func;$/;"	m	struct:std::thread::_State_impl	typeref:typename:_Callable
_M_function_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    void (*_M_function_pointer)();$/;"	m	union:std::_Nocopy_types	typeref:typename:void (*)()
_M_functor	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    _Any_data     _M_functor{};$/;"	m	class:std::_Function_base	typeref:typename:_Any_data
_M_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_get() const noexcept$/;"	f	class:std::__shared_ptr_access	typeref:typename:element_type *
_M_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      _M_get() const$/;"	f	class:std::istreambuf_iterator	typeref:typename:int_type
_M_get_Bit_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _M_get_Bit_allocator() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Bvector_base	typeref:typename:_GLIBCXX20_CONSTEXPR _Bit_alloc_type &
_M_get_Bit_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _M_get_Bit_allocator() const _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Bvector_base	typeref:typename:_GLIBCXX20_CONSTEXPR const _Bit_alloc_type &
_M_get_Node_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Node_allocator &
_M_get_Node_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_get_Node_allocator() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:const _Node_allocator &
_M_get_Tp_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Deque_base	typeref:typename:_Tp_alloc_type &
_M_get_Tp_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Deque_base	typeref:typename:const _Tp_alloc_type &
_M_get_Tp_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Vector_base	typeref:typename:_GLIBCXX20_CONSTEXPR _Tp_alloc_type &
_M_get_Tp_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Vector_base	typeref:typename:_GLIBCXX20_CONSTEXPR const _Tp_alloc_type &
_M_get_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_get_allocator() const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR const allocator_type &
_M_get_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_get_allocator()$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR allocator_type &
_M_get_area	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      _Elem                     _M_get_area[_S_buffer_length];$/;"	m	class:std::wbuffer_convert	typeref:typename:_Elem[]
_M_get_buf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      char			_M_get_buf[_S_buffer_length-_S_putback_length];$/;"	m	class:std::wbuffer_convert	typeref:typename:char[]
_M_get_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_get_deleter(const std::type_info& __ti) const noexcept$/;"	f	class:std::__shared_count	typeref:typename:void *
_M_get_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_get_deleter(const std::type_info& __ti) const noexcept$/;"	f	class:std::__shared_ptr	typeref:typename:void *
_M_get_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_get_deleter(const std::type_info& __ti) noexcept override$/;"	f	class:std::_Sp_counted_ptr_inplace	typeref:typename:void *
_M_get_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_get_deleter(const std::type_info&) noexcept override$/;"	f	class:std::_Sp_counted_array	typeref:typename:void *
_M_get_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_get_deleter(const std::type_info&) noexcept override$/;"	f	class:std::_Sp_counted_ptr_inplace	typeref:typename:void *
_M_get_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_get_deleter(const std::type_info&) noexcept$/;"	f	class:std::_Sp_counted_ptr	typeref:typename:void *
_M_get_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_get_deleter(const type_info& __ti [[__gnu__::__unused__]]) noexcept$/;"	f	class:std::_Sp_counted_deleter	typeref:typename:void *
_M_get_insert_equal_pos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_get_insert_equal_pos(const key_type& __k)$/;"	f	class:std::_Rb_tree
_M_get_insert_hint_equal_pos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_get_insert_hint_equal_pos(const_iterator __position, const key_type& __k)$/;"	f	class:std::_Rb_tree
_M_get_insert_hint_unique_pos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_get_insert_hint_unique_pos(const_iterator __position,$/;"	f	class:std::_Rb_tree
_M_get_insert_unique_pos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_get_insert_unique_pos(const key_type& __k)$/;"	f	class:std::_Rb_tree
_M_get_map_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_get_map_allocator() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Deque_base	typeref:typename:_Map_alloc_type
_M_get_matcher	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_get_matcher() const noexcept$/;"	f	struct:std::__detail::_State	typeref:typename:const _MatcherT &
_M_get_matcher	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_get_matcher() noexcept$/;"	f	struct:std::__detail::_State	typeref:typename:_MatcherT &
_M_get_nfa	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_get_nfa() noexcept$/;"	f	class:std::__detail::_Compiler	typeref:typename:shared_ptr<const _RegexT>
_M_get_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_get_node()$/;"	f	class:std::_Rb_tree	typeref:typename:_Link_type
_M_get_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	_M_get_pointer(const _Any_data& __source) noexcept$/;"	f	class:std::_Function_base::_Base_manager	typeref:typename:_Functor *
_M_get_sol_pos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^	  _BiIter* _M_get_sol_pos() { return &_M_sol_pos; }$/;"	f	struct:std::__detail::_Executor::_State_info	typeref:typename:_BiIter *
_M_get_sol_pos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^	  _BiIter* _M_get_sol_pos() { return nullptr; }$/;"	f	struct:std::__detail::_Executor::_State_info	typeref:typename:_BiIter *
_M_get_token	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _M_get_token() const noexcept$/;"	f	class:std::__detail::_Scanner	typeref:typename:_TokenT
_M_get_use_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_get_use_count() const noexcept$/;"	f	class:std::_Sp_counted_base	typeref:typename:long
_M_get_use_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_get_use_count() const noexcept$/;"	f	class:std::__shared_count	typeref:typename:long
_M_get_use_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_get_use_count() const noexcept$/;"	f	class:std::__weak_count	typeref:typename:long
_M_get_use_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    _Sp_counted_base<_S_single>::_M_get_use_count() const noexcept$/;"	f	class:std::_Sp_counted_base	typeref:typename:long
_M_get_value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _M_get_value() const noexcept$/;"	f	class:std::__detail::_Scanner	typeref:typename:const _StringT &
_M_getloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    _M_getloc() const$/;"	f	class:std::ios_base	typeref:typename:const locale &
_M_grew	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	      _GLIBCXX20_CONSTEXPR void _M_grew(size_type) { }$/;"	f	struct:std::_Vector_base::_Vector_impl::_Asan::_Grow	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_grew	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	      void _M_grew(size_type __n) { _M_n -= __n; }$/;"	f	struct:std::_Vector_base::_Vector_impl::_Asan::_Grow	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_grouping	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      const char*			_M_grouping;$/;"	m	struct:std::__numpunct_cache	typeref:typename:const char *
_M_grouping	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const char*			_M_grouping;$/;"	m	struct:std::__moneypunct_cache	typeref:typename:const char *
_M_grouping_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      size_t                            _M_grouping_size;$/;"	m	struct:std::__numpunct_cache	typeref:typename:size_t
_M_grouping_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      size_t                            _M_grouping_size;$/;"	m	struct:std::__moneypunct_cache	typeref:typename:size_t
_M_has_alt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    _M_has_alt() const noexcept$/;"	f	struct:std::__detail::_State_base	typeref:typename:bool
_M_has_backref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    bool                      _M_has_backref;$/;"	m	struct:std::__detail::_NFA_base	typeref:typename:bool
_M_has_m1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      bool		_M_has_m1;$/;"	m	class:std::regex_token_iterator	typeref:typename:bool
_M_has_sol	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      bool                                                  _M_has_sol;$/;"	m	class:std::__detail::_Executor	typeref:typename:bool
_M_has_value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    _M_has_value() const noexcept { return _M_index != _S_valueless; }$/;"	f	class:std::common_iterator	typeref:typename:bool
_M_have_I	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    unsigned int _M_have_I : 1;$/;"	m	struct:std::__time_get_state	typeref:typename:unsigned int:1
_M_have_century	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    unsigned int _M_have_century : 1;$/;"	m	struct:std::__time_get_state	typeref:typename:unsigned int:1
_M_have_mday	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    unsigned int _M_have_mday : 1;$/;"	m	struct:std::__time_get_state	typeref:typename:unsigned int:1
_M_have_mon	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    unsigned int _M_have_mon : 1;$/;"	m	struct:std::__time_get_state	typeref:typename:unsigned int:1
_M_have_uweek	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    unsigned int _M_have_uweek : 1;$/;"	m	struct:std::__time_get_state	typeref:typename:unsigned int:1
_M_have_wday	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    unsigned int _M_have_wday : 1;$/;"	m	struct:std::__time_get_state	typeref:typename:unsigned int:1
_M_have_wweek	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    unsigned int _M_have_wweek : 1;$/;"	m	struct:std::__time_get_state	typeref:typename:unsigned int:1
_M_have_yday	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    unsigned int _M_have_yday : 1;$/;"	m	struct:std::__time_get_state	typeref:typename:unsigned int:1
_M_header	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _Rb_tree_node_base	_M_header;$/;"	m	struct:std::_Rb_tree_header	typeref:typename:_Rb_tree_node_base
_M_id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    id				_M_id;$/;"	m	class:std::thread	typeref:typename:id
_M_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    _Impl*		_M_impl;$/;"	m	class:std::locale	typeref:typename:_Impl *
_M_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      _Sp_atomic<shared_ptr<_Tp>> _M_impl;$/;"	m	class:std::atomic	typeref:typename:_Sp_atomic<shared_ptr<_Tp>>
_M_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      _Sp_atomic<weak_ptr<_Tp>> _M_impl;$/;"	m	class:std::atomic	typeref:typename:_Sp_atomic<weak_ptr<_Tp>>
_M_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _Impl _M_impl;$/;"	m	class:std::_Sp_counted_deleter	typeref:typename:_Impl
_M_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _Impl _M_impl;$/;"	m	class:std::_Sp_counted_ptr_inplace	typeref:typename:_Impl
_M_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _Bvector_impl _M_impl;$/;"	m	struct:std::_Bvector_base	typeref:typename:_Bvector_impl
_M_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _Deque_impl _M_impl;$/;"	m	class:std::_Deque_base	typeref:typename:_Deque_impl
_M_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree_impl<_Compare> _M_impl;$/;"	m	class:std::_Rb_tree	typeref:typename:_Rb_tree_impl<_Compare>
_M_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	      _Vector_impl& _M_impl;$/;"	m	struct:std::_Vector_base::_Vector_impl::_Asan::_Grow	typeref:typename:_Vector_impl &
_M_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	      _Vector_impl& _M_impl;$/;"	m	struct:std::_Vector_base::_Vector_impl::_Asan::_Reinit	typeref:typename:_Vector_impl &
_M_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _Vector_impl _M_impl;$/;"	m	struct:std::_Vector_base	typeref:typename:_Vector_impl
_M_in_range_icase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      bool _M_in_range_icase(_CharT __first, _CharT __last, _CharT __ch) const$/;"	f	class:std::__detail::_RegexTranslatorBase	typeref:typename:bool
_M_incr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    _M_incr(ptrdiff_t __i)$/;"	f	struct:std::_Bit_iterator_base	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_index	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      int			_M_index;$/;"	m	struct:std::ios_base::_Callback_list	typeref:typename:int
_M_index	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    mutable size_t		_M_index;$/;"	m	class:std::locale::id	typeref:typename:size_t
_M_index	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    unsigned char _M_index; \/\/ 0 == _M_it, 1 == _M_sent, 2 == valueless$/;"	m	class:std::common_iterator	typeref:typename:unsigned char
_M_init	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	_M_init(typename allocator_traits<_Alloc>::value_type* __p,$/;"	f	struct:std::_Sp_counted_array_base	typeref:typename:void
_M_init_facet	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      _M_init_facet(_Facet* __facet)$/;"	f	class:std::locale::_Impl	typeref:typename:void
_M_init_facet_unchecked	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      _M_init_facet_unchecked(_Facet* __facet)$/;"	f	class:std::locale::_Impl	typeref:typename:void
_M_init_functor	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	  _M_init_functor(_Any_data& __functor, _Fn&& __f)$/;"	f	class:std::_Function_base::_Base_manager	typeref:typename:void
_M_initialize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _M_initialize(size_type __n)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_initialize_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector	typeref:typename:void
_M_initialize_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)$/;"	f	class:std::vector	typeref:typename:void
_M_initialize_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::deque	typeref:typename:void
_M_initialize_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	_M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)$/;"	f	class:std::deque	typeref:typename:void
_M_initialize_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector	typeref:typename:void
_M_initialize_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)$/;"	f	class:std::vector	typeref:typename:void
_M_initialize_map	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^    _M_initialize_map(size_t __num_elements)$/;"	f	class:std::_Deque_base	typeref:typename:void
_M_initialize_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_M_initialize_range(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_initialize_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_M_initialize_range(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_initialize_value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _M_initialize_value(bool __x) _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_insert(pair<_Base_ptr, _Base_ptr> __p)$/;"	f	struct:std::_Rb_tree::_Auto_node	typeref:typename:iterator
_M_insert_	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_insert_(_Base_ptr __x, _Base_ptr __p,$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::iterator
_M_insert_accept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_insert_accept()$/;"	f	struct:std::__detail::_NFA	typeref:typename:_StateIdT
_M_insert_alt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_insert_alt(_StateIdT __next, _StateIdT __alt,$/;"	f	struct:std::__detail::_NFA	typeref:typename:_StateIdT
_M_insert_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x,$/;"	f	class:std::vector	typeref:typename:void
_M_insert_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_M_insert_dispatch(iterator __pos,$/;"	f	class:std::vector	typeref:typename:void
_M_insert_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	_M_insert_dispatch(iterator __pos,$/;"	f	class:std::deque	typeref:typename:void
_M_insert_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_insert_dispatch(iterator __pos, _InputIterator __first,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_insert_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_insert_dummy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_insert_dummy()$/;"	f	struct:std::__detail::_NFA	typeref:typename:_StateIdT
_M_insert_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_insert_equal(_Arg&& __v)$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::iterator
_M_insert_equal_	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_insert_equal_(const_iterator __pos, _Arg&& __x)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
_M_insert_equal_	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_insert_equal_(const_iterator __pos, const value_type& __x)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
_M_insert_equal_	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_insert_equal_(const_iterator __position,$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::iterator
_M_insert_equal_lower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_insert_equal_lower()$/;"	f	struct:std::_Rb_tree::_Auto_node	typeref:typename:iterator
_M_insert_equal_lower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_insert_equal_lower(_Arg&& __v)$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::iterator
_M_insert_equal_lower_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_insert_equal_lower_node(_Link_type __z)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
_M_insert_line_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_insert_line_begin()$/;"	f	struct:std::__detail::_NFA	typeref:typename:_StateIdT
_M_insert_line_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_insert_line_end()$/;"	f	struct:std::__detail::_NFA	typeref:typename:_StateIdT
_M_insert_lookahead	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_insert_lookahead(_StateIdT __alt, bool __neg)$/;"	f	struct:std::__detail::_NFA	typeref:typename:_StateIdT
_M_insert_lower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_insert_lower(_Base_ptr __p, _Arg&& __v)$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::iterator
_M_insert_lower_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_insert_lower_node(_Base_ptr __p, _Link_type __z)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
_M_insert_matcher	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_insert_matcher(_MatcherT __m)$/;"	f	struct:std::__detail::_NFA	typeref:typename:_StateIdT
_M_insert_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_insert_node(_Base_ptr __x, _Base_ptr __p, _Link_type __z)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
_M_insert_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_M_insert_range(iterator __pos, _InputIterator __first,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_insert_range_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::_Rb_tree	typeref:typename:__enable_if_t<!__same_value_type<_InputIterator>::value>
_M_insert_range_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::_Rb_tree	typeref:typename:__enable_if_t<__same_value_type<_InputIterator>::value>
_M_insert_range_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_insert_range_unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::_Rb_tree	typeref:typename:__enable_if_t<!__same_value_type<_InputIterator>::value>
_M_insert_range_unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::_Rb_tree	typeref:typename:__enable_if_t<__same_value_type<_InputIterator>::value>
_M_insert_range_unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_insert_repeat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_insert_repeat(_StateIdT __next, _StateIdT __alt, bool __neg)$/;"	f	struct:std::__detail::_NFA	typeref:typename:_StateIdT
_M_insert_state	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_insert_state(_StateT __s)$/;"	f	struct:std::__detail::_NFA	typeref:typename:_StateIdT
_M_insert_subexpr_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_insert_subexpr_begin()$/;"	f	struct:std::__detail::_NFA	typeref:typename:_StateIdT
_M_insert_subexpr_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_insert_subexpr_end()$/;"	f	struct:std::__detail::_NFA	typeref:typename:_StateIdT
_M_insert_unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_insert_unique(_Arg&& __v)$/;"	f	class:std::_Rb_tree	typeref:typename:pair<typename _Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::iterator,bool>
_M_insert_unique_	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_insert_unique_(const_iterator __pos, _Arg&& __x)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
_M_insert_unique_	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_insert_unique_(const_iterator __pos, const value_type& __x)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
_M_insert_unique_	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_insert_unique_(const_iterator __position,$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::iterator
_M_insert_word_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_insert_word_bound(bool __neg)$/;"	f	struct:std::__detail::_NFA	typeref:typename:_StateIdT
_M_invoke	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)$/;"	f	class:std::_Function_handler	typeref:typename:_Res
_M_invoke	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^	  _M_invoke(_Index_tuple<_Ind...>)$/;"	f	struct:std::thread::_Invoker	typeref:typename:__result<_Tuple>::type
_M_invoker	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      _Invoker_type _M_invoker = nullptr;$/;"	m	class:std::function	typeref:typename:_Invoker_type
_M_ios_locale	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    locale		_M_ios_locale;$/;"	m	class:std::ios_base	typeref:typename:locale
_M_is_awk	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    _M_is_awk() const$/;"	f	struct:std::__detail::_ScannerBase	typeref:typename:bool
_M_is_basic	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    _M_is_basic() const$/;"	f	struct:std::__detail::_ScannerBase	typeref:typename:bool
_M_is_char	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^	_M_is_char() const noexcept { return _M_type == _Type::_Char; }$/;"	f	struct:std::__detail::_Compiler::_BracketState	typeref:typename:_GLIBCXX_NODISCARD bool
_M_is_class	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^	_M_is_class() const noexcept { return _M_type == _Type::_Class; }$/;"	f	struct:std::__detail::_Compiler::_BracketState	typeref:typename:_GLIBCXX_NODISCARD bool
_M_is_ecma	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    _M_is_ecma() const$/;"	f	struct:std::__detail::_ScannerBase	typeref:typename:bool
_M_is_extended	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    _M_is_extended() const$/;"	f	struct:std::__detail::_ScannerBase	typeref:typename:bool
_M_is_grep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    _M_is_grep() const$/;"	f	struct:std::__detail::_ScannerBase	typeref:typename:bool
_M_is_line_terminator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      _M_is_line_terminator(_CharT __c) const$/;"	f	class:std::__detail::_Executor	typeref:typename:bool
_M_is_local	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_is_local() const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR bool
_M_is_non_matching	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      bool                                      _M_is_non_matching;$/;"	m	struct:std::__detail::_BracketMatcher	typeref:typename:bool
_M_is_pm	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    unsigned int _M_is_pm : 1;$/;"	m	struct:std::__time_get_state	typeref:typename:unsigned int:1
_M_is_ready	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      bool                                      _M_is_ready = false;$/;"	m	struct:std::__detail::_BracketMatcher	typeref:typename:bool
_M_is_word	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      _M_is_word(_CharT __ch) const$/;"	f	class:std::__detail::_Executor	typeref:typename:bool
_M_it	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _It _M_it;$/;"	m	union:std::common_iterator::__anoncd57ede5010a	typeref:typename:_It
_M_it1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Iterator1 _M_it1;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_to_iter	typeref:typename:_Iterator1
_M_it1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Iterator1 _M_it1;$/;"	m	struct:__gnu_cxx::__ops::_Iter_equals_iter	typeref:typename:_Iterator1
_M_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_raw_storage_iter.h	/^      _OutputIterator _M_iter;$/;"	m	class:std::raw_storage_iterator	typeref:typename:_OutputIterator
_M_iword	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      long	_M_iword;$/;"	m	struct:std::ios_base::_Words	typeref:typename:long
_M_keep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      iter_value_t<_It> _M_keep;$/;"	m	class:std::common_iterator::__arrow_proxy	typeref:typename:iter_value_t<_It>
_M_keep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      iter_value_t<_It> _M_keep;$/;"	m	class:std::common_iterator::__postfix_proxy	typeref:typename:iter_value_t<_It>
_M_key	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      _M_key() const noexcept { return key(); }$/;"	f	class:std::_Node_handle	typeref:typename:const key_type &
_M_key	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      _M_key() const noexcept { return value(); }$/;"	f	class:std::_Node_handle	typeref:typename:const value_type &
_M_key	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_key() const$/;"	f	struct:std::_Rb_tree::_Auto_node	typeref:typename:const _Key &
_M_key1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    unsigned char _M_key1;$/;"	m	struct:std::_Sp_locker	typeref:typename:unsigned char
_M_key2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    unsigned char _M_key2;$/;"	m	struct:std::_Sp_locker	typeref:typename:unsigned char
_M_key_compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Key_compare		_M_key_compare;$/;"	m	struct:std::_Rb_tree_key_compare	typeref:typename:_Key_compare
_M_last	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _Elt_pointer _M_last;$/;"	m	struct:std::_Deque_iterator	typeref:typename:_Elt_pointer
_M_last	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _Sent _M_last;$/;"	m	class:std::move_sentinel	typeref:typename:_Sent
_M_left	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _Base_ptr		_M_left;$/;"	m	struct:std::_Rb_tree_node_base	typeref:typename:_Base_ptr
_M_leftmost	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_leftmost() _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Base_ptr &
_M_leftmost	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_leftmost() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Const_Base_ptr
_M_len	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	size_t _M_len = 0;$/;"	m	struct:std::sub_match::__string_view	typeref:typename:size_t
_M_len	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^		size_t _M_len;$/;"	m	struct:std::_Sp_counted_array_base::_M_init::_Iter	typeref:typename:size_t
_M_len	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^      size_type  _M_len;$/;"	m	class:std::_Temporary_buffer	typeref:typename:size_type
_M_length	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_length(size_type __length)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_length	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      iter_difference_t<_It> _M_length = 0;$/;"	m	class:std::counted_iterator	typeref:typename:iter_difference_t<_It>
_M_less	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_less(const __shared_count& __rhs) const noexcept$/;"	f	class:std::__shared_count	typeref:typename:bool
_M_less	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_less(const __shared_count<_Lp>& __rhs) const noexcept$/;"	f	class:std::__weak_count	typeref:typename:bool
_M_less	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_less(const __weak_count& __rhs) const noexcept$/;"	f	class:std::__weak_count	typeref:typename:bool
_M_less	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_less(const __weak_count<_Lp>& __rhs) const noexcept$/;"	f	class:std::__shared_count	typeref:typename:bool
_M_limit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR size_type
_M_loc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      locale_type	_M_loc;$/;"	m	class:std::basic_regex	typeref:typename:locale_type
_M_local_buf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	_CharT           _M_local_buf[_S_local_capacity + 1];$/;"	m	union:std::basic_string::__anon8c4663c1020a	typeref:typename:_CharT[]
_M_local_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_local_data() const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR const_pointer
_M_local_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_local_data()$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR pointer
_M_local_word	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    _Words		_M_local_word[_S_local_word_size];$/;"	m	class:std::ios_base	typeref:typename:_Words[]
_M_locale	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      locale_type _M_locale;$/;"	m	class:std::regex_traits	typeref:typename:locale_type
_M_lower_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::const_iterator
_M_lower_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_lower_bound(_Link_type __x, _Base_ptr __y,$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::iterator
_M_lower_bound_tr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_lower_bound_tr(const _Kt& __k) const$/;"	f	class:std::_Rb_tree	typeref:typename:const_iterator
_M_lower_bound_tr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_lower_bound_tr(const _Kt& __k)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
_M_main	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      _M_main(_Match_mode __match_mode)$/;"	f	class:std::__detail::_Executor	typeref:typename:bool
_M_make_cache	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_make_cache(false_type)$/;"	f	struct:std::__detail::_BracketMatcher	typeref:typename:void
_M_make_cache	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_make_cache(true_type)$/;"	f	struct:std::__detail::_BracketMatcher	typeref:typename:void
_M_make_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_make_range(_CharT __l, _CharT __r)$/;"	f	struct:std::__detail::_BracketMatcher	typeref:typename:void
_M_manager	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	_M_manager(_Any_data& __dest, const _Any_data& __source,$/;"	f	class:std::_Function_base::_Base_manager	typeref:typename:bool
_M_manager	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      _M_manager(_Any_data& __dest, const _Any_data& __source,$/;"	f	class:std::_Function_handler	typeref:typename:bool
_M_manager	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      _M_manager(_Any_data&, const _Any_data&, _Manager_operation)$/;"	f	class:std::_Function_handler	typeref:typename:bool
_M_manager	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    _Manager_type _M_manager{};$/;"	m	class:std::_Function_base	typeref:typename:_Manager_type
_M_map	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	_Map_pointer _M_map;$/;"	m	struct:std::_Deque_base::_Deque_impl_data	typeref:typename:_Map_pointer
_M_map_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	size_t _M_map_size;$/;"	m	struct:std::_Deque_base::_Deque_impl_data	typeref:typename:size_t
_M_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    _Bit_type _M_mask;$/;"	m	struct:std::_Bit_reference	typeref:typename:_Bit_type
_M_match	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      match_results<_Bi_iter>		_M_match;$/;"	m	class:std::regex_iterator	typeref:typename:match_results<_Bi_iter>
_M_match	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      _M_match()$/;"	f	class:std::__detail::_Executor	typeref:typename:bool
_M_match_multiline	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      _M_match_multiline() const noexcept$/;"	f	class:std::__detail::_Executor	typeref:typename:bool
_M_match_queue	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^	  _GLIBCXX_STD_C::vector<pair<_StateIdT, _ResultsVec>> _M_match_queue;$/;"	m	struct:std::__detail::_Executor::_State_info	typeref:typename:_GLIBCXX_STD_C::vector<pair<_StateIdT,_ResultsVec>>
_M_match_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_match_range(_CharT __first, _CharT __last, _CharT __ch) const$/;"	f	class:std::__detail::_RegexTranslator	typeref:typename:bool
_M_match_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_match_range(const _StrTransT& __first, const _StrTransT& __last,$/;"	f	class:std::__detail::_RegexTranslator	typeref:typename:bool
_M_match_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_match_range(const _StrTransT& __first, const _StrTransT& __last,$/;"	f	class:std::__detail::_RegexTranslatorBase	typeref:typename:bool
_M_matcher_storage	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      __gnu_cxx::__aligned_membuf<_Matcher<char>> _M_matcher_storage;$/;"	m	union:std::__detail::_State_base::__anonb226b13b010a	typeref:typename:__gnu_cxx::__aligned_membuf<_Matcher<char>>
_M_matches	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_matches(_Char_type __char) const$/;"	f	struct:std::__detail::_State	typeref:typename:bool
_M_max_align	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    static const size_t _M_max_align = __alignof__(_Nocopy_types);$/;"	m	class:std::_Function_base	typeref:typename:const size_t
_M_max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      _M_max_size() const _GLIBCXX_USE_NOEXCEPT$/;"	f	class:std::__new_allocator	typeref:typename:_GLIBCXX_CONSTEXPR size_type
_M_max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    static const size_t _M_max_size = sizeof(_Nocopy_types);$/;"	m	class:std::_Function_base	typeref:typename:const size_t
_M_mbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_mbegin() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Link_type
_M_member_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    void (_Undefined_class::*_M_member_pointer)();$/;"	m	union:std::_Nocopy_types	typeref:typename:void (_Undefined_class::*)()
_M_merge_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_merge_equal(_Compatible_tree<_Compare2>& __src) noexcept$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_merge_unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_merge_unique(_Compatible_tree<_Compare2>& __src) noexcept$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	_Tp _M_min;$/;"	m	struct:std::__min_cmp::_Res	typeref:typename:_Tp
_M_month01	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_month01;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_month02	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_month02;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_month03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_month03;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_month04	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_month04;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_month05	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_month05;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_month06	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_month06;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_month07	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_month07;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_month08	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_month08;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_month09	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_month09;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_month10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_month10;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_month11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_month11;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_month12	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_month12;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_months	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _M_months(const _CharT** __months) const$/;"	f	class:std::__timepunct	typeref:typename:void
_M_months_abbreviated	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _M_months_abbreviated(const _CharT** __months) const$/;"	f	class:std::__timepunct	typeref:typename:void
_M_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      _M_move(_Node_handle_common&& __nh) noexcept$/;"	f	class:std::_Node_handle_common	typeref:typename:void
_M_move_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_move_assign(_Rb_tree& __x, false_type)$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_move_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_move_assign(_Rb_tree& __x, true_type)$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_move_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _M_move_assign(vector&& __x, false_type)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_move_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _M_move_assign(vector&& __x, true_type) noexcept$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_move_assign1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_move_assign1(deque&& __x, \/* always equal: *\/ false_type)$/;"	f	class:std::deque	typeref:typename:void
_M_move_assign1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_move_assign1(deque&& __x, \/* always equal: *\/ true_type) noexcept$/;"	f	class:std::deque	typeref:typename:void
_M_move_assign2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_move_assign2(deque&& __x, \/* propagate: *\/ false_type)$/;"	f	class:std::deque	typeref:typename:void
_M_move_assign2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_move_assign2(deque&& __x, \/* propagate: *\/ true_type)$/;"	f	class:std::deque	typeref:typename:void
_M_move_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_M_move_data(_Bvector_impl_data&& __x) noexcept$/;"	f	struct:std::_Bvector_base::_Bvector_impl_data	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_move_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _M_move_data(_Bvector_base&& __x) noexcept$/;"	f	struct:std::_Bvector_base	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_move_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_move_data(_Rb_tree& __x, true_type)$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_move_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_move_data(_Rb_tree& __x, false_type)$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_move_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_move_data(_Rb_tree_header& __from)$/;"	f	struct:std::_Rb_tree_header	typeref:typename:void
_M_mutex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    __gthread_mutex_t _M_mutex = __GTHREAD_MUTEX_INIT;$/;"	m	class:__gnu_cxx::__mutex	typeref:typename:__gthread_mutex_t
_M_mutex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    __gthread_recursive_mutex_t _M_mutex = __GTHREAD_RECURSIVE_MUTEX_INIT;$/;"	m	class:__gnu_cxx::__recursive_mutex	typeref:typename:__gthread_recursive_mutex_t
_M_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      std::size_t	_M_n;$/;"	m	class:std::regex_token_iterator	typeref:typename:std::size_t
_M_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      size_t _M_n = 0;$/;"	m	struct:std::_Sp_counted_array_base	typeref:typename:size_t
_M_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	      size_type _M_n;$/;"	m	struct:std::_Vector_base::_Vector_impl::_Asan::_Grow	typeref:typename:size_type
_M_name_messages	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const char*			_M_name_messages;$/;"	m	class:std::messages	typeref:typename:const char *
_M_name_timepunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const char*			_M_name_timepunct;$/;"	m	class:std::__timepunct	typeref:typename:const char *
_M_names	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    char**				_M_names;$/;"	m	class:std::locale::_Impl	typeref:typename:char **
_M_narrow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      char                      _M_narrow[128];$/;"	m	class:std::ctype	typeref:typename:char[128]
_M_narrow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      mutable char		_M_narrow[1 + static_cast<unsigned char>(-1)];$/;"	m	class:std::ctype	typeref:typename:char[]
_M_narrow_ok	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      bool                      _M_narrow_ok;$/;"	m	class:std::ctype	typeref:typename:bool
_M_narrow_ok	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      mutable char		_M_narrow_ok;	\/\/ 0 uninitialized, 1 init,$/;"	m	class:std::ctype	typeref:typename:char
_M_neg	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^	bool       _M_neg;$/;"	m	struct:std::__detail::_State_base::__anonb226b13b010a::__anonb226b13b0208	typeref:typename:bool
_M_neg_class_set	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _GLIBCXX_STD_C::vector<_CharClassT>       _M_neg_class_set;$/;"	m	struct:std::__detail::_BracketMatcher	typeref:typename:_GLIBCXX_STD_C::vector<_CharClassT>
_M_neg_format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      money_base::pattern	        _M_neg_format;$/;"	m	struct:std::__moneypunct_cache	typeref:typename:money_base::pattern
_M_negative_sign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_negative_sign;$/;"	m	struct:std::__moneypunct_cache	typeref:typename:const _CharT *
_M_negative_sign_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      size_t                            _M_negative_sign_size;$/;"	m	struct:std::__moneypunct_cache	typeref:typename:size_t
_M_next	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _Callback_list*		_M_next;$/;"	m	struct:std::ios_base::_Callback_list	typeref:typename:_Callback_list *
_M_next	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    _StateIdT    _M_next;             \/\/ outgoing transition$/;"	m	struct:std::__detail::_State_base	typeref:typename:_StateIdT
_M_nfa	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _RegexT&  _M_nfa;$/;"	m	class:std::__detail::_StateSeq	typeref:typename:_RegexT &
_M_nfa	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      shared_ptr<_RegexT> _M_nfa;$/;"	m	class:std::__detail::_Compiler	typeref:typename:shared_ptr<_RegexT>
_M_nfa	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      const _NFAT&                                          _M_nfa;$/;"	m	class:std::__detail::_Executor	typeref:typename:const _NFAT &
_M_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _Map_pointer _M_node;$/;"	m	struct:std::_Deque_iterator	typeref:typename:_Map_pointer
_M_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_Link_type _M_node;$/;"	m	struct:std::_Rb_tree::_Auto_node	typeref:typename:_Link_type
_M_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Base_ptr _M_node;$/;"	m	struct:std::_Rb_tree_const_iterator	typeref:typename:_Base_ptr
_M_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Base_ptr _M_node;$/;"	m	struct:std::_Rb_tree_iterator	typeref:typename:_Base_ptr
_M_node_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    size_t		_M_node_count; \/\/ Keeps track of size of tree.$/;"	m	struct:std::_Rb_tree_header	typeref:typename:size_t
_M_nodes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_Base_ptr _M_nodes;$/;"	m	struct:std::_Rb_tree::_Reuse_or_alloc_node	typeref:typename:_Base_ptr
_M_normalize_result	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _M_normalize_result()$/;"	f	class:std::regex_token_iterator	typeref:typename:void
_M_not_empty_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	  _M_not_empty_function(_Tp _Class::* __mp) noexcept$/;"	f	class:std::_Function_base::_Base_manager	typeref:typename:bool
_M_not_empty_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	  _M_not_empty_function(_Tp* __fp) noexcept$/;"	f	class:std::_Function_base::_Base_manager	typeref:typename:bool
_M_not_empty_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	  _M_not_empty_function(const _Tp&) noexcept$/;"	f	class:std::_Function_base::_Base_manager	typeref:typename:bool
_M_not_empty_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	  _M_not_empty_function(const function<_Signature>& __f) noexcept$/;"	f	class:std::_Function_base::_Base_manager	typeref:typename:bool
_M_num_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      const __num_get_type*                          _M_num_get;$/;"	m	class:std::basic_ios	typeref:typename:const __num_get_type *
_M_num_put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      const __num_put_type*                          _M_num_put;$/;"	m	class:std::basic_ios	typeref:typename:const __num_put_type *
_M_obj	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	_Tp _M_obj;$/;"	m	union:std::_Sp_counted_ptr_inplace::__anon1a10cc0f030a	typeref:typename:_Tp
_M_object	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    void*       _M_object;$/;"	m	union:std::_Nocopy_types	typeref:typename:void *
_M_off	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^      streamoff	                _M_off;$/;"	m	class:std::fpos	typeref:typename:streamoff
_M_offset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    unsigned int _M_offset;$/;"	m	struct:std::_Bit_iterator_base	typeref:typename:unsigned int
_M_opcode	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _M_opcode() const noexcept$/;"	f	struct:std::__detail::_State	typeref:typename:_Opcode
_M_opcode	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    _Opcode      _M_opcode;           \/\/ type of outgoing transition$/;"	m	struct:std::__detail::_State_base	typeref:typename:_Opcode
_M_options	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    _M_options() const noexcept$/;"	f	struct:std::__detail::_NFA_base	typeref:typename:_FlagT
_M_original_len	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^      size_type  _M_original_len;$/;"	m	class:std::_Temporary_buffer	typeref:typename:size_type
_M_overwrite	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      bool _M_overwrite = false;$/;"	m	struct:std::_Sp_counted_array_base	typeref:typename:bool
_M_p	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	pointer _M_p; \/\/ The actual data.$/;"	m	struct:std::basic_string::_Alloc_hider	typeref:typename:pointer
_M_p	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^		const _Up* _M_p;$/;"	m	struct:std::_Sp_counted_array_base::_M_init::_Iter	typeref:typename:const _Up *
_M_p	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    _Bit_type * _M_p;$/;"	m	struct:std::_Bit_iterator_base	typeref:typename:_Bit_type *
_M_p	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    _Bit_type * _M_p;$/;"	m	struct:std::_Bit_reference	typeref:typename:_Bit_type *
_M_pad1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    unsigned int _M_pad1 : 5;$/;"	m	struct:std::__time_get_state	typeref:typename:unsigned int:5
_M_pad2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    unsigned int _M_pad2 : 10;$/;"	m	struct:std::__time_get_state	typeref:typename:unsigned int:10
_M_pad3	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    int _M_pad3;$/;"	m	struct:std::__time_get_state	typeref:typename:int
_M_param	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      param_type _M_param;$/;"	m	class:std::uniform_int_distribution	typeref:typename:param_type
_M_paren_stack	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    _GLIBCXX_STD_C::vector<size_t> _M_paren_stack;$/;"	m	struct:std::__detail::_NFA_base	typeref:typename:_GLIBCXX_STD_C::vector<size_t>
_M_parent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _Base_ptr		_M_parent;$/;"	m	struct:std::_Rb_tree_node_base	typeref:typename:_Base_ptr
_M_pi	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _Sp_counted_base<_Lp>*  _M_pi;$/;"	m	class:std::__shared_count	typeref:typename:_Sp_counted_base<_Lp> *
_M_pi	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _Sp_counted_base<_Lp>*  _M_pi;$/;"	m	class:std::__weak_count	typeref:typename:_Sp_counted_base<_Lp> *
_M_pkey	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      __pointer<_Key>				_M_pkey = nullptr;$/;"	m	class:std::_Node_handle	typeref:typename:__pointer<_Key>
_M_pm	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_pm;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_pmapped	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      __pointer<typename _Value::second_type>	_M_pmapped = nullptr;$/;"	m	class:std::_Node_handle	typeref:typename:__pointer<typename _Value::second_type>
_M_pod_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    char _M_pod_data[sizeof(_Nocopy_types)];$/;"	m	union:std::_Any_data	typeref:typename:char[]
_M_pop	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_pop()$/;"	f	class:std::__detail::_Compiler	typeref:typename:_StateSeqT
_M_pos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^		size_t _M_pos;$/;"	m	struct:std::_Sp_counted_array_base::_M_init::_Iter	typeref:typename:size_t
_M_pos_format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      money_base::pattern		_M_pos_format;$/;"	m	struct:std::__moneypunct_cache	typeref:typename:money_base::pattern
_M_position	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _Position		_M_position;$/;"	m	class:std::regex_token_iterator	typeref:typename:_Position
_M_positive_sign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_positive_sign;$/;"	m	struct:std::__moneypunct_cache	typeref:typename:const _CharT *
_M_positive_sign_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      size_t                            _M_positive_sign_size;$/;"	m	struct:std::__moneypunct_cache	typeref:typename:size_t
_M_precision	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    streamsize		_M_precision;$/;"	m	class:std::ios_base	typeref:typename:streamsize
_M_pred	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Predicate _M_pred;$/;"	m	struct:__gnu_cxx::__ops::_Iter_negate	typeref:typename:_Predicate
_M_pred	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Predicate _M_pred;$/;"	m	struct:__gnu_cxx::__ops::_Iter_pred	typeref:typename:_Predicate
_M_pred	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      _Predicate _M_pred;$/;"	m	class:std::binary_negate	typeref:typename:_Predicate
_M_pred	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      _Predicate _M_pred;$/;"	m	class:std::unary_negate	typeref:typename:_Predicate
_M_prefix	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _M_prefix() const$/;"	f	class:std::match_results	typeref:typename:const_reference
_M_prefix	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _M_prefix()$/;"	f	class:std::match_results	typeref:typename:sub_match<_Bi_iter> &
_M_pregex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      const regex_type*			_M_pregex = nullptr;$/;"	m	class:std::regex_iterator	typeref:typename:const regex_type *
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^      _Tp* _M_ptr;$/;"	m	class:std::auto_ptr	typeref:typename:_Tp *
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^      _Tp1* _M_ptr;$/;"	m	struct:std::auto_ptr_ref	typeref:typename:_Tp1 *
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocated_ptr.h	/^      pointer _M_ptr;$/;"	m	struct:std::__allocated_ptr	typeref:typename:pointer
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      _Fp* _M_ptr;$/;"	m	struct:std::__atomic_ref	typeref:typename:_Fp *
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      _Tp* _M_ptr;$/;"	m	struct:std::__atomic_ref	typeref:typename:_Tp *
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      _Tp** _M_ptr;$/;"	m	struct:std::__atomic_ref	typeref:typename:_Tp **
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^	_Tp* _M_ptr;$/;"	m	struct:std::__detail::_Scoped_ptr	typeref:typename:_Tp *
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^    exception_ptr _M_ptr;$/;"	m	class:std::nested_exception	typeref:typename:exception_ptr
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      typename _AllocTraits::pointer _M_ptr;$/;"	m	class:std::_Node_handle_common	typeref:typename:_AllocTraits::pointer
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      typename _Tp::element_type* _M_ptr = nullptr;$/;"	m	class:std::_Sp_atomic	typeref:typename:_Tp::element_type *
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	    typename allocator_traits<_Alloc>::pointer _M_ptr;$/;"	m	struct:std::__shared_count::__shared_count::_Guarded_ptr	typeref:typename:allocator_traits<_Alloc>::pointer
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	_Ptr _M_ptr;$/;"	m	class:std::_Sp_counted_deleter::_Impl	typeref:typename:_Ptr
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _Ptr             _M_ptr;$/;"	m	class:std::_Sp_counted_ptr	typeref:typename:_Ptr
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _Tp* _M_ptr() noexcept { return _M_impl._M_storage._M_ptr(); }$/;"	f	class:std::_Sp_counted_ptr_inplace	typeref:typename:_Tp *
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _Tp* _M_ptr() noexcept { return std::__addressof(_M_obj); }$/;"	f	class:std::_Sp_counted_ptr_inplace	typeref:typename:_Tp *
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      auto _M_ptr() const noexcept { return std::to_address(_M_alloc_ptr); }$/;"	f	class:std::_Sp_counted_array	typeref:typename:auto
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      element_type*	   _M_ptr;         \/\/ Contained pointer.$/;"	m	class:std::__shared_ptr	typeref:typename:element_type *
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      element_type*	 _M_ptr;         \/\/ Contained pointer.$/;"	m	class:std::__weak_ptr	typeref:typename:element_type *
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      _Result (*_M_ptr)(_Arg);$/;"	m	class:std::pointer_to_unary_function	typeref:typename:_Result (*)(_Arg)
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      _Result (*_M_ptr)(_Arg1, _Arg2);$/;"	m	class:std::pointer_to_binary_function	typeref:typename:_Result (*)(_Arg1,_Arg2)
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_ptr() noexcept { return std::__addressof(_M_storage._M_val); }$/;"	f	struct:std::vector::_Temporary_value	typeref:typename:_GLIBCXX20_CONSTEXPR _Tp *
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }$/;"	f	class:std::__uniq_ptr_impl	typeref:typename:_GLIBCXX23_CONSTEXPR pointer
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }$/;"	f	class:std::__uniq_ptr_impl	typeref:typename:_GLIBCXX23_CONSTEXPR pointer &
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^      _M_ptr() const noexcept$/;"	f	struct:__gnu_cxx::__aligned_buffer	typeref:typename:const _Tp *
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^      _M_ptr() const noexcept$/;"	f	struct:__gnu_cxx::__aligned_membuf	typeref:typename:const _Tp *
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^      _M_ptr() noexcept$/;"	f	struct:__gnu_cxx::__aligned_buffer	typeref:typename:_Tp *
_M_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^      _M_ptr() noexcept$/;"	f	struct:__gnu_cxx::__aligned_membuf	typeref:typename:_Tp *
_M_put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      _M_put(...)$/;"	f	class:std::wbuffer_convert	typeref:typename:bool
_M_put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      _M_put(const char* __p, streamsize __n)$/;"	f	class:std::wbuffer_convert	typeref:typename:bool
_M_put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      _M_put(const _CharT* __ws, streamsize __len)$/;"	f	class:std::ostreambuf_iterator	typeref:typename:ostreambuf_iterator &
_M_put_area	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      _Elem                     _M_put_area[_S_buffer_length];$/;"	m	class:std::wbuffer_convert	typeref:typename:_Elem[]
_M_put_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:void
_M_pword	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      void*	_M_pword;$/;"	m	struct:std::ios_base::_Words	typeref:typename:void *
_M_queue	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^	  void _M_queue(_StateIdT __i, const _ResultsVec& __res)$/;"	f	struct:std::__detail::_Executor::_State_info	typeref:typename:void
_M_queue	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^	  void _M_queue(_StateIdT, const _ResultsVec&) { }$/;"	f	struct:std::__detail::_Executor::_State_info	typeref:typename:void
_M_range_check	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _M_range_check(size_type __n) const$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_range_check	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_range_check(size_type __n) const$/;"	f	class:std::deque	typeref:typename:void
_M_range_check	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _M_range_check(size_type __n) const$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_range_initialize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_range_initialize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_range_initialize(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_range_set	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _GLIBCXX_STD_C::vector<pair<_StrTransT, _StrTransT>> _M_range_set;$/;"	m	struct:std::__detail::_BracketMatcher	typeref:typename:_GLIBCXX_STD_C::vector<pair<_StrTransT,_StrTransT>>
_M_re	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      const _RegexT&                                        _M_re;$/;"	m	class:std::__detail::_Executor	typeref:typename:const _RegexT &
_M_ready	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_ready()$/;"	f	struct:std::__detail::_BracketMatcher	typeref:typename:void
_M_refcount	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _Atomic_word		_M_refcount;  \/\/ 0 means one reference.$/;"	m	struct:std::ios_base::_Callback_list	typeref:typename:_Atomic_word
_M_refcount	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    _Atomic_word			_M_refcount;$/;"	m	class:std::locale::_Impl	typeref:typename:_Atomic_word
_M_refcount	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    mutable _Atomic_word		_M_refcount;$/;"	m	class:std::locale::facet	typeref:typename:_Atomic_word
_M_refcount	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      _Atomic_count _M_refcount;$/;"	m	class:std::_Sp_atomic	typeref:typename:_Atomic_count
_M_refcount	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      __shared_count<_Lp>  _M_refcount;    \/\/ Reference counter.$/;"	m	class:std::__shared_ptr	typeref:typename:__shared_count<_Lp>
_M_refcount	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      __weak_count<_Lp>  _M_refcount;    \/\/ Reference counter.$/;"	m	class:std::__weak_ptr	typeref:typename:__weak_count<_Lp>
_M_reinsert_node_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_reinsert_node_equal(node_type&& __nh)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
_M_reinsert_node_hint_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_reinsert_node_hint_equal(const_iterator __hint, node_type&& __nh)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
_M_reinsert_node_hint_unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_reinsert_node_hint_unique(const_iterator __hint, node_type&& __nh)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
_M_reinsert_node_unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_reinsert_node_unique(node_type&& __nh)$/;"	f	class:std::_Rb_tree	typeref:typename:insert_return_type
_M_release	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    _Sp_counted_base<_S_atomic>::_M_release() noexcept$/;"	f	class:std::_Sp_counted_base	typeref:typename:void
_M_release	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    _Sp_counted_base<_S_mutex>::_M_release() noexcept$/;"	f	class:std::_Sp_counted_base	typeref:typename:void
_M_release	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    _Sp_counted_base<_S_single>::_M_release() noexcept$/;"	f	class:std::_Sp_counted_base	typeref:typename:void
_M_release_last_use	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_release_last_use() noexcept$/;"	f	class:std::_Sp_counted_base	typeref:typename:void
_M_release_last_use_cold	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_release_last_use_cold() noexcept$/;"	f	class:std::_Sp_counted_base	typeref:typename:void
_M_remove_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _M_remove_reference() $/;"	f	struct:std::ios_base::_Callback_list	typeref:typename:int
_M_remove_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    _M_remove_reference() const throw()$/;"	f	class:std::locale::facet	typeref:typename:void
_M_remove_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    _M_remove_reference() throw()$/;"	f	class:std::locale::_Impl	typeref:typename:void
_M_rep_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      _GLIBCXX_STD_C::vector<pair<_BiIter, int>>            _M_rep_count;$/;"	m	class:std::__detail::_Executor	typeref:typename:_GLIBCXX_STD_C::vector<pair<_BiIter,int>>
_M_replace_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
_M_replace_map	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_replace_map(_Args&&... __args)$/;"	f	class:std::deque	typeref:typename:void
_M_reserve_elements_at_back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_reserve_elements_at_back(size_type __n)$/;"	f	class:std::deque	typeref:typename:iterator
_M_reserve_elements_at_front	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_reserve_elements_at_front(size_type __n)$/;"	f	class:std::deque	typeref:typename:iterator
_M_reserve_map_at_back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_reserve_map_at_back(size_type __nodes_to_add = 1)$/;"	f	class:std::deque	typeref:typename:void
_M_reserve_map_at_front	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_reserve_map_at_front(size_type __nodes_to_add = 1)$/;"	f	class:std::deque	typeref:typename:void
_M_reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      _M_reset() noexcept$/;"	f	class:std::_Node_handle_common	typeref:typename:void
_M_reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_M_reset() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Bvector_base::_Bvector_impl_data	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_reset()$/;"	f	struct:std::_Rb_tree_header	typeref:typename:void
_M_resize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _M_resize(unsigned int __size)$/;"	f	class:std::match_results	typeref:typename:void
_M_resource	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      memory_resource* _M_resource;$/;"	m	class:std::pmr::polymorphic_allocator	typeref:typename:memory_resource *
_M_result	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      const value_type*	_M_result;$/;"	m	class:std::regex_token_iterator	typeref:typename:const value_type *
_M_results	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      _ResultsVec&                                          _M_results;$/;"	m	class:std::__detail::_Executor	typeref:typename:_ResultsVec &
_M_right	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _Base_ptr		_M_right;$/;"	m	struct:std::_Rb_tree_node_base	typeref:typename:_Base_ptr
_M_rightmost	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_rightmost() _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Base_ptr &
_M_rightmost	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_rightmost() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Const_Base_ptr
_M_root	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_Base_ptr _M_root;$/;"	m	struct:std::_Rb_tree::_Reuse_or_alloc_node	typeref:typename:_Base_ptr
_M_root	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_root() _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Base_ptr &
_M_root	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_root() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Const_Base_ptr
_M_run	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^	_M_run() { _M_func(); }$/;"	f	struct:std::thread::_State_impl	typeref:typename:void
_M_sbuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      mutable streambuf_type*	_M_sbuf;$/;"	m	class:std::istreambuf_iterator	typeref:typename:streambuf_type *
_M_sbuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      streambuf_type*	_M_sbuf;$/;"	m	class:std::ostreambuf_iterator	typeref:typename:streambuf_type *
_M_scanner	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _ScannerT           _M_scanner;$/;"	m	class:std::__detail::_Compiler	typeref:typename:_ScannerT
_M_search_from_first	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      _M_search_from_first()$/;"	f	class:std::__detail::_Executor	typeref:typename:bool
_M_sent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _Sent _M_sent;$/;"	m	union:std::common_iterator::__anoncd57ede5010a	typeref:typename:_Sent
_M_set_length	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_set_length(size_type __n)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_set_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _M_set_node(_Map_pointer __new_node) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_iterator	typeref:typename:void
_M_setstate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      _M_setstate(iostate __state)$/;"	f	class:std::basic_ios	typeref:typename:void
_M_sol_pos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^	  _BiIter   _M_sol_pos;$/;"	m	struct:std::__detail::_Executor::_State_info	typeref:typename:_BiIter
_M_spec_char	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    const char*                   _M_spec_char;$/;"	m	struct:std::__detail::_ScannerBase	typeref:typename:const char *
_M_stack	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _StackT             _M_stack;$/;"	m	class:std::__detail::_Compiler	typeref:typename:_StackT
_M_start	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _StateIdT _M_start;$/;"	m	class:std::__detail::_StateSeq	typeref:typename:_StateIdT
_M_start	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    _M_start() const noexcept$/;"	f	struct:std::__detail::_NFA_base	typeref:typename:_StateIdT
_M_start	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^	  _StateIdT _M_start;$/;"	m	struct:std::__detail::_Executor::_State_info	typeref:typename:_StateIdT
_M_start	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_Bit_iterator	_M_start;$/;"	m	struct:std::_Bvector_base::_Bvector_impl_data	typeref:typename:_Bit_iterator
_M_start	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	iterator _M_start;$/;"	m	struct:std::_Deque_base::_Deque_impl_data	typeref:typename:iterator
_M_start	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	pointer _M_start;$/;"	m	struct:std::_Vector_base::_Vector_impl_data	typeref:typename:pointer
_M_start_state	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    _StateIdT                 _M_start_state;$/;"	m	struct:std::__detail::_NFA_base	typeref:typename:_StateIdT
_M_state	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      state_type			_M_state;$/;"	m	class:std::wbuffer_convert	typeref:typename:state_type
_M_state	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      state_type		_M_state = state_type();$/;"	m	class:std::wstring_convert	typeref:typename:state_type
_M_state	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^      _StateT			_M_state;$/;"	m	class:std::fpos	typeref:typename:_StateT
_M_state	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    _StateT                       _M_state;$/;"	m	struct:std::__detail::_ScannerBase	typeref:typename:_StateT
_M_states	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      _State_info<__search_mode, _ResultsVec>		    _M_states;$/;"	m	class:std::__detail::_Executor	typeref:typename:_State_info<__search_mode,_ResultsVec>
_M_storage	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__gnu_cxx::__aligned_buffer<_Tp> _M_storage;$/;"	m	class:std::_Sp_counted_ptr_inplace::_Impl	typeref:typename:__gnu_cxx::__aligned_buffer<_Tp>
_M_storage	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      __gnu_cxx::__aligned_membuf<_Val> _M_storage;$/;"	m	struct:std::_Rb_tree_node	typeref:typename:__gnu_cxx::__aligned_membuf<_Val>
_M_storage	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_Storage _M_storage;$/;"	m	struct:std::vector::_Temporary_value	typeref:typename:_Storage
_M_storage	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^	std::aligned_storage<sizeof(_Tp), __alignof__(_Tp)>::type _M_storage;$/;"	m	struct:__gnu_cxx::__aligned_buffer	typeref:typename:std::aligned_storage<sizeof (_Tp),__alignof__ (_Tp)>::type
_M_str	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	_M_str() const noexcept$/;"	f	class:std::sub_match	typeref:typename:__enable_if_t<__detail::__is_contiguous_iter<_Iter>::value,__string_view>
_M_str	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	_M_str() const$/;"	f	class:std::sub_match	typeref:typename:__enable_if_t<!__detail::__is_contiguous_iter<_Iter>::value,string_type>
_M_streambuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      basic_streambuf<_CharT, _Traits>*              _M_streambuf;$/;"	m	class:std::basic_ios	typeref:typename:basic_streambuf<_CharT,_Traits> *
_M_streambuf_state	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    iostate		_M_streambuf_state;$/;"	m	class:std::ios_base	typeref:typename:iostate
_M_string_length	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      size_type		_M_string_length;$/;"	m	class:std::basic_string	typeref:typename:size_type
_M_sub_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    _M_sub_count() const noexcept$/;"	f	struct:std::__detail::_NFA_base	typeref:typename:size_t
_M_subexpr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      size_t _M_subexpr;        \/\/ for _S_opcode_subexpr_*$/;"	m	union:std::__detail::_State_base::__anonb226b13b010a	typeref:typename:size_t
_M_subexpr_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    size_t                    _M_subexpr_count;$/;"	m	struct:std::__detail::_NFA_base	typeref:typename:size_t
_M_subs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      std::vector<int>	_M_subs;$/;"	m	class:std::regex_token_iterator	typeref:typename:std::vector<int>
_M_suffix	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _M_suffix() const$/;"	f	class:std::match_results	typeref:typename:const_reference
_M_suffix	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _M_suffix()$/;"	f	class:std::match_results	typeref:typename:sub_match<_Bi_iter> &
_M_suffix	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      value_type	_M_suffix;$/;"	m	class:std::regex_token_iterator	typeref:typename:value_type
_M_sv	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	__sv_type _M_sv;$/;"	m	struct:std::basic_string::__sv_wrapper	typeref:typename:__sv_type
_M_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      _M_swap(_Node_handle_common& __nh) noexcept$/;"	f	class:std::_Node_handle_common	typeref:typename:void
_M_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_swap(__shared_count& __r) noexcept$/;"	f	class:std::__shared_count	typeref:typename:void
_M_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_swap(__weak_count& __r) noexcept$/;"	f	class:std::__weak_count	typeref:typename:void
_M_swap_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	_M_swap_data(_Bvector_impl_data& __x) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Bvector_base::_Bvector_impl_data	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_swap_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	_M_swap_data(_Deque_impl_data& __x) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_base::_Deque_impl_data	typeref:typename:void
_M_swap_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Vector_base::_Vector_impl_data	typeref:typename:_GLIBCXX20_CONSTEXPR void
_M_swap_unlock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^	_M_swap_unlock(__count_type& __c, memory_order __o) noexcept$/;"	f	struct:std::_Sp_atomic::_Atomic_count	typeref:typename:void
_M_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^	_Tuple _M_t;$/;"	m	struct:std::thread::_Invoker	typeref:typename:_Tuple
_M_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      _Rep_type _M_t;$/;"	m	class:std::map	typeref:typename:_Rep_type
_M_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_Rb_tree& _M_t;$/;"	m	struct:std::_Rb_tree::_Alloc_node	typeref:typename:_Rb_tree &
_M_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_Rb_tree& _M_t;$/;"	m	struct:std::_Rb_tree::_Auto_node	typeref:typename:_Rb_tree &
_M_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_Rb_tree& _M_t;$/;"	m	struct:std::_Rb_tree::_Reuse_or_alloc_node	typeref:typename:_Rb_tree &
_M_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      __uniq_ptr_data<_Tp, _Dp> _M_t;$/;"	m	class:std::unique_ptr	typeref:typename:__uniq_ptr_data<_Tp,_Dp>
_M_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      tuple<pointer, _Dp> _M_t;$/;"	m	class:std::__uniq_ptr_impl	typeref:typename:tuple<pointer,_Dp>
_M_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^      struct _Tp2 { _Tp _M_t; };$/;"	m	struct:__gnu_cxx::__aligned_membuf::_Tp2	typeref:typename:_Tp
_M_table	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      const mask*		_M_table;$/;"	m	class:std::ctype	typeref:typename:const mask *
_M_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	vector*  _M_this;$/;"	m	struct:std::vector::_Temporary_value	typeref:typename:vector *
_M_this_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^      __shared_base_type	_M_this_ptr;$/;"	m	struct:std::thread::_Impl_base	typeref:typename:__shared_base_type
_M_thousands_sep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      _CharT				_M_thousands_sep;$/;"	m	struct:std::__numpunct_cache	typeref:typename:_CharT
_M_thousands_sep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _CharT				_M_thousands_sep;$/;"	m	struct:std::__moneypunct_cache	typeref:typename:_CharT
_M_thread	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^      native_handle_type	_M_thread;$/;"	m	class:std::thread::id	typeref:typename:native_handle_type
_M_thread_deps_never_run	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    _M_thread_deps_never_run() {$/;"	f	class:std::thread	typeref:typename:void
_M_tie	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      basic_ostream<_CharT, _Traits>*                _M_tie;$/;"	m	class:std::basic_ios	typeref:typename:basic_ostream<_CharT,_Traits> *
_M_time_era_format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_time_era_format;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_time_format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      const _CharT*			_M_time_format;$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT *
_M_time_formats	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _M_time_formats(const _CharT** __time) const$/;"	f	class:std::__timepunct	typeref:typename:void
_M_token	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    _TokenT                       _M_token;$/;"	m	struct:std::__detail::_ScannerBase	typeref:typename:_TokenT
_M_token_tbl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    const std::pair<char, _TokenT> _M_token_tbl[9] =$/;"	m	struct:std::__detail::_ScannerBase	typeref:typename:const std::pair<char,_TokenT>[9]
_M_tolower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      __to_type			_M_tolower;$/;"	m	class:std::ctype	typeref:typename:__to_type
_M_toupper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      __to_type			_M_toupper;$/;"	m	class:std::ctype	typeref:typename:__to_type
_M_tp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _Tp _M_tp;$/;"	m	struct:std::_Sp_ebo_helper	typeref:typename:_Tp
_M_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _TraitsT                  _M_traits;$/;"	m	struct:std::__detail::_NFA	typeref:typename:_TraitsT
_M_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      const _TraitsT&                           _M_traits;$/;"	m	struct:std::__detail::_BracketMatcher	typeref:typename:const _TraitsT &
_M_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      const _TraitsT&     _M_traits;$/;"	m	class:std::__detail::_Compiler	typeref:typename:const _TraitsT &
_M_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      const _TraitsT& _M_traits;$/;"	m	class:std::__detail::_RegexTranslatorBase	typeref:typename:const _TraitsT &
_M_transform	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_transform(_CharT __ch) const$/;"	f	class:std::__detail::_RegexTranslator	typeref:typename:_StrTransT
_M_transform	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_transform(_CharT __ch) const$/;"	f	class:std::__detail::_RegexTranslatorBase	typeref:typename:_StrTransT
_M_translate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_translate(_CharT __ch) const$/;"	f	class:std::__detail::_RegexTranslator	typeref:typename:_CharT
_M_translate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _M_translate(_CharT __ch) const$/;"	f	class:std::__detail::_RegexTranslatorBase	typeref:typename:_CharT
_M_translator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _TransT                                   _M_translator;$/;"	m	struct:std::__detail::_BracketMatcher	typeref:typename:_TransT
_M_translator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _TransT _M_translator;$/;"	m	struct:std::__detail::_AnyMatcher	typeref:typename:_TransT
_M_translator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _TransT _M_translator;$/;"	m	struct:std::__detail::_CharMatcher	typeref:typename:_TransT
_M_truename	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      const _CharT*			_M_truename;$/;"	m	struct:std::__numpunct_cache	typeref:typename:const _CharT *
_M_truename_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      size_t                            _M_truename_size;$/;"	m	struct:std::__numpunct_cache	typeref:typename:size_t
_M_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^	enum class _Type : char { _None, _Char, _Class } _M_type = _Type::_None;$/;"	m	struct:std::__detail::_Compiler::_BracketState	typeref:enum:std::__detail::_Compiler::_BracketState::_Type
_M_type_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      _M_type_size(ptrdiff_t __d) const volatile { return __d * sizeof(_PTp); }$/;"	f	struct:std::__atomic_base	typeref:typename:ptrdiff_t
_M_type_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      _M_type_size(ptrdiff_t __d) const { return __d * sizeof(_PTp); }$/;"	f	struct:std::__atomic_base	typeref:typename:ptrdiff_t
_M_unconv	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      streamsize		_M_unconv = 0;$/;"	m	class:std::wbuffer_convert	typeref:typename:streamsize
_M_unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_unique() const noexcept$/;"	f	class:std::__shared_count	typeref:typename:bool
_M_unmatched_sub	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _M_unmatched_sub() const$/;"	f	class:std::match_results	typeref:typename:const_reference
_M_unmatched_sub	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      _M_unmatched_sub()$/;"	f	class:std::match_results	typeref:typename:sub_match<_Bi_iter> &
_M_unused	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	char _M_unused;$/;"	m	union:std::_Sp_counted_ptr_inplace::__anon1a10cc0f030a	typeref:typename:char
_M_unused	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    _Nocopy_types _M_unused;$/;"	m	union:std::_Any_data	typeref:typename:_Nocopy_types
_M_upper_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::const_iterator
_M_upper_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _M_upper_bound(_Link_type __x, _Base_ptr __y,$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::iterator
_M_upper_bound_tr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_upper_bound_tr(const _Kt& __k) const$/;"	f	class:std::_Rb_tree	typeref:typename:const_iterator
_M_upper_bound_tr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_M_upper_bound_tr(const _Kt& __k)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
_M_use_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _Atomic_word  _M_use_count;     \/\/ #shared$/;"	m	class:std::_Sp_counted_base	typeref:typename:_Atomic_word
_M_use_grouping	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      bool				_M_use_grouping;$/;"	m	struct:std::__numpunct_cache	typeref:typename:bool
_M_use_grouping	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      bool				_M_use_grouping;$/;"	m	struct:std::__moneypunct_cache	typeref:typename:bool
_M_use_local_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _M_use_local_data() _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX14_CONSTEXPR pointer
_M_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^	mutable __atomic_base<uintptr_t> _M_val{0};$/;"	m	struct:std::_Sp_atomic::_Atomic_count	typeref:typename:__atomic_base<uintptr_t>
_M_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	  _Tp _M_val;$/;"	m	union:std::vector::_Temporary_value::_Storage	typeref:typename:_Tp
_M_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_M_val() noexcept { return _M_storage._M_val; }$/;"	f	struct:std::vector::_Temporary_value	typeref:typename:_GLIBCXX20_CONSTEXPR value_type &
_M_valptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_valptr() const$/;"	f	struct:std::_Rb_tree_node	typeref:typename:const _Val *
_M_valptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _M_valptr()$/;"	f	struct:std::_Rb_tree_node	typeref:typename:_Val *
_M_value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^	int		_M_value;$/;"	m	struct:std::ios_base::system_error::error_code	typeref:typename:int
_M_value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Value& _M_value;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_to_val	typeref:typename:_Value &
_M_value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Value& _M_value;$/;"	m	struct:__gnu_cxx::__ops::_Iter_equals_val	typeref:typename:_Value &
_M_value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _StringT            _M_value;$/;"	m	class:std::__detail::_Compiler	typeref:typename:_StringT
_M_value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _StringT                      _M_value;$/;"	m	class:std::__detail::_Scanner	typeref:typename:_StringT
_M_value_field	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Val _M_value_field;$/;"	m	struct:std::_Rb_tree_node	typeref:typename:_Val
_M_valueless	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      unsigned char _M_valueless;$/;"	m	union:std::common_iterator::__anoncd57ede5010a	typeref:typename:unsigned char
_M_visited	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^	  bool _M_visited(_StateIdT __i)$/;"	f	struct:std::__detail::_Executor::_State_info	typeref:typename:bool
_M_visited	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^	  bool _M_visited(_StateIdT) const { return false; }$/;"	f	struct:std::__detail::_Executor::_State_info	typeref:typename:bool
_M_visited_states	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^	  bool*     _M_visited_states;$/;"	m	struct:std::__detail::_Executor::_State_info	typeref:typename:bool *
_M_wait_unlock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^	_M_wait_unlock(memory_order __o) const noexcept$/;"	f	struct:std::_Sp_atomic::_Atomic_count	typeref:typename:void
_M_want_century	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    unsigned int _M_want_century : 1;$/;"	m	struct:std::__time_get_state	typeref:typename:unsigned int:1
_M_want_xday	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    unsigned int _M_want_xday : 1;$/;"	m	struct:std::__time_get_state	typeref:typename:unsigned int:1
_M_weak_add_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_weak_add_ref() noexcept$/;"	f	class:std::_Sp_counted_base	typeref:typename:void
_M_weak_add_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    _Sp_counted_base<_S_single>::_M_weak_add_ref() noexcept$/;"	f	class:std::_Sp_counted_base	typeref:typename:void
_M_weak_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	_M_weak_assign(_Tp1* __p, const __shared_count<>& __n) const noexcept$/;"	f	class:std::enable_shared_from_this	typeref:typename:void
_M_weak_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	_M_weak_assign(_Tp1* __p, const __shared_count<_Lp>& __n) const noexcept$/;"	f	class:std::__enable_shared_from_this	typeref:typename:void
_M_weak_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _Atomic_word  _M_weak_count;    \/\/ #weak + (#shared != 0)$/;"	m	class:std::_Sp_counted_base	typeref:typename:_Atomic_word
_M_weak_release	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _M_weak_release() noexcept$/;"	f	class:std::_Sp_counted_base	typeref:typename:void
_M_weak_release	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    _Sp_counted_base<_S_single>::_M_weak_release() noexcept$/;"	f	class:std::_Sp_counted_base	typeref:typename:void
_M_weak_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      mutable weak_ptr<_Tp>  _M_weak_this;$/;"	m	class:std::enable_shared_from_this	typeref:typename:weak_ptr<_Tp>
_M_weak_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      mutable __weak_ptr<_Tp, _Lp>  _M_weak_this;$/;"	m	class:std::__enable_shared_from_this	typeref:typename:__weak_ptr<_Tp,_Lp>
_M_week_no	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    unsigned int _M_week_no : 6;$/;"	m	struct:std::__time_get_state	typeref:typename:unsigned int:6
_M_wide_err_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      wide_string		_M_wide_err_string;$/;"	m	class:std::wstring_convert	typeref:typename:wide_string
_M_widen	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      mutable char		_M_widen[1 + static_cast<unsigned char>(-1)];$/;"	m	class:std::ctype	typeref:typename:char[]
_M_widen	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      wint_t                    _M_widen[1 + static_cast<unsigned char>(-1)];$/;"	m	class:std::ctype	typeref:typename:wint_t[]
_M_widen_ok	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      mutable char		_M_widen_ok;$/;"	m	class:std::ctype	typeref:typename:char
_M_width	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    streamsize		_M_width;$/;"	m	class:std::ios_base	typeref:typename:streamsize
_M_with_cvtstate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      bool			_M_with_cvtstate = false;$/;"	m	class:std::wstring_convert	typeref:typename:bool
_M_with_strings	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      bool			_M_with_strings = false;$/;"	m	class:std::wstring_convert	typeref:typename:bool
_M_wmask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      __wmask_type              _M_wmask[16];$/;"	m	class:std::ctype	typeref:typename:__wmask_type[16]
_M_word	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    _Words*		_M_word;$/;"	m	class:std::ios_base	typeref:typename:_Words *
_M_word_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    int			_M_word_size;$/;"	m	class:std::ios_base	typeref:typename:int
_M_word_zero	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    _Words		_M_word_zero;$/;"	m	class:std::ios_base	typeref:typename:_Words
_MakeUniq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    struct _MakeUniq$/;"	s	namespace:std::__detail
_MakeUniq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    struct _MakeUniq<_Tp[]>$/;"	s	namespace:std::__detail
_MakeUniq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    struct _MakeUniq<_Tp[_Bound]>$/;"	s	namespace:std::__detail
_Manager_operation	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^  enum _Manager_operation$/;"	g	namespace:std
_Manager_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    using _Manager_type$/;"	t	class:std::_Function_base
_Map_alloc_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef __gnu_cxx::__alloc_traits<_Map_alloc_type> _Map_alloc_traits;$/;"	t	class:std::_Deque_base	typeref:typename:__gnu_cxx::__alloc_traits<_Map_alloc_type>
_Map_alloc_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	_Map_alloc_type;$/;"	t	class:std::_Deque_base	typeref:typename:_Alloc_traits::template rebind<_Ptr>::other
_Map_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef _Tp**					   _Map_pointer;$/;"	t	struct:std::_Deque_iterator	typeref:typename:_Tp **
_Map_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef typename _Base::_Map_pointer		_Map_pointer;$/;"	t	class:std::deque	typeref:typename:_Base::_Map_pointer
_Map_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef typename iterator::_Map_pointer _Map_pointer;$/;"	t	class:std::_Deque_base	typeref:typename:iterator::_Map_pointer
_Match_mode	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      enum class _Match_mode : unsigned char { _Exact, _Prefix };$/;"	g	class:std::__detail::_Executor	typeref:typename:unsigned char
_Matcher	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    using _Matcher = std::function<bool (_CharT)>;$/;"	t	namespace:std::__detail
_MatcherT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      typedef _Matcher<_Char_type>		_MatcherT;$/;"	t	struct:std::__detail::_NFA	typeref:typename:_Matcher<_Char_type>
_MatcherT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      typedef _Matcher<_Char_type> _MatcherT;$/;"	t	struct:std::__detail::_State	typeref:typename:_Matcher<_Char_type>
_Maybe_get_result_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Maybe_get_result_type$/;"	s	namespace:std
_Maybe_get_result_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Maybe_get_result_type<_Functor,$/;"	s	namespace:std
_Maybe_unary_or_binary_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Maybe_unary_or_binary_function { };$/;"	s	namespace:std
_Maybe_unary_or_binary_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Maybe_unary_or_binary_function<_Res, _T1, _T2>$/;"	s	namespace:std
_Maybe_unary_or_binary_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Maybe_unary_or_binary_function<_Res, _T1>$/;"	s	namespace:std
_Mem_fn_traits_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Mem_fn_traits_base$/;"	s	namespace:std
_Merge_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	  using _Merge_helper = _Rb_tree_merge_helper<map, _Cmp2>;$/;"	t	function:std::map::merge	typeref:typename:_Rb_tree_merge_helper<map,_Cmp2>
_Merge_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	  using _Merge_helper = _Rb_tree_merge_helper<_Rb_tree, _Compare2>;$/;"	t	function:std::_Rb_tree::_M_merge_equal	typeref:typename:_Rb_tree_merge_helper<_Rb_tree,_Compare2>
_Merge_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	  using _Merge_helper = _Rb_tree_merge_helper<_Rb_tree, _Compare2>;$/;"	t	function:std::_Rb_tree::_M_merge_unique	typeref:typename:_Rb_tree_merge_helper<_Rb_tree,_Compare2>
_MoveConstructiblePair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      static constexpr bool _MoveConstructiblePair()$/;"	f	struct:std::_PCC	typeref:typename:bool
_Mutex_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    class _Mutex_base$/;"	c	namespace:std
_Mutex_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    class _Mutex_base<_S_mutex>$/;"	c	namespace:std
_My_handler	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	  using _My_handler = _Handler<_Functor>;$/;"	t	function:std::function::function	typeref:typename:_Handler<_Functor>
_NFA	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _NFA(const typename _TraitsT::locale_type& __loc, _FlagT __flags)$/;"	f	struct:std::__detail::_NFA
_NFA	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    struct _NFA$/;"	s	namespace:std::__detail
_NFAT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      typedef _NFA<_TraitsT>                                _NFAT;$/;"	t	class:std::__detail::_Executor	typeref:typename:_NFA<_TraitsT>
_NFA_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    _NFA_base(_FlagT __f) noexcept$/;"	f	struct:std::__detail::_NFA_base
_NFA_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^  struct _NFA_base$/;"	s	namespace:std::__detail
_NODE_HANDLE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^#define _NODE_HANDLE /;"	d
_Nested_exception	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^      explicit _Nested_exception(_Except&& __ex)$/;"	f	struct:std::_Nested_exception
_Nested_exception	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^      explicit _Nested_exception(const _Except& __ex)$/;"	f	struct:std::_Nested_exception
_Nested_exception	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^    struct _Nested_exception : public _Except, public nested_exception$/;"	s	namespace:std
_Never_valueless_alt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      struct _Never_valueless_alt<std::basic_string<_Tp, _Traits, _Alloc>>$/;"	s	namespace:std::__detail::__variant
_Never_valueless_alt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      struct _Never_valueless_alt<std::shared_ptr<_Tp>>$/;"	s	namespace:std::__detail::__variant
_Never_valueless_alt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      struct _Never_valueless_alt<std::weak_ptr<_Tp>>$/;"	s	namespace:std::__detail::__variant
_Never_valueless_alt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      struct _Never_valueless_alt<std::function<_Signature>>$/;"	s	namespace:std::__detail::__variant
_Never_valueless_alt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      struct _Never_valueless_alt<_GLIBCXX_STD_C::vector<_Tp, _Alloc>>$/;"	s	namespace:std::__detail::__variant
_Never_valueless_alt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      struct _Never_valueless_alt<std::unique_ptr<_Tp, _Del>>$/;"	s	namespace:std::__detail::__variant
_Nocopy_types	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^  union _Nocopy_types$/;"	u	namespace:std
_Node_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	rebind<_Rb_tree_node<_Val> >::other _Node_allocator;$/;"	t	class:std::_Rb_tree	typeref:typename:__gnu_cxx::__alloc_traits<_Alloc>::template rebind<_Rb_tree_node<_Val>>::other
_Node_handle	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      _Node_handle(typename _AllocTraits::pointer __ptr,$/;"	f	class:std::_Node_handle
_Node_handle	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^    class _Node_handle : public _Node_handle_common<_Value, _NodeAlloc>$/;"	c	namespace:std
_Node_handle	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^    class _Node_handle<_Value, _Value, _NodeAlloc>$/;"	c	namespace:std
_Node_handle_common	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      _Node_handle_common(_Node_handle_common&& __nh) noexcept$/;"	f	class:std::_Node_handle_common
_Node_handle_common	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      _Node_handle_common(typename _AllocTraits::pointer __ptr,$/;"	f	class:std::_Node_handle_common
_Node_handle_common	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      constexpr _Node_handle_common() noexcept : _M_ptr() { }$/;"	f	class:std::_Node_handle_common
_Node_handle_common	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^    class _Node_handle_common$/;"	c	namespace:std
_Node_insert_return	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^    struct _Node_insert_return$/;"	s	namespace:std
_NonArray	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    using _NonArray = _Tp;$/;"	t	namespace:std	typeref:typename:_Tp
_NonArray	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    using _NonArray = __enable_if_t<!is_array<_Tp>::value, _Tp>;$/;"	t	namespace:std	typeref:typename:__enable_if_t<!is_array<_Tp>::value,_Tp>
_None	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^	enum class _Type : char { _None, _Char, _Class } _M_type = _Type::_None;$/;"	e	enum:std::__detail::_Compiler::_BracketState::_Type
_Noreturn	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define _Noreturn /;"	d
_Noreturn	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define _Noreturn$/;"	d
_NotUnboundedArray	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    using _NotUnboundedArray = _Tp;$/;"	t	namespace:std	typeref:typename:_Tp
_NotUnboundedArray	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    using _NotUnboundedArray$/;"	t	namespace:std	typeref:typename:__enable_if_t<!__is_array_unknown_bounds<_Tp>::value,_Tp>
_Nth_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    struct _Nth_type$/;"	s	namespace:std
_Nth_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    struct _Nth_type<0, _Tp0, _Rest...>$/;"	s	namespace:std
_Nth_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    struct _Nth_type<0, _Tp0, _Tp1, _Rest...>$/;"	s	namespace:std
_Nth_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    struct _Nth_type<0, _Tp0, _Tp1, _Tp2, _Rest...>$/;"	s	namespace:std
_Nth_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    struct _Nth_type<1, _Tp0, _Tp1, _Rest...>$/;"	s	namespace:std
_Nth_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    struct _Nth_type<1, _Tp0, _Tp1, _Tp2, _Rest...>$/;"	s	namespace:std
_Nth_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    struct _Nth_type<2, _Tp0, _Tp1, _Tp2, _Rest...>$/;"	s	namespace:std
_Nth_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    struct _Nth_type<_Np, _Tp0, _Tp1, _Tp2, _Rest...>$/;"	s	namespace:std
_Number	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Number$/;"	s	namespace:std::__parse_int
_Number	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Number<_Base>$/;"	s	namespace:std::__parse_int
_Number_help	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Number_help$/;"	s	namespace:std::__parse_int
_Number_help	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Number_help<_Base, 1ULL, _Dig>$/;"	s	namespace:std::__parse_int
_Number_help	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Number_help<_Base, _Pow, '\\'', _Dig, _Digs...>$/;"	s	namespace:std::__parse_int
_OSTREAM_INSERT_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ostream_insert.h	/^#define _OSTREAM_INSERT_H /;"	d
_Opcode	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^  enum _Opcode : int$/;"	g	namespace:std::__detail	typeref:typename:int
_Optional_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^	_Optional_alloc() { }$/;"	f	union:std::_Node_handle_common::_Optional_alloc
_Optional_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^	_Optional_alloc(const _NodeAlloc& __alloc) noexcept$/;"	f	union:std::_Node_handle_common::_Optional_alloc
_Optional_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      union _Optional_alloc$/;"	u	class:std::_Node_handle_common
_OutputValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	_OutputValueType;$/;"	t	function:std::partial_sort_copy	typeref:typename:iterator_traits<_RandomAccessIterator>::value_type
_P2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	  using _P2 = remove_reference_t<_Pair>;$/;"	t	function:std::map::insert	typeref:typename:remove_reference_t<_Pair>
_PCC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    struct _PCC$/;"	s	namespace:std
_PCC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    struct _PCC<false, _T1, _T2>$/;"	s	namespace:std
_POSIX_C_SOURCE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#  define _POSIX_C_SOURCE	/;"	d
_POSIX_C_SOURCE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define _POSIX_C_SOURCE	/;"	d
_POSIX_C_SOURCE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define _POSIX_C_SOURCE /;"	d
_POSIX_SOURCE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define _POSIX_SOURCE	/;"	d
_POSIX_SOURCE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define _POSIX_SOURCE /;"	d
_PRINTF_NAN_LEN_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^# define _PRINTF_NAN_LEN_MAX /;"	d
_PSTL_CLANG_VERSION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_CLANG_VERSION /;"	d
_PSTL_CONFIG_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_CONFIG_H$/;"	d
_PSTL_CPP11_STD_ROTATE_BROKEN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_CPP11_STD_ROTATE_BROKEN /;"	d
_PSTL_CPP14_2RANGE_MISMATCH_EQUAL_PRESENT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_CPP14_2RANGE_MISMATCH_EQUAL_PRESENT /;"	d
_PSTL_CPP14_INTEGER_SEQUENCE_PRESENT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_CPP14_INTEGER_SEQUENCE_PRESENT /;"	d
_PSTL_CPP14_MAKE_REVERSE_ITERATOR_PRESENT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_CPP14_MAKE_REVERSE_ITERATOR_PRESENT /;"	d
_PSTL_CPP14_VARIABLE_TEMPLATES_PRESENT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_CPP14_VARIABLE_TEMPLATES_PRESENT /;"	d
_PSTL_CPP17_EXECUTION_POLICIES_PRESENT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_CPP17_EXECUTION_POLICIES_PRESENT /;"	d
_PSTL_EARLYEXIT_PRESENT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_EARLYEXIT_PRESENT /;"	d
_PSTL_EXECUTION_POLICY_DEFS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^#define _PSTL_EXECUTION_POLICY_DEFS_H$/;"	d
_PSTL_GCC_VERSION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_GCC_VERSION /;"	d
_PSTL_GLUE_MEMORY_DEFS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@glue_memory_defs.h	/^#define _PSTL_GLUE_MEMORY_DEFS_H$/;"	d
_PSTL_HIDE_FROM_ABI_POP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_HIDE_FROM_ABI_POP /;"	d
_PSTL_HIDE_FROM_ABI_PUSH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_HIDE_FROM_ABI_PUSH /;"	d
_PSTL_ICC_18_OMP_SIMD_BROKEN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_ICC_18_OMP_SIMD_BROKEN /;"	d
_PSTL_MONOTONIC_PRESENT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_MONOTONIC_PRESENT /;"	d
_PSTL_PRAGMA	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA(/;"	d
_PSTL_PRAGMA_DECLARE_REDUCTION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_PRAGMA_DECLARE_REDUCTION(/;"	d
_PSTL_PRAGMA_DECLARE_SIMD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_DECLARE_SIMD /;"	d
_PSTL_PRAGMA_DECLARE_SIMD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_DECLARE_SIMD$/;"	d
_PSTL_PRAGMA_FORCEINLINE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_FORCEINLINE /;"	d
_PSTL_PRAGMA_FORCEINLINE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_FORCEINLINE$/;"	d
_PSTL_PRAGMA_LOCATION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_LOCATION /;"	d
_PSTL_PRAGMA_MESSAGE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_MESSAGE(/;"	d
_PSTL_PRAGMA_MESSAGE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_MESSAGE(x) _PSTL_PRAGMA_MESSAGE_/;"	d
_PSTL_PRAGMA_MESSAGE_IMPL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_PRAGMA_MESSAGE_IMPL(/;"	d
_PSTL_PRAGMA_MESSAGE_POLICIES	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_MESSAGE_POLICIES(/;"	d
_PSTL_PRAGMA_SIMD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_SIMD /;"	d
_PSTL_PRAGMA_SIMD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_SIMD$/;"	d
_PSTL_PRAGMA_SIMD_EARLYEXIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_SIMD_EARLYEXIT /;"	d
_PSTL_PRAGMA_SIMD_EARLYEXIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_SIMD_EARLYEXIT$/;"	d
_PSTL_PRAGMA_SIMD_EXCLUSIVE_SCAN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_SIMD_EXCLUSIVE_SCAN(/;"	d
_PSTL_PRAGMA_SIMD_INCLUSIVE_SCAN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_SIMD_INCLUSIVE_SCAN(/;"	d
_PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC(/;"	d
_PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC_2ARGS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC_2ARGS(/;"	d
_PSTL_PRAGMA_SIMD_REDUCTION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_SIMD_REDUCTION(/;"	d
_PSTL_PRAGMA_SIMD_SCAN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_SIMD_SCAN(/;"	d
_PSTL_PRAGMA_VECTOR_UNALIGNED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_VECTOR_UNALIGNED /;"	d
_PSTL_PRAGMA_VECTOR_UNALIGNED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_PRAGMA_VECTOR_UNALIGNED$/;"	d
_PSTL_STRING	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_STRING(x) _PSTL_STRING_/;"	d
_PSTL_STRING_AUX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_STRING_AUX(/;"	d
_PSTL_STRING_CONCAT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_STRING_CONCAT(/;"	d
_PSTL_UDR_PRESENT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_UDR_PRESENT /;"	d
_PSTL_UDS_PRESENT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_UDS_PRESENT /;"	d
_PSTL_USAGE_WARNINGS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_USAGE_WARNINGS /;"	d
_PSTL_USE_NONTEMPORAL_STORES_IF_ALLOWED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_USE_NONTEMPORAL_STORES_IF_ALLOWED /;"	d
_PSTL_USE_NONTEMPORAL_STORES_IF_ALLOWED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#    define _PSTL_USE_NONTEMPORAL_STORES_IF_ALLOWED$/;"	d
_PSTL_VERSION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_VERSION /;"	d
_PSTL_VERSION_MAJOR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_VERSION_MAJOR /;"	d
_PSTL_VERSION_MINOR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_VERSION_MINOR /;"	d
_PSTL_VERSION_PATCH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@pstl_config.h	/^#define _PSTL_VERSION_PATCH /;"	d
_PTHREAD_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#define _PTHREAD_H	/;"	d
_PTRDIFF_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^#define _PTRDIFF_T$/;"	d
_PTR_TRAITS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^#define _PTR_TRAITS_H /;"	d
_Pair_alloc_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	rebind<value_type>::other _Pair_alloc_type;$/;"	t	class:std::map	typeref:typename:__gnu_cxx::__alloc_traits<_Alloc>::template rebind<value_type>::other
_Parse_int	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Parse_int$/;"	s	namespace:std::__parse_int
_Parse_int	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Parse_int<'0', 'B', _Digs...>$/;"	s	namespace:std::__parse_int
_Parse_int	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Parse_int<'0', 'X', _Digs...>$/;"	s	namespace:std::__parse_int
_Parse_int	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Parse_int<'0', 'b', _Digs...>$/;"	s	namespace:std::__parse_int
_Parse_int	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Parse_int<'0', 'x', _Digs...>$/;"	s	namespace:std::__parse_int
_Parse_int	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Parse_int<'0', _Digs...>$/;"	s	namespace:std::__parse_int
_Position	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef regex_iterator<_Bi_iter, _Ch_type, _Rx_traits> _Position;$/;"	t	class:std::regex_token_iterator	typeref:typename:regex_iterator<_Bi_iter,_Ch_type,_Rx_traits>
_Power	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Power : _Power_help<_Base, _Digs...>::type$/;"	s	namespace:std::__parse_int
_Power	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Power<_Base> : __ull_constant<0>$/;"	s	namespace:std::__parse_int
_Power_help	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Power_help$/;"	s	namespace:std::__parse_int
_Power_help	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Power_help<_Base, _Dig>$/;"	s	namespace:std::__parse_int
_Power_of_2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      _Power_of_2(_Tp __x)$/;"	f	namespace:std::__detail	typeref:typename:bool
_Prefix	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      enum class _Match_mode : unsigned char { _Exact, _Prefix };$/;"	e	enum:std::__detail::_Executor::_Match_mode
_Ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	struct _Ptr$/;"	s	struct:std::allocator_traits
_Ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>$/;"	s	struct:std::allocator_traits
_Ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	  using _Ptr = typename unique_ptr<_Tp, _Del>::pointer;$/;"	t	function:std::__shared_count::__shared_count	typeref:typename:unique_ptr<_Tp,_Del>::pointer
_Ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef _Tp*					_Ptr;$/;"	t	class:std::_Deque_base	typeref:typename:_Tp *
_Ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef typename _Alloc_traits::pointer		_Ptr;$/;"	t	class:std::_Deque_base	typeref:typename:_Alloc_traits::pointer
_Ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	_Ptr<_Up, _Ep, __void_t<typename remove_reference<_Ep>::type::pointer>>$/;"	s	class:std::__uniq_ptr_impl
_Ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	struct _Ptr$/;"	s	class:std::__uniq_ptr_impl
_Ptr_const	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef const _Tp*				_Ptr_const;$/;"	t	class:std::_Deque_base	typeref:typename:const _Tp *
_Ptr_const	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef typename _Alloc_traits::const_pointer	_Ptr_const;$/;"	t	class:std::_Deque_base	typeref:typename:_Alloc_traits::const_pointer
_RAIters	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^      using _RAIters = __and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag>>;$/;"	t	function:std::__equal4	typeref:typename:__and_<is_same<_Cat1,_RATag>,is_same<_Cat2,_RATag>>
_RATag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^      using _RATag = random_access_iterator_tag;$/;"	t	function:std::__equal4	typeref:typename:random_access_iterator_tag
_REQUIRES_FREESTANDING_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@requires_hosted.h	/^#define _REQUIRES_FREESTANDING_H /;"	d
_RItTraits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      typedef iterator_traits<_RandomAccessIterator> _RItTraits;$/;"	t	function:std::__partial_sort_copy	typeref:typename:iterator_traits<_RandomAccessIterator>
_RSIZE_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^#define _RSIZE_T$/;"	d
_RWLOCK_INTERNAL_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^#define _RWLOCK_INTERNAL_H$/;"	d
_Range_chk	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@string_conversions.h	/^      struct _Range_chk {$/;"	s	function:__gnu_cxx::__stoa
_Rb_tree	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree() { }$/;"	f	class:std::_Rb_tree
_Rb_tree	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a)$/;"	f	class:std::_Rb_tree
_Rb_tree	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a, false_type)$/;"	f	class:std::_Rb_tree
_Rb_tree	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a, true_type)$/;"	f	class:std::_Rb_tree
_Rb_tree	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree(_Rb_tree&& __x, const allocator_type& __a)$/;"	f	class:std::_Rb_tree
_Rb_tree	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree(const _Compare& __comp,$/;"	f	class:std::_Rb_tree
_Rb_tree	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree(const _Rb_tree& __x)$/;"	f	class:std::_Rb_tree
_Rb_tree	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree(const _Rb_tree& __x, const allocator_type& __a)$/;"	f	class:std::_Rb_tree
_Rb_tree	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree(const allocator_type& __a)$/;"	f	class:std::_Rb_tree
_Rb_tree	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    class _Rb_tree$/;"	c	namespace:std
_Rb_tree_color	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^  enum _Rb_tree_color { _S_red = false, _S_black = true };$/;"	g	namespace:std
_Rb_tree_const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree_const_iterator() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_const_iterator
_Rb_tree_const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_const_iterator
_Rb_tree_const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_const_iterator
_Rb_tree_const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    struct _Rb_tree_const_iterator$/;"	s	namespace:std
_Rb_tree_header	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _Rb_tree_header() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_header
_Rb_tree_header	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _Rb_tree_header(_Rb_tree_header&& __x) noexcept$/;"	f	struct:std::_Rb_tree_header
_Rb_tree_header	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^  struct _Rb_tree_header$/;"	s	namespace:std
_Rb_tree_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	  _Rb_tree_impl(_Node_allocator&& __a)$/;"	f	struct:std::_Rb_tree::_Rb_tree_impl
_Rb_tree_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	  _Rb_tree_impl(_Rb_tree_impl&& __x, _Node_allocator&& __a)$/;"	f	struct:std::_Rb_tree::_Rb_tree_impl
_Rb_tree_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)$/;"	f	struct:std::_Rb_tree::_Rb_tree_impl
_Rb_tree_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	  _Rb_tree_impl(const _Key_compare& __comp, const _Node_allocator& __a)$/;"	f	struct:std::_Rb_tree::_Rb_tree_impl
_Rb_tree_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	  _Rb_tree_impl(const _Rb_tree_impl& __x)$/;"	f	struct:std::_Rb_tree::_Rb_tree_impl
_Rb_tree_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	struct _Rb_tree_impl$/;"	s	class:std::_Rb_tree
_Rb_tree_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree_iterator() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_iterator
_Rb_tree_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_iterator
_Rb_tree_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    struct _Rb_tree_iterator$/;"	s	namespace:std
_Rb_tree_key_compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree_key_compare(_Rb_tree_key_compare&& __x)$/;"	f	struct:std::_Rb_tree_key_compare
_Rb_tree_key_compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _Rb_tree_key_compare(const _Key_compare& __comp)$/;"	f	struct:std::_Rb_tree_key_compare
_Rb_tree_key_compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    struct _Rb_tree_key_compare$/;"	s	namespace:std
_Rb_tree_merge_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^    _Rb_tree_merge_helper<_GLIBCXX_STD_C::map<_Key, _Val, _Cmp1, _Alloc>,$/;"	s	namespace:std
_Rb_tree_merge_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    struct _Rb_tree_merge_helper { };$/;"	s	namespace:std
_Rb_tree_merge_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    struct _Rb_tree_merge_helper<_Rb_tree<_Key, _Val, _Sel, _Cmp1, _Alloc>,$/;"	s	namespace:std
_Rb_tree_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    struct _Rb_tree_node : public _Rb_tree_node_base$/;"	s	namespace:std
_Rb_tree_node_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^  struct _Rb_tree_node_base$/;"	s	namespace:std
_ReferenceType1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	_ReferenceType1;$/;"	t	function:std::iter_swap	typeref:typename:iterator_traits<_ForwardIterator1>::reference
_ReferenceType2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	_ReferenceType2;$/;"	t	function:std::iter_swap	typeref:typename:iterator_traits<_ForwardIterator2>::reference
_Reference_wrapper_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Reference_wrapper_base$/;"	s	namespace:std
_Reference_wrapper_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Reference_wrapper_base<_Res(*)(_T1) _GLIBCXX_NOEXCEPT_QUAL>$/;"	s	namespace:std
_Reference_wrapper_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Reference_wrapper_base<_Res(*)(_T1, _T2) _GLIBCXX_NOEXCEPT_QUAL>$/;"	s	namespace:std
_Reference_wrapper_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Reference_wrapper_base<_Res(_T1) _GLIBCXX_NOEXCEPT_QUAL>$/;"	s	namespace:std
_Reference_wrapper_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Reference_wrapper_base<_Res(_T1) const volatile>$/;"	s	namespace:std
_Reference_wrapper_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Reference_wrapper_base<_Res(_T1) const>$/;"	s	namespace:std
_Reference_wrapper_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Reference_wrapper_base<_Res(_T1) volatile>$/;"	s	namespace:std
_Reference_wrapper_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Reference_wrapper_base<_Res(_T1, _T2) _GLIBCXX_NOEXCEPT_QUAL>$/;"	s	namespace:std
_Reference_wrapper_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Reference_wrapper_base<_Res(_T1, _T2) const volatile>$/;"	s	namespace:std
_Reference_wrapper_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Reference_wrapper_base<_Res(_T1, _T2) const>$/;"	s	namespace:std
_Reference_wrapper_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Reference_wrapper_base<_Res(_T1, _T2) volatile>$/;"	s	namespace:std
_Reference_wrapper_base_memfun	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Reference_wrapper_base_memfun$/;"	s	namespace:std
_Reference_wrapper_base_memfun	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Reference_wrapper_base_memfun<_MemFunPtr, true>$/;"	s	namespace:std
_Refwrap_base_arg1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Refwrap_base_arg1$/;"	s	namespace:std
_Refwrap_base_arg1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Refwrap_base_arg1<_Tp,$/;"	s	namespace:std
_Refwrap_base_arg2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Refwrap_base_arg2$/;"	s	namespace:std
_Refwrap_base_arg2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Refwrap_base_arg2<_Tp,$/;"	s	namespace:std
_RegexExecutorPolicy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  enum class _RegexExecutorPolicy : int { _S_auto, _S_alternate };$/;"	g	namespace:std::__detail	typeref:typename:int
_RegexMask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  constexpr _RegexMask(_BaseType __base = 0,$/;"	f	struct:std::regex_traits::_RegexMask
_RegexMask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      struct _RegexMask$/;"	s	class:std::regex_traits
_RegexT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      typedef _NFA<_TraitsT> _RegexT;$/;"	t	class:std::__detail::_StateSeq	typeref:typename:_NFA<_TraitsT>
_RegexT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef _NFA<_TraitsT>              	  _RegexT;$/;"	t	class:std::__detail::_Compiler	typeref:typename:_NFA<_TraitsT>
_RegexT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      typedef basic_regex<_CharT, _TraitsT>                 _RegexT;$/;"	t	class:std::__detail::_Executor	typeref:typename:basic_regex<_CharT,_TraitsT>
_RegexTranslator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _RegexTranslator(const _TraitsT&)$/;"	f	class:std::__detail::_RegexTranslator
_RegexTranslator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^    class _RegexTranslator$/;"	c	namespace:std::__detail
_RegexTranslator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^    class _RegexTranslator<_TraitsT, __icase, false>$/;"	c	namespace:std::__detail
_RegexTranslator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^    class _RegexTranslator<_TraitsT, false, false>$/;"	c	namespace:std::__detail
_RegexTranslator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^    class _RegexTranslator<std::regex_traits<_CharType>, true, true>$/;"	c	namespace:std::__detail
_RegexTranslatorBase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _RegexTranslatorBase(const _TraitsT& __traits)$/;"	f	class:std::__detail::_RegexTranslatorBase
_RegexTranslatorBase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^    class _RegexTranslatorBase$/;"	c	namespace:std::__detail
_Reinit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	      _Reinit(_Vector_impl& __impl) : _M_impl(__impl)$/;"	f	struct:std::_Vector_base::_Vector_impl::_Asan::_Reinit	typeref:typename:_GLIBCXX20_CONSTEXPR
_Reinit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	    struct _Reinit$/;"	s	struct:std::_Vector_base::_Vector_impl::_Asan
_Reinit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	    typedef _Vector_impl& _Reinit;$/;"	t	struct:std::_Vector_base::_Vector_impl::_Asan	typeref:typename:_Vector_impl &
_Rep_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^		       key_compare, _Pair_alloc_type> _Rep_type;$/;"	t	class:std::map	typeref:typename:_Rb_tree<key_type,value_type,_Select1st<value_type>,key_compare,_Pair_alloc_type>
_RequireAllocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    using _RequireAllocator$/;"	t	namespace:std	typeref:typename:enable_if<__is_allocator<_Alloc>::value,_Alloc>::type
_RequireInputIter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^    using _RequireInputIter =$/;"	t	namespace:std	typeref:typename:__enable_if_t<is_convertible<__iterator_category_t<_InIter>,input_iterator_tag>::value>
_RequireNotAllocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    using _RequireNotAllocator$/;"	t	namespace:std	typeref:typename:enable_if<!__is_allocator<_Alloc>::value,_Alloc>::type
_Requires	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	using _Requires = __enable_if_t<_Cond::value, _Tp>;$/;"	t	class:std::function	typeref:typename:__enable_if_t<_Cond::value,_Tp>
_Res	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^      struct _Res {$/;"	s	function:std::__min_cmp
_Res	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef pair<_Base_ptr, _Base_ptr> _Res;$/;"	t	function:std::_Rb_tree::_M_get_insert_equal_pos	typeref:typename:pair<_Base_ptr,_Base_ptr>
_Res	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef pair<_Base_ptr, _Base_ptr> _Res;$/;"	t	function:std::_Rb_tree::_M_get_insert_hint_equal_pos	typeref:typename:pair<_Base_ptr,_Base_ptr>
_Res	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef pair<_Base_ptr, _Base_ptr> _Res;$/;"	t	function:std::_Rb_tree::_M_get_insert_hint_unique_pos	typeref:typename:pair<_Base_ptr,_Base_ptr>
_Res	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef pair<_Base_ptr, _Base_ptr> _Res;$/;"	t	function:std::_Rb_tree::_M_get_insert_unique_pos	typeref:typename:pair<_Base_ptr,_Base_ptr>
_Res	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef pair<iterator, bool> _Res;$/;"	t	function:std::_Rb_tree::_M_insert_unique	typeref:typename:pair<iterator,bool>
_ResultsVec	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      typedef _GLIBCXX_STD_C::vector<sub_match<_BiIter>, _Alloc> _ResultsVec;$/;"	t	class:std::__detail::_Executor	typeref:typename:_GLIBCXX_STD_C::vector<sub_match<_BiIter>,_Alloc>
_Reuse_or_alloc_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	_Reuse_or_alloc_node(_Rb_tree& __t)$/;"	f	struct:std::_Rb_tree::_Reuse_or_alloc_node
_Reuse_or_alloc_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      struct _Reuse_or_alloc_node$/;"	s	class:std::_Rb_tree
_RevIterator1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      typedef reverse_iterator<_BidirectionalIterator1> _RevIterator1;$/;"	t	function:std::__find_end	typeref:typename:reverse_iterator<_BidirectionalIterator1>
_RevIterator2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      typedef reverse_iterator<_BidirectionalIterator2> _RevIterator2;$/;"	t	function:std::__find_end	typeref:typename:reverse_iterator<_BidirectionalIterator2>
_SCHED_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^#define	_SCHED_H	/;"	d
_SHARED_PTR_ATOMIC_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^#define _SHARED_PTR_ATOMIC_H /;"	d
_SHARED_PTR_BASE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^#define _SHARED_PTR_BASE_H /;"	d
_SHARED_PTR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^#define _SHARED_PTR_H /;"	d
_SIGSET_NWORDS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__sigset_t.h	/^#define _SIGSET_NWORDS /;"	d
_SIZE_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^#define _SIZE_T$/;"	d
_STDC_PREDEF_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdc-predef.h	/^#define	_STDC_PREDEF_H	/;"	d
_STDINT_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#define _STDINT_H	/;"	d
_STDIO_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define _STDIO_H	/;"	d
_STDLIB_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#define	_STDLIB_H	/;"	d
_STD_NEW_ALLOCATOR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^#define _STD_NEW_ALLOCATOR_H /;"	d
_STL_ALGOBASE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^#define _STL_ALGOBASE_H /;"	d
_STL_ALGO_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^#define _STL_ALGO_H /;"	d
_STL_BVECTOR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^#define _STL_BVECTOR_H /;"	d
_STL_CONSTRUCT_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^#define _STL_CONSTRUCT_H /;"	d
_STL_DEQUE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^#define _STL_DEQUE_H /;"	d
_STL_FUNCTION_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^#define _STL_FUNCTION_H /;"	d
_STL_HEAP_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^#define _STL_HEAP_H /;"	d
_STL_ITERATOR_BASE_FUNCS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_funcs.h	/^#define _STL_ITERATOR_BASE_FUNCS_H /;"	d
_STL_ITERATOR_BASE_TYPES_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^#define _STL_ITERATOR_BASE_TYPES_H /;"	d
_STL_ITERATOR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^#define _STL_ITERATOR_H /;"	d
_STL_MAP_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^#define _STL_MAP_H /;"	d
_STL_PAIR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^#define _STL_PAIR_H /;"	d
_STL_RAW_STORAGE_ITERATOR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_raw_storage_iter.h	/^#define _STL_RAW_STORAGE_ITERATOR_H /;"	d
_STL_STACK_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^#define _STL_STACK_H /;"	d
_STL_TEMPBUF_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^#define _STL_TEMPBUF_H /;"	d
_STL_TREE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^#define _STL_TREE_H /;"	d
_STL_UNINITIALIZED_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^#define _STL_UNINITIALIZED_H /;"	d
_STL_VECTOR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^#define _STL_VECTOR_H /;"	d
_STREAMBUF_ITERATOR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^#define _STREAMBUF_ITERATOR_H /;"	d
_STRINGFWD_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stringfwd.h	/^#define _STRINGFWD_H /;"	d
_STRING_CONVERSIONS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@string_conversions.h	/^#define _STRING_CONVERSIONS_H /;"	d
_STRUCT_TIMESPEC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_timespec.h	/^#define _STRUCT_TIMESPEC /;"	d
_SYS_CDEFS_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#define	_SYS_CDEFS_H	/;"	d
_SYS_SELECT_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^#define _SYS_SELECT_H	/;"	d
_SYS_SINGLE_THREADED_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@single_threaded.h	/^#define _SYS_SINGLE_THREADED_H$/;"	d
_SYS_TYPES_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^#define	_SYS_TYPES_H	/;"	d
_S_ECMAScript	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_ECMAScript	= 1 << 4,$/;"	e	enum:std::regex_constants::syntax_option_type
_S_add_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      _S_add_ref(typename _Atomic_count::pointer __p)$/;"	f	class:std::_Sp_atomic	typeref:typename:_Atomic_count::pointer
_S_adjust	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)$/;"	f	struct:std::_Vector_base::_Vector_impl::_Asan	typeref:typename:_GLIBCXX20_CONSTEXPR void
_S_adjustfield	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_adjustfield 	= _S_left | _S_right | _S_internal,$/;"	e	enum:std::_Ios_Fmtflags
_S_alignment	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      static constexpr int _S_alignment =$/;"	m	struct:std::__atomic_base	typeref:typename:int
_S_alignment	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      static constexpr size_t _S_alignment = __alignof__(_Fp);$/;"	m	struct:std::__atomic_float	typeref:typename:size_t
_S_allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)$/;"	f	struct:std::allocator_traits	typeref:typename:decltype(__a.allocate (__n,__hint))
_S_allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)$/;"	f	struct:std::allocator_traits	typeref:typename:pointer
_S_allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _S_allocate(_Char_alloc_type& __a, size_type __n)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR pointer
_S_alternate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  enum class _RegexExecutorPolicy : int { _S_auto, _S_alternate };$/;"	e	enum:std::__detail::_RegexExecutorPolicy
_S_always_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    static constexpr bool _S_always_equal()$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:bool
_S_any	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_any		= 1 << 4,$/;"	e	enum:std::regex_constants::match_flag_type
_S_app	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_app 		= 1L << 0,$/;"	e	enum:std::_Ios_Openmode
_S_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _S_assign(_CharT* __d, size_type __n, _CharT __c)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
_S_assignable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	_S_assignable()$/;"	f	struct:std::pair	typeref:typename:bool
_S_ate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_ate 		= 1L << 1,$/;"	e	enum:std::_Ios_Openmode
_S_atomic	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  enum _Lock_policy { _S_single, _S_mutex, _S_atomic }; $/;"	e	enum:__gnu_cxx::_Lock_policy
_S_atoms	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    static const char* _S_atoms;$/;"	m	class:std::money_base	typeref:typename:const char *
_S_atoms_in	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    static const char* _S_atoms_in;$/;"	m	class:std::__num_base	typeref:typename:const char *
_S_atoms_out	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    static const char* _S_atoms_out;$/;"	m	class:std::__num_base	typeref:typename:const char *
_S_auto	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  enum class _RegexExecutorPolicy : int { _S_auto, _S_alternate };$/;"	e	enum:std::__detail::_RegexExecutorPolicy
_S_awk	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_awk		= 1 << 7,$/;"	e	enum:std::regex_constants::syntax_option_type
_S_badbit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_badbit 		= 1L << 0,$/;"	e	enum:std::_Ios_Iostate
_S_basefield	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_basefield 	= _S_dec | _S_oct | _S_hex,$/;"	e	enum:std::_Ios_Fmtflags
_S_basic	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_basic		= 1 << 5,$/;"	e	enum:std::regex_constants::syntax_option_type
_S_beg	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_beg = 0,$/;"	e	enum:std::_Ios_Seekdir
_S_bin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_bin 		= 1L << 2,$/;"	e	enum:std::_Ios_Openmode
_S_black	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^  enum _Rb_tree_color { _S_red = false, _S_black = true };$/;"	e	enum:std::_Rb_tree_color
_S_boolalpha	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_boolalpha 	= 1L << 0,$/;"	e	enum:std::_Ios_Fmtflags
_S_buffer_length	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      static const streamsize	_S_buffer_length = 32;$/;"	m	class:std::wbuffer_convert	typeref:typename:const streamsize
_S_buffer_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:size_t
_S_buffer_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_iterator	typeref:typename:size_t
_S_c_locale	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static __c_locale                   _S_c_locale;$/;"	m	class:std::locale::facet	typeref:typename:__c_locale
_S_c_name	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const char			_S_c_name[2];$/;"	m	class:std::locale::facet	typeref:typename:const char[2]
_S_cache_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _S_cache_size =$/;"	m	struct:std::__detail::_BracketMatcher	typeref:typename:size_t
_S_categories	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const char* const* const _S_categories;$/;"	m	class:std::locale	typeref:typename:const char * const * const
_S_categories_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    enum { _S_categories_size = 6 + _GLIBCXX_NUM_CATEGORIES };$/;"	e	enum:std::locale::__anond75609660103
_S_check_init_len	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _S_check_init_len(size_t __n, const allocator_type& __a)$/;"	f	class:std::deque	typeref:typename:size_t
_S_check_init_len	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _S_check_init_len(size_type __n, const allocator_type& __a)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR size_type
_S_chk	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@string_conversions.h	/^	  _S_chk(_TRet __val, std::true_type) \/\/ only called when _Ret is int$/;"	f	struct:__gnu_cxx::__stoa::_Range_chk	typeref:typename:bool
_S_chk	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@string_conversions.h	/^	  _S_chk(_TRet, std::false_type) { return false; }$/;"	f	struct:__gnu_cxx::__stoa::_Range_chk	typeref:typename:bool
_S_chunk_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^  enum { _S_chunk_size = 7 };$/;"	e	enum:std::__anon841809de0203
_S_classic	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static _Impl*       _S_classic;$/;"	m	class:std::locale	typeref:typename:_Impl *
_S_cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	_S_cmp(_Tp&& __t, _Up&& __u, false_type)$/;"	f	struct:std::greater	typeref:typename:decltype(auto)
_S_cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	_S_cmp(_Tp&& __t, _Up&& __u, false_type)$/;"	f	struct:std::greater_equal	typeref:typename:decltype(auto)
_S_cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	_S_cmp(_Tp&& __t, _Up&& __u, false_type)$/;"	f	struct:std::less	typeref:typename:decltype(auto)
_S_cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	_S_cmp(_Tp&& __t, _Up&& __u, false_type)$/;"	f	struct:std::less_equal	typeref:typename:decltype(auto)
_S_cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	_S_cmp(_Tp&& __t, _Up&& __u, true_type) noexcept$/;"	f	struct:std::greater	typeref:typename:bool
_S_cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	_S_cmp(_Tp&& __t, _Up&& __u, true_type) noexcept$/;"	f	struct:std::greater_equal	typeref:typename:bool
_S_cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	_S_cmp(_Tp&& __t, _Up&& __u, true_type) noexcept$/;"	f	struct:std::less	typeref:typename:bool
_S_cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	_S_cmp(_Tp&& __t, _Up&& __u, true_type) noexcept$/;"	f	struct:std::less_equal	typeref:typename:bool
_S_collate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_collate		= 1 << 3,$/;"	e	enum:std::regex_constants::syntax_option_type
_S_compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR int
_S_construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp,_Args...>>
_S_construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX14_CONSTEXPR _Require<__and_<__not_<__has_construct<_Tp,_Args...>>,is_constructible<_Tp,_Args...>>>
_S_construct_p	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	_S_construct_p(__uses_alloc0, _Ind, tuple<_Args...>& __t)$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:tuple<_Args &&...>
_S_construct_p	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	_S_construct_p(__uses_alloc1_ __ua, index_sequence<_Ind...>,$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:tuple<allocator_arg_t,polymorphic_allocator,_Args &&...>
_S_construct_p	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	_S_construct_p(__uses_alloc2_ __ua, index_sequence<_Ind...>,$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:tuple<_Args &&...,polymorphic_allocator>
_S_constructible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	_S_constructible()$/;"	f	struct:std::pair	typeref:typename:bool
_S_continuous	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_continuous	= 1 << 6,$/;"	e	enum:std::regex_constants::match_flag_type
_S_convertible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	_S_convertible()$/;"	f	struct:std::pair	typeref:typename:bool
_S_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _S_copy(_CharT* __d, const _CharT* __s, size_type __n)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
_S_copy_chars	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^        _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
_S_copy_chars	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
_S_copy_chars	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
_S_copy_chars	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
_S_copy_chars	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
_S_cur	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_cur = _GLIBCXX_STDIO_SEEK_CUR,$/;"	e	enum:std::_Ios_Seekdir
_S_dangles	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	_S_dangles()$/;"	f	struct:std::pair	typeref:typename:bool
_S_dec	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_dec 		= 1L << 1,$/;"	e	enum:std::_Ios_Fmtflags
_S_default	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_default,$/;"	e	enum:std::regex_constants::match_flag_type
_S_default_pattern	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    static const pattern _S_default_pattern;$/;"	m	class:std::money_base	typeref:typename:const pattern
_S_destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	_S_destroy(_Alloc2& __a, _Tp* __p, int)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX14_CONSTEXPR auto
_S_destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	_S_destroy(_Alloc2&, _Tp* __p, ...)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX14_CONSTEXPR void
_S_do_it	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      _S_do_it(_Alloc& __one, _Alloc& __two) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::__alloc_swap	typeref:typename:void
_S_do_it	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      _S_do_it(_Tp& __c) noexcept$/;"	f	struct:std::__shrink_to_fit_aux	typeref:typename:_GLIBCXX20_CONSTEXPR bool
_S_do_it	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    { static bool _S_do_it(_Tp&) noexcept { return false; } };$/;"	f	struct:std::__shrink_to_fit_aux	typeref:typename:bool
_S_do_it	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    { static void _S_do_it(_Alloc&, _Alloc&) _GLIBCXX_NOEXCEPT { } };$/;"	f	struct:std::__alloc_swap	typeref:typename:void
_S_do_relocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _S_do_relocate(pointer __first, pointer __last, pointer __result,$/;"	f	class:std::vector	typeref:typename:pointer
_S_do_relocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _S_do_relocate(pointer, pointer, pointer __result,$/;"	f	class:std::vector	typeref:typename:pointer
_S_egrep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_egrep		= 1 << 9,$/;"	e	enum:std::regex_constants::syntax_option_type
_S_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_end = _GLIBCXX_STDIO_SEEK_END,$/;"	e	enum:std::_Ios_Seekdir
_S_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _S_end = 11$/;"	e	enum:std::money_base::__anon6d8b52b00103
_S_eofbit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_eofbit 		= 1L << 1,$/;"	e	enum:std::_Ios_Iostate
_S_epoch_diff	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      static constexpr chrono::seconds _S_epoch_diff{6437664000};$/;"	m	struct:std::filesystem::__file_clock	typeref:typename:chrono::seconds
_S_error_backref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^      _S_error_backref,$/;"	e	enum:std::regex_constants::error_type
_S_error_badbrace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^      _S_error_badbrace,$/;"	e	enum:std::regex_constants::error_type
_S_error_badrepeat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^      _S_error_badrepeat,$/;"	e	enum:std::regex_constants::error_type
_S_error_brace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^      _S_error_brace,$/;"	e	enum:std::regex_constants::error_type
_S_error_brack	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^      _S_error_brack,$/;"	e	enum:std::regex_constants::error_type
_S_error_collate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^      _S_error_collate, \/\/ XXX should have been a non-zero value$/;"	e	enum:std::regex_constants::error_type
_S_error_complexity	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^      _S_error_complexity,$/;"	e	enum:std::regex_constants::error_type
_S_error_ctype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^      _S_error_ctype,$/;"	e	enum:std::regex_constants::error_type
_S_error_escape	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^      _S_error_escape,$/;"	e	enum:std::regex_constants::error_type
_S_error_paren	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^      _S_error_paren,$/;"	e	enum:std::regex_constants::error_type
_S_error_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^      _S_error_range,$/;"	e	enum:std::regex_constants::error_type
_S_error_space	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^      _S_error_space,$/;"	e	enum:std::regex_constants::error_type
_S_error_stack	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^      _S_error_stack,$/;"	e	enum:std::regex_constants::error_type
_S_extended	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_extended		= 1 << 6,$/;"	e	enum:std::regex_constants::syntax_option_type
_S_facet_categories	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const locale::id* const* const _S_facet_categories[];$/;"	m	class:std::locale::_Impl	typeref:typename:const locale::id * const * const[]
_S_failbit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_failbit		= 1L << 2,$/;"	e	enum:std::_Ios_Iostate
_S_first_elem	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	_S_first_elem(_Tp (*__p)[_Nm]) { return _S_first_elem(*__p); }$/;"	f	struct:std::_Sp_counted_array_base	typeref:typename:auto
_S_first_elem	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	_S_first_elem(_Tp* __p) { return __p; }$/;"	f	struct:std::_Sp_counted_array_base	typeref:typename:_Tp *
_S_first_only	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_first_only	= 1 << 10,$/;"	e	enum:std::regex_constants::match_flag_type
_S_fixed	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_fixed 		= 1L << 2,$/;"	e	enum:std::_Ios_Fmtflags
_S_floatfield	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_floatfield 	= _S_scientific | _S_fixed,$/;"	e	enum:std::_Ios_Fmtflags
_S_from_sys	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	_S_from_sys(const chrono::time_point<__sys_clock, _Dur>& __t) noexcept$/;"	f	struct:std::filesystem::__file_clock	typeref:typename:chrono::time_point<__file_clock,_Dur>
_S_fun	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^      static _Tp* _S_fun(_Tp& __r) noexcept { return std::__addressof(__r); }$/;"	f	class:std::reference_wrapper	typeref:typename:_GLIBCXX20_CONSTEXPR _Tp *
_S_gcd	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	_S_gcd(intmax_t __m, intmax_t __n) noexcept$/;"	f	class:std::chrono::duration	typeref:typename:intmax_t
_S_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _S_get(_Sp_ebo_helper& __eboh) { return static_cast<_Tp&>(__eboh); }$/;"	f	struct:std::_Sp_ebo_helper	typeref:typename:_Tp &
_S_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _S_get(_Sp_ebo_helper& __eboh)$/;"	f	struct:std::_Sp_ebo_helper	typeref:typename:_Tp &
_S_get_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _S_get_impl(_Rb_tree<_Key, _Val, _Sel, _Cmp2, _Alloc>& __tree)$/;"	f	struct:std::_Rb_tree_merge_helper	typeref:typename:auto &
_S_get_tree	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      _S_get_tree(_GLIBCXX_STD_C::map<_Key, _Val, _Cmp2, _Alloc>& __map)$/;"	f	struct:std::_Rb_tree_merge_helper	typeref:typename:auto &
_S_get_tree	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      _S_get_tree(_GLIBCXX_STD_C::multimap<_Key, _Val, _Cmp2, _Alloc>& __map)$/;"	f	struct:std::_Rb_tree_merge_helper	typeref:typename:auto &
_S_global	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static _Impl*	_S_global;$/;"	m	class:std::locale	typeref:typename:_Impl *
_S_goodbit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_goodbit 		= 0,$/;"	e	enum:std::_Ios_Iostate
_S_grammar	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^      _S_grammar$/;"	e	enum:std::regex_constants::error_type
_S_grep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_grep		= 1 << 8,$/;"	e	enum:std::regex_constants::syntax_option_type
_S_grow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	    _S_grow(_Vector_impl& __impl, size_type __n)$/;"	f	struct:std::_Vector_base::_Vector_impl::_Asan	typeref:typename:_GLIBCXX20_CONSTEXPR void
_S_hex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_hex 		= 1L << 3,$/;"	e	enum:std::_Ios_Fmtflags
_S_iE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      _S_iE = _S_izero + 20,$/;"	e	enum:std::__num_base::__anoncdcc7d0e0203
_S_iX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      _S_iX,$/;"	e	enum:std::__num_base::__anoncdcc7d0e0203
_S_icase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_icase		= 1 << 0,$/;"	e	enum:std::regex_constants::syntax_option_type
_S_id_collate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const locale::id* const	_S_id_collate[];$/;"	m	class:std::locale::_Impl	typeref:typename:const locale::id * const[]
_S_id_ctype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const locale::id* const	_S_id_ctype[];$/;"	m	class:std::locale::_Impl	typeref:typename:const locale::id * const[]
_S_id_messages	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const locale::id* const	_S_id_messages[];$/;"	m	class:std::locale::_Impl	typeref:typename:const locale::id * const[]
_S_id_monetary	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const locale::id* const	_S_id_monetary[];$/;"	m	class:std::locale::_Impl	typeref:typename:const locale::id * const[]
_S_id_numeric	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const locale::id* const	_S_id_numeric[];$/;"	m	class:std::locale::_Impl	typeref:typename:const locale::id * const[]
_S_id_time	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const locale::id* const	_S_id_time[];$/;"	m	class:std::locale::_Impl	typeref:typename:const locale::id * const[]
_S_ie	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      _S_ie = _S_izero + 14,$/;"	e	enum:std::__num_base::__anoncdcc7d0e0203
_S_iend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      _S_iend = 26$/;"	e	enum:std::__num_base::__anoncdcc7d0e0203
_S_iminus	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      _S_iminus,$/;"	e	enum:std::__num_base::__anoncdcc7d0e0203
_S_in	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_in 		= 1L << 3,$/;"	e	enum:std::_Ios_Openmode
_S_init	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    _S_init(bool __i)$/;"	f	struct:std::atomic_flag	typeref:typename:__atomic_flag_data_type
_S_initial_map_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      enum { _S_initial_map_size = 8 };$/;"	e	enum:std::_Deque_base::__anonde6d01af0103
_S_internal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_internal 	= 1L << 4,$/;"	e	enum:std::_Ios_Fmtflags
_S_invalid_state_id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^  _GLIBCXX17_INLINE constexpr _StateIdT _S_invalid_state_id  = -1;$/;"	v	namespace:std::__detail	typeref:typename:_GLIBCXX17_INLINE _StateIdT
_S_ios_fmtflags_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_ios_fmtflags_end = 1L << 16,$/;"	e	enum:std::_Ios_Fmtflags
_S_ios_fmtflags_max	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_ios_fmtflags_max = __INT_MAX__,$/;"	e	enum:std::_Ios_Fmtflags
_S_ios_fmtflags_min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_ios_fmtflags_min = ~__INT_MAX__$/;"	e	enum:std::_Ios_Fmtflags
_S_ios_iostate_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_ios_iostate_end = 1L << 16,$/;"	e	enum:std::_Ios_Iostate
_S_ios_iostate_max	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_ios_iostate_max = __INT_MAX__,$/;"	e	enum:std::_Ios_Iostate
_S_ios_iostate_min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_ios_iostate_min = ~__INT_MAX__$/;"	e	enum:std::_Ios_Iostate
_S_ios_openmode_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_ios_openmode_end = 1L << 16,$/;"	e	enum:std::_Ios_Openmode
_S_ios_openmode_max	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_ios_openmode_max = __INT_MAX__,$/;"	e	enum:std::_Ios_Openmode
_S_ios_openmode_min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_ios_openmode_min = ~__INT_MAX__$/;"	e	enum:std::_Ios_Openmode
_S_ios_seekdir_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_ios_seekdir_end = 1L << 16 $/;"	e	enum:std::_Ios_Seekdir
_S_iplus	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      _S_iplus,$/;"	e	enum:std::__num_base::__anoncdcc7d0e0203
_S_is_eof	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      _S_is_eof(int_type __c)$/;"	f	class:std::istreambuf_iterator	typeref:typename:bool
_S_iter_cat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _S_iter_cat()$/;"	f	struct:std::iterator_traits	typeref:typename:auto
_S_iter_concept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _S_iter_concept()$/;"	f	class:std::move_iterator	typeref:typename:auto
_S_iter_concept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    _S_iter_concept()$/;"	f	class:std::basic_const_iterator	typeref:typename:auto
_S_ix	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      _S_ix,$/;"	e	enum:std::__num_base::__anoncdcc7d0e0203
_S_izero	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      _S_izero,$/;"	e	enum:std::__num_base::__anoncdcc7d0e0203
_S_key	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _S_key(_Const_Base_ptr __x)$/;"	f	class:std::_Rb_tree	typeref:typename:const _Key &
_S_key	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _S_key(_Const_Link_type __x)$/;"	f	class:std::_Rb_tree	typeref:typename:const _Key &
_S_left	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_left 		= 1L << 5,$/;"	e	enum:std::_Ios_Fmtflags
_S_left	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Link_type
_S_left	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Const_Link_type
_S_local_capacity	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      enum { _S_local_capacity = 15 \/ sizeof(_CharT) };$/;"	e	enum:std::basic_string::__anon8c4663c10103
_S_local_word_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    enum { _S_local_word_size = 8 };$/;"	e	enum:std::ios_base::__anon8ca180ce0103
_S_lock_bit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^	static constexpr uintptr_t _S_lock_bit{1};$/;"	m	struct:std::_Sp_atomic::_Atomic_count	typeref:typename:uintptr_t
_S_match_flag_last	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_match_flag_last	= 1 << 11$/;"	e	enum:std::regex_constants::match_flag_type
_S_max_align	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^    static constexpr size_t _S_max_align = alignof(max_align_t);$/;"	m	class:std::pmr::memory_resource	typeref:typename:size_t
_S_max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	_S_max_size(_Alloc2& __a, int)$/;"	f	struct:std::allocator_traits	typeref:typename:decltype(__a.max_size ())
_S_max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	_S_max_size(_Alloc2&, ...)$/;"	f	struct:std::allocator_traits	typeref:typename:size_type
_S_max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:size_type
_S_max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR size_type
_S_maximum	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Base_ptr
_S_maximum	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Const_Base_ptr
_S_maximum	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_node_base	typeref:typename:_Base_ptr
_S_maximum	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_node_base	typeref:typename:_Const_Base_ptr
_S_min_alignment	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      static constexpr int _S_min_alignment$/;"	m	struct:std::__atomic_ref	typeref:typename:int
_S_minimum	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Base_ptr
_S_minimum	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Const_Base_ptr
_S_minimum	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_node_base	typeref:typename:_Base_ptr
_S_minimum	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_node_base	typeref:typename:_Const_Base_ptr
_S_minus	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _S_minus,$/;"	e	enum:std::money_base::__anon6d8b52b00103
_S_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _S_move(_CharT* __d, const _CharT* __s, size_type __n)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
_S_multiline	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_multiline	= 1 << 11$/;"	e	enum:std::regex_constants::syntax_option_type
_S_mutex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  enum _Lock_policy { _S_single, _S_mutex, _S_atomic }; $/;"	e	enum:__gnu_cxx::_Lock_policy
_S_nd	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	_S_nd(_Urbg& __g, _Up __range)$/;"	f	class:std::uniform_int_distribution	typeref:typename:_Up
_S_need_barriers	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      enum { _S_need_barriers = 0 };$/;"	e	enum:std::_Mutex_base::__anon1a10cc0f0103
_S_need_barriers	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      enum { _S_need_barriers = 1 };$/;"	e	enum:std::_Mutex_base::__anon1a10cc0f0203
_S_no_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_no_copy		= 1 << 9,$/;"	e	enum:std::regex_constants::match_flag_type
_S_noexcept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _S_noexcept()$/;"	f	class:std::common_iterator	typeref:typename:bool
_S_noexcept1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _S_noexcept1()$/;"	f	class:std::common_iterator	typeref:typename:bool
_S_noreplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_noreplace 	= 1L << 6,$/;"	e	enum:std::_Ios_Openmode
_S_nosubs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_nosubs		= 1 << 1,$/;"	e	enum:std::regex_constants::syntax_option_type
_S_not_bol	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_not_bol		= 1 << 0,$/;"	e	enum:std::regex_constants::match_flag_type
_S_not_bow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_not_bow		= 1 << 2,$/;"	e	enum:std::regex_constants::match_flag_type
_S_not_eol	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_not_eol		= 1 << 1,$/;"	e	enum:std::regex_constants::match_flag_type
_S_not_eow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_not_eow		= 1 << 3,$/;"	e	enum:std::regex_constants::match_flag_type
_S_not_null	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_not_null		= 1 << 5,$/;"	e	enum:std::regex_constants::match_flag_type
_S_nothrow_assignable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	_S_nothrow_assignable()$/;"	f	struct:std::pair	typeref:typename:bool
_S_nothrow_constructible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	_S_nothrow_constructible()$/;"	f	struct:std::pair	typeref:typename:bool
_S_nothrow_init	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	_S_nothrow_init() noexcept$/;"	f	class:std::_Function_handler	typeref:typename:bool
_S_nothrow_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    static constexpr bool _S_nothrow_move()$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:bool
_S_nothrow_relocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _S_nothrow_relocate(false_type)$/;"	f	class:std::vector	typeref:typename:bool
_S_nothrow_relocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _S_nothrow_relocate(true_type)$/;"	f	class:std::vector	typeref:typename:bool
_S_null	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^      _S_null,$/;"	e	enum:std::regex_constants::error_type
_S_nword	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      _S_nword(size_t __n)$/;"	f	struct:std::_Bvector_base	typeref:typename:_GLIBCXX_CONSTEXPR size_t
_S_oE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^	_S_oE = _S_oudigits + 14, \/\/ For scientific notation, 'E'$/;"	e	enum:std::__num_base::__anoncdcc7d0e0103
_S_oX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^	_S_oX,$/;"	e	enum:std::__num_base::__anoncdcc7d0e0103
_S_oct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_oct 		= 1L << 6,$/;"	e	enum:std::_Ios_Fmtflags
_S_odigits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^	_S_odigits,$/;"	e	enum:std::__num_base::__anoncdcc7d0e0103
_S_odigits_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^	_S_odigits_end = _S_odigits + 16,$/;"	e	enum:std::__num_base::__anoncdcc7d0e0103
_S_oe	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^	_S_oe = _S_odigits + 14,  \/\/ For scientific notation, 'e'$/;"	e	enum:std::__num_base::__anoncdcc7d0e0103
_S_oend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^	_S_oend = _S_oudigits_end$/;"	e	enum:std::__num_base::__anoncdcc7d0e0103
_S_ominus	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^	_S_ominus,$/;"	e	enum:std::__num_base::__anoncdcc7d0e0103
_S_on_dealloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	    _S_on_dealloc(_Vector_impl& __impl)$/;"	f	struct:std::_Vector_base::_Vector_impl::_Asan	typeref:typename:_GLIBCXX20_CONSTEXPR void
_S_on_dealloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	    _S_on_dealloc(_Vector_impl&) { }$/;"	f	struct:std::_Vector_base::_Vector_impl::_Asan	typeref:typename:_GLIBCXX20_CONSTEXPR void
_S_on_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    static _GLIBCXX14_CONSTEXPR void _S_on_swap(_Alloc& __a, _Alloc& __b)$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:_GLIBCXX14_CONSTEXPR void
_S_on_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    static void _S_on_swap(_Alloc& __a, _Alloc& __b)$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:void
_S_once	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static __gthread_once_t		_S_once;$/;"	m	class:std::locale::facet	typeref:typename:__gthread_once_t
_S_once	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static __gthread_once_t _S_once;$/;"	m	class:std::locale	typeref:typename:__gthread_once_t
_S_opcode_accept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _S_opcode_accept,$/;"	e	enum:std::__detail::_Opcode
_S_opcode_alternative	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _S_opcode_alternative,$/;"	e	enum:std::__detail::_Opcode
_S_opcode_backref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _S_opcode_backref,$/;"	e	enum:std::__detail::_Opcode
_S_opcode_dummy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _S_opcode_dummy,$/;"	e	enum:std::__detail::_Opcode
_S_opcode_line_begin_assertion	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _S_opcode_line_begin_assertion,$/;"	e	enum:std::__detail::_Opcode
_S_opcode_line_end_assertion	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _S_opcode_line_end_assertion,$/;"	e	enum:std::__detail::_Opcode
_S_opcode_match	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _S_opcode_match,$/;"	e	enum:std::__detail::_Opcode
_S_opcode_repeat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _S_opcode_repeat,$/;"	e	enum:std::__detail::_Opcode
_S_opcode_subexpr_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _S_opcode_subexpr_begin,$/;"	e	enum:std::__detail::_Opcode
_S_opcode_subexpr_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _S_opcode_subexpr_end,$/;"	e	enum:std::__detail::_Opcode
_S_opcode_subexpr_lookahead	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _S_opcode_subexpr_lookahead,$/;"	e	enum:std::__detail::_Opcode
_S_opcode_unknown	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _S_opcode_unknown,$/;"	e	enum:std::__detail::_Opcode
_S_opcode_word_boundary	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _S_opcode_word_boundary,$/;"	e	enum:std::__detail::_Opcode
_S_oplus	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^	_S_oplus,$/;"	e	enum:std::__num_base::__anoncdcc7d0e0103
_S_optimize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_optimize		= 1 << 2,$/;"	e	enum:std::regex_constants::syntax_option_type
_S_oudigits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^	_S_oudigits = _S_odigits_end,$/;"	e	enum:std::__num_base::__anoncdcc7d0e0103
_S_oudigits_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^	_S_oudigits_end = _S_oudigits + 16,$/;"	e	enum:std::__num_base::__anoncdcc7d0e0103
_S_out	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_out 		= 1L << 4,$/;"	e	enum:std::_Ios_Openmode
_S_ox	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^	_S_ox,$/;"	e	enum:std::__num_base::__anoncdcc7d0e0103
_S_pointer_to	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^	_S_pointer_to(_Tp& __obj)$/;"	f	class:std::_Node_handle	typeref:typename:__pointer<_Tp>
_S_polynomial	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_polynomial	= 1 << 10,$/;"	e	enum:std::regex_constants::syntax_option_type
_S_prev_avail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_prev_avail	= 1 << 7,$/;"	e	enum:std::regex_constants::match_flag_type
_S_propagate_on_copy_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    static constexpr bool _S_propagate_on_copy_assign()$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:bool
_S_propagate_on_move_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    static constexpr bool _S_propagate_on_move_assign()$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:bool
_S_propagate_on_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    static constexpr bool _S_propagate_on_swap()$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:bool
_S_putback_length	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      static const streamsize	_S_putback_length = 3;$/;"	m	class:std::wbuffer_convert	typeref:typename:const streamsize
_S_red	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^  enum _Rb_tree_color { _S_red = false, _S_black = true };$/;"	e	enum:std::_Rb_tree_color
_S_refcount	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      static _Atomic_word	_S_refcount;$/;"	m	class:std::ios_base::Init	typeref:typename:_Atomic_word
_S_refcount	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static _Atomic_word		_S_refcount;$/;"	m	class:std::locale::id	typeref:typename:_Atomic_word
_S_relocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _S_relocate(pointer __first, pointer __last, pointer __result,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR pointer
_S_right	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_right 		= 1L << 7,$/;"	e	enum:std::_Ios_Fmtflags
_S_right	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Link_type
_S_right	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_Const_Link_type
_S_scientific	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_scientific 	= 1L << 8,$/;"	e	enum:std::_Ios_Fmtflags
_S_sed	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^    _S_sed		= 1 << 8,$/;"	e	enum:std::regex_constants::match_flag_type
_S_select	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	_S_select(_Alloc2& __a, ...)$/;"	f	struct:std::allocator_traits	typeref:typename:_Alloc2
_S_select	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	_S_select(_Alloc2& __a, int)$/;"	f	struct:std::allocator_traits	typeref:typename:decltype(__a.select_on_container_copy_construction ())
_S_select_on_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    static const _Alloc& _S_select_on_copy(const _Alloc& __a) { return __a; }$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:const _Alloc &
_S_select_on_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:_Alloc
_S_showbase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_showbase 	= 1L << 9,$/;"	e	enum:std::_Ios_Fmtflags
_S_showpoint	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_showpoint 	= 1L << 10,$/;"	e	enum:std::_Ios_Fmtflags
_S_showpos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_showpos 	= 1L << 11,$/;"	e	enum:std::_Ios_Fmtflags
_S_shrink	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	    _S_shrink(_Vector_impl& __impl, size_type __n)$/;"	f	struct:std::_Vector_base::_Vector_impl::_Asan	typeref:typename:_GLIBCXX20_CONSTEXPR void
_S_shrink	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	    _S_shrink(_Vector_impl&, size_type) { }$/;"	f	struct:std::_Vector_base::_Vector_impl::_Asan	typeref:typename:_GLIBCXX20_CONSTEXPR void
_S_single	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  enum _Lock_policy { _S_single, _S_mutex, _S_atomic }; $/;"	e	enum:__gnu_cxx::_Lock_policy
_S_skipws	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_skipws 	= 1L << 12,$/;"	e	enum:std::_Ios_Fmtflags
_S_state_in_brace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_state_in_brace,$/;"	e	enum:std::__detail::_ScannerBase::_StateT
_S_state_in_bracket	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_state_in_bracket,$/;"	e	enum:std::__detail::_ScannerBase::_StateT
_S_state_normal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_state_normal,$/;"	e	enum:std::__detail::_ScannerBase::_StateT
_S_synced_with_stdio	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      static bool		_S_synced_with_stdio;$/;"	m	class:std::ios_base::Init	typeref:typename:bool
_S_tail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _S_tail()$/;"	f	class:std::_Sp_counted_array	typeref:typename:size_t
_S_threshold	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^  enum { _S_threshold = 16 };$/;"	e	enum:std::__anon841809de0103
_S_ti	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    _S_ti() noexcept _GLIBCXX_VISIBILITY(default)$/;"	f	struct:std::_Sp_make_shared_tag	typeref:typename:const type_info &
_S_timezones	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      static const _CharT*		_S_timezones[14];$/;"	m	struct:std::__timepunct_cache	typeref:typename:const _CharT * [14]
_S_timezones	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    __timepunct_cache<char>::_S_timezones[14];$/;"	m	class:std::__timepunct_cache<char>	typeref:typename:const char * [14]
_S_timezones	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    __timepunct_cache<wchar_t>::_S_timezones[14];$/;"	m	class:std::__timepunct_cache<wchar_t>	typeref:typename:const wchar_t * [14]
_S_timezones	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    const _CharT* __timepunct_cache<_CharT>::_S_timezones[14];$/;"	m	class:std::__timepunct_cache<_CharT>	typeref:typename:const _CharT * [14]
_S_to_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	_S_to_pointer(_Tp __t)$/;"	f	class:std::reverse_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR pointer
_S_to_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	_S_to_pointer(_Tp* __p)$/;"	f	class:std::reverse_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR _Tp *
_S_to_string_view	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      _S_to_string_view(__sv_type __svt) noexcept$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR __sv_type
_S_to_sys	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	_S_to_sys(const chrono::time_point<__file_clock, _Dur>& __t) noexcept$/;"	f	struct:std::filesystem::__file_clock	typeref:typename:chrono::time_point<__sys_clock,_Dur>
_S_token_anychar	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_anychar,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_backref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_backref,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_bracket_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_bracket_begin,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_bracket_dash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_bracket_dash,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_bracket_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_bracket_end,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_bracket_neg_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_bracket_neg_begin,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_char_class_name	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_char_class_name,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_closure0	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_closure0,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_closure1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_closure1,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_collsymbol	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_collsymbol,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_comma	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_comma,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_dup_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_dup_count,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_eof	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_eof,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_equiv_class_name	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_equiv_class_name,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_hex_num	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_hex_num,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_interval_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_interval_begin,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_interval_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_interval_end,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_line_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_line_begin,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_line_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_line_end,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_oct_num	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_oct_num,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_opt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_opt,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_or	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_or,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_ord_char	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_ord_char,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_quoted_class	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_quoted_class,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_subexpr_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_subexpr_begin,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_subexpr_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_subexpr_end,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_subexpr_lookahead_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_subexpr_lookahead_begin, \/\/ neg if _M_value[0] == 'n'$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_subexpr_no_group_begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_subexpr_no_group_begin,$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_unknown	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_unknown = -1u$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_token_word_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      _S_token_word_bound, \/\/ neg if _M_value[0] == 'n'$/;"	e	enum:std::__detail::_ScannerBase::_TokenT
_S_trunc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_trunc 		= 1L << 5,$/;"	e	enum:std::_Ios_Openmode
_S_twinned_facets	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const id* const _S_twinned_facets[];$/;"	m	class:std::locale	typeref:typename:const id * const[]
_S_type_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      _S_type_size(ptrdiff_t __d) noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:ptrdiff_t
_S_under	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  static constexpr unsigned char _S_under = 1 << 0;$/;"	m	struct:std::regex_traits::_RegexMask	typeref:typename:unsigned char
_S_unitbuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_unitbuf 	= 1L << 13,$/;"	e	enum:std::_Ios_Fmtflags
_S_uppercase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _S_uppercase 	= 1L << 14,$/;"	e	enum:std::_Ios_Fmtflags
_S_use_relocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _S_use_relocate()$/;"	f	class:std::vector	typeref:typename:bool
_S_valid_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  static constexpr unsigned char _S_valid_mask = 0x1;$/;"	m	struct:std::regex_traits::_RegexMask	typeref:typename:unsigned char
_S_validate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      _S_validate(_FlagT __f)$/;"	f	class:std::__detail::_Compiler	typeref:typename:_FlagT
_S_valueless	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    static constexpr unsigned char _S_valueless{2};$/;"	m	class:std::common_iterator	typeref:typename:unsigned char
_S_word_bit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^  enum { _S_word_bit = int(__CHAR_BIT__ * sizeof(_Bit_type)) };$/;"	e	enum:std::__anon3095fb100103
_S_zero	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      _S_zero,$/;"	e	enum:std::money_base::__anon6d8b52b00103
_SafeConv	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	using _SafeConv$/;"	t	class:std::__shared_ptr	typeref:typename:enable_if<__sp_is_constructible<_Tp,_Yp>::value>::type
_Save_errno	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@string_conversions.h	/^	_Save_errno() : _M_errno(errno) { errno = 0; }$/;"	f	struct:__gnu_cxx::__stoa::_Save_errno
_Save_errno	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@string_conversions.h	/^      struct _Save_errno {$/;"	s	function:__gnu_cxx::__stoa
_Scanner	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    class _Scanner$/;"	c	namespace:std::__detail
_ScannerBase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    _ScannerBase(_FlagT __flags)$/;"	f	struct:std::__detail::_ScannerBase
_ScannerBase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^  struct _ScannerBase$/;"	s	namespace:std::__detail
_ScannerT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef _Scanner<_CharT>               _ScannerT;$/;"	t	class:std::__detail::_Compiler	typeref:typename:_Scanner<_CharT>
_Scoped_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^	_Scoped_ptr(_Tp* __ptr) noexcept$/;"	f	struct:std::__detail::_Scoped_ptr
_Scoped_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^	_Scoped_ptr(_Tp* __ptr, const char* __msg)$/;"	f	struct:std::__detail::_Scoped_ptr
_Scoped_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      struct _Scoped_ptr$/;"	s	namespace:std::__detail
_Select1st	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct _Select1st$/;"	s	namespace:std
_Select2nd	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct _Select2nd$/;"	s	namespace:std
_Select_int	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    using _Select_int = typename _Select_int_base<$/;"	t	namespace:std::__select_int	typeref:typename:_Select_int_base<__parse_int::_Parse_int<_Digs...>::value,unsigned char,unsigned short,unsigned int,unsigned long,unsigned long long>::type
_Select_int_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Select_int_base<_Val, _IntType, _Ints...>$/;"	s	namespace:std::__select_int
_Select_int_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    struct _Select_int_base<_Val>$/;"	s	namespace:std::__select_int
_Self	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef _Deque_iterator			_Self;$/;"	t	struct:std::_Deque_iterator	typeref:typename:_Deque_iterator
_Self	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Rb_tree_const_iterator<_Tp>		_Self;$/;"	t	struct:std::_Rb_tree_const_iterator	typeref:typename:_Rb_tree_const_iterator<_Tp>
_Self	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Rb_tree_iterator<_Tp>		_Self;$/;"	t	struct:std::_Rb_tree_iterator	typeref:typename:_Rb_tree_iterator<_Tp>
_Sequence_value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^      typedef typename _Sequence::value_type _Sequence_value_type;$/;"	t	class:std::stack	typeref:typename:_Sequence::value_type
_Sink	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    struct _Sink { void _GLIBCXX20_CONSTEXPR operator=(const void*) { } } _M_a;$/;"	s	struct:std::__uses_alloc0
_Size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	struct _Size : make_unsigned<_DiffT> { };$/;"	s	struct:std::allocator_traits
_Size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>$/;"	s	struct:std::allocator_traits
_Sp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      using _Sp = shared_ptr<_Tp>;$/;"	t	function:std::const_pointer_cast	typeref:typename:shared_ptr<_Tp>
_Sp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      using _Sp = shared_ptr<_Tp>;$/;"	t	function:std::dynamic_pointer_cast	typeref:typename:shared_ptr<_Tp>
_Sp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      using _Sp = shared_ptr<_Tp>;$/;"	t	function:std::reinterpret_pointer_cast	typeref:typename:shared_ptr<_Tp>
_Sp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      using _Sp = shared_ptr<_Tp>;$/;"	t	function:std::static_pointer_cast	typeref:typename:shared_ptr<_Tp>
_Sp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using _Sp = __shared_ptr<_Tp, _Lp>;$/;"	t	function:std::const_pointer_cast	typeref:typename:__shared_ptr<_Tp,_Lp>
_Sp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using _Sp = __shared_ptr<_Tp, _Lp>;$/;"	t	function:std::dynamic_pointer_cast	typeref:typename:__shared_ptr<_Tp,_Lp>
_Sp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using _Sp = __shared_ptr<_Tp, _Lp>;$/;"	t	function:std::reinterpret_pointer_cast	typeref:typename:__shared_ptr<_Tp,_Lp>
_Sp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using _Sp = __shared_ptr<_Tp, _Lp>;$/;"	t	function:std::static_pointer_cast	typeref:typename:__shared_ptr<_Tp,_Lp>
_Sp_alloc_shared_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct _Sp_alloc_shared_tag$/;"	s	namespace:std
_Sp_atomic	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      _Sp_atomic(value_type __r) noexcept$/;"	f	class:std::_Sp_atomic
_Sp_atomic	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    class _Sp_atomic$/;"	c	namespace:std
_Sp_ca_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	  using _Sp_ca_type = _Sp_counted_array<_Alloc, _Lp>;$/;"	t	function:std::__shared_count::__shared_count	typeref:typename:_Sp_counted_array<_Alloc,_Lp>
_Sp_cd_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	  typedef _Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp> _Sp_cd_type;$/;"	t	function:std::__shared_count::__shared_count	typeref:typename:_Sp_counted_deleter<_Ptr,_Deleter,_Alloc,_Lp>
_Sp_cd_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	  using _Sp_cd_type$/;"	t	function:std::__shared_count::__shared_count	typeref:typename:_Sp_counted_deleter<_Ptr,_Del2,allocator<void>,_Lp>
_Sp_counted_array	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _Sp_counted_array(const _Sp_counted_array_base<_Alloc>& __a,$/;"	f	class:std::_Sp_counted_array
_Sp_counted_array	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    class _Sp_counted_array final$/;"	c	namespace:std
_Sp_counted_array_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct _Sp_counted_array_base$/;"	s	namespace:std
_Sp_counted_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _Sp_counted_base() noexcept$/;"	f	class:std::_Sp_counted_base
_Sp_counted_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    class _Sp_counted_base$/;"	c	namespace:std
_Sp_counted_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _Sp_counted_deleter(_Ptr __p, _Deleter __d) noexcept$/;"	f	class:std::_Sp_counted_deleter
_Sp_counted_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _Sp_counted_deleter(_Ptr __p, _Deleter __d, const _Alloc& __a) noexcept$/;"	f	class:std::_Sp_counted_deleter
_Sp_counted_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    class _Sp_counted_deleter final : public _Sp_counted_base<_Lp>$/;"	c	namespace:std
_Sp_counted_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _Sp_counted_ptr(_Ptr __p) noexcept$/;"	f	class:std::_Sp_counted_ptr
_Sp_counted_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    class _Sp_counted_ptr final : public _Sp_counted_base<_Lp>$/;"	c	namespace:std
_Sp_counted_ptr_inplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	_Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)$/;"	f	class:std::_Sp_counted_ptr_inplace
_Sp_counted_ptr_inplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      _Sp_counted_ptr_inplace(const _Alloc& __a)$/;"	f	class:std::_Sp_counted_ptr_inplace
_Sp_counted_ptr_inplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    class _Sp_counted_ptr_inplace final : public _Sp_counted_base<_Lp>$/;"	c	namespace:std
_Sp_counted_ptr_inplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    class _Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp> final$/;"	c	namespace:std
_Sp_cp_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	  typedef _Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp> _Sp_cp_type;$/;"	t	function:std::__shared_count::__shared_count	typeref:typename:_Sp_counted_ptr_inplace<_Tp,_Alloc,_Lp>
_Sp_ebo_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      explicit _Sp_ebo_helper(_Tp&& __tp) : _M_tp(std::move(__tp)) { }$/;"	f	struct:std::_Sp_ebo_helper
_Sp_ebo_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      explicit _Sp_ebo_helper(_Tp&& __tp) : _Tp(std::move(__tp)) { }$/;"	f	struct:std::_Sp_ebo_helper
_Sp_ebo_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      explicit _Sp_ebo_helper(const _Tp& __tp) : _M_tp(__tp) { }$/;"	f	struct:std::_Sp_ebo_helper
_Sp_ebo_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      explicit _Sp_ebo_helper(const _Tp& __tp) : _Tp(__tp) { }$/;"	f	struct:std::_Sp_ebo_helper
_Sp_ebo_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct _Sp_ebo_helper<_Nm, _Tp, false>$/;"	s	namespace:std
_Sp_ebo_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct _Sp_ebo_helper<_Nm, _Tp, true> : private _Tp$/;"	s	namespace:std
_Sp_locker	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    explicit _Sp_locker(const void*, const void* = nullptr) { }$/;"	f	struct:std::_Sp_locker
_Sp_locker	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^  struct _Sp_locker$/;"	s	namespace:std
_Sp_make_shared_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^  struct _Sp_make_shared_tag$/;"	s	namespace:std
_Sp_overwrite_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^  struct _Sp_overwrite_tag { };$/;"	s	namespace:std
_Sp_owner_less	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct _Sp_owner_less : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
_Sp_owner_less	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct _Sp_owner_less<void, void>$/;"	s	namespace:std
_StackT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef std::stack<_StateSeqT>         _StackT;$/;"	t	class:std::__detail::_Compiler	typeref:typename:std::stack<_StateSeqT>
_State	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _State(_Opcode __opcode) noexcept : _State_base(__opcode)$/;"	f	struct:std::__detail::_State
_State	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _State(_State&& __rhs) noexcept : _State_base(__rhs)$/;"	f	struct:std::__detail::_State
_State	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _State(const _State& __rhs) : _State_base(__rhs)$/;"	f	struct:std::__detail::_State
_State	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    struct _State : _State_base$/;"	s	namespace:std::__detail
_State	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    struct _State$/;"	s	class:std::thread
_StateIdT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^  typedef long _StateIdT;$/;"	t	namespace:std::__detail	typeref:typename:long
_StateSeq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _StateSeq(_RegexT& __nfa, _StateIdT __s)$/;"	f	class:std::__detail::_StateSeq
_StateSeq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      _StateSeq(_RegexT& __nfa, _StateIdT __s, _StateIdT __end)$/;"	f	class:std::__detail::_StateSeq
_StateSeq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    class _StateSeq$/;"	c	namespace:std::__detail
_StateSeqT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef _StateSeq<_TraitsT>            _StateSeqT;$/;"	t	class:std::__detail::_Compiler	typeref:typename:_StateSeq<_TraitsT>
_StateT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      typedef _State<_Char_type>		_StateT;$/;"	t	struct:std::__detail::_NFA	typeref:typename:_State<_Char_type>
_StateT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    enum _StateT$/;"	g	struct:std::__detail::_ScannerBase
_State_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    explicit _State_base(_Opcode __opcode) noexcept$/;"	f	struct:std::__detail::_State_base
_State_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^  struct _State_base$/;"	s	namespace:std::__detail
_State_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^	  _State_impl(_Args&&... __args)$/;"	f	struct:std::thread::_State_impl
_State_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^      struct _State_impl : public _State$/;"	s	class:std::thread
_State_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^	  _State_info(_StateIdT __start, size_t __n)$/;"	f	struct:std::__detail::_Executor::_State_info
_State_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^	  _State_info(_StateIdT __start, size_t) : _M_start(__start)$/;"	f	struct:std::__detail::_Executor::_State_info
_State_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^	struct _State_info<__bfs, _ResultsVec>$/;"	s	class:std::__detail::_Executor
_State_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^	struct _State_info<__dfs, _ResultsVec>$/;"	s	class:std::__detail::_Executor
_State_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    using _State_ptr = unique_ptr<_State>;$/;"	t	class:std::thread	typeref:typename:unique_ptr<_State>
_Static_assert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define _Static_assert(/;"	d
_Std_pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator_args.h	/^    concept _Std_pair = __is_pair<remove_cv_t<_Tp>>;$/;"	v	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION concept
_Storage	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	  constexpr _Storage() : _M_byte() { }$/;"	f	union:std::vector::_Temporary_value::_Storage
_Storage	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	union _Storage$/;"	u	struct:std::vector::_Temporary_value
_Str	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef basic_string<_CharT, _Traits, _Alloc> _Str;$/;"	t	function:std::operator +	typeref:typename:basic_string<_CharT,_Traits,_Alloc>
_StrTransT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef _CharT                       _StrTransT;$/;"	t	class:std::__detail::_RegexTranslator	typeref:typename:_CharT
_StrTransT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef _CharT _StrTransT;$/;"	t	class:std::__detail::_RegexTranslator	typeref:typename:_CharT
_StrTransT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef _StringT _StrTransT;$/;"	t	class:std::__detail::_RegexTranslatorBase	typeref:typename:_StringT
_StrTransT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef typename _Base::_StrTransT _StrTransT;$/;"	t	class:std::__detail::_RegexTranslator	typeref:typename:_Base::_StrTransT
_StrTransT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef typename _TransT::_StrTransT                   _StrTransT;$/;"	t	struct:std::__detail::_BracketMatcher	typeref:typename:_TransT::_StrTransT
_StringT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef typename _TraitsT::string_type	      _StringT;$/;"	t	class:std::__detail::_RegexTranslatorBase	typeref:typename:_TraitsT::string_type
_StringT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef typename _TraitsT::string_type                 _StringT;$/;"	t	struct:std::__detail::_BracketMatcher	typeref:typename:_TraitsT::string_type
_StringT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef typename _TraitsT::string_type _StringT;$/;"	t	class:std::__detail::_Compiler	typeref:typename:_TraitsT::string_type
_StringT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^      typedef std::basic_string<_CharT>                           _StringT;$/;"	t	class:std::__detail::_Scanner	typeref:typename:std::basic_string<_CharT>
_THREAD_MUTEX_INTERNAL_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^#define _THREAD_MUTEX_INTERNAL_H /;"	d
_THREAD_SHARED_TYPES_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^#define _THREAD_SHARED_TYPES_H /;"	d
_TIME_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#define _TIME_H	/;"	d
_Tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^          typedef typename iterator_traits<_InIterator>::iterator_category _Tag;$/;"	t	function:std::basic_string::_M_construct_aux	typeref:typename:iterator_traits<_InIterator>::iterator_category
_Target_handler	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    struct _Target_handler$/;"	s	namespace:std
_Target_handler	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    struct _Target_handler<_Signature, _Functor, false>$/;"	s	namespace:std
_Temporary_buffer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^    _Temporary_buffer(_ForwardIterator __seed, size_type __original_len)$/;"	f	class:std::_Temporary_buffer
_Temporary_buffer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^    class _Temporary_buffer$/;"	c	namespace:std
_Temporary_value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)$/;"	f	struct:std::vector::_Temporary_value	typeref:typename:_GLIBCXX20_CONSTEXPR
_Temporary_value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      struct _Temporary_value$/;"	s	class:std::vector
_TmpBuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      typedef _Temporary_buffer<_BidirectionalIterator, _ValueType> _TmpBuf;$/;"	t	function:std::__inplace_merge	typeref:typename:_Temporary_buffer<_BidirectionalIterator,_ValueType>
_TmpBuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      typedef _Temporary_buffer<_RandomAccessIterator, _ValueType> _TmpBuf;$/;"	t	function:std::__stable_sort	typeref:typename:_Temporary_buffer<_RandomAccessIterator,_ValueType>
_TokenT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef typename _ScannerT::_TokenT    _TokenT;$/;"	t	class:std::__detail::_Compiler	typeref:typename:_ScannerT::_TokenT
_TokenT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^    enum _TokenT : unsigned$/;"	g	struct:std::__detail::_ScannerBase	typeref:typename:unsigned
_Tp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	  using _Tp = remove_pointer_t<_Init>;$/;"	t	function:std::_Sp_counted_array_base::_M_init	typeref:typename:remove_pointer_t<_Init>
_Tp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	using _Tp = typename allocator_traits<_Alloc>::value_type;$/;"	t	function:std::_Sp_counted_array::_S_tail	typeref:typename:allocator_traits<_Alloc>::value_type
_Tp1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator_args.h	/^      using _Tp1 = typename _Tp::first_type;$/;"	t	function:std::uses_allocator_construction_args	typeref:typename:_Tp::first_type
_Tp2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator_args.h	/^      using _Tp2 = typename _Tp::second_type;$/;"	t	function:std::uses_allocator_construction_args	typeref:typename:_Tp::second_type
_Tp2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^      struct _Tp2 { _Tp _M_t; };$/;"	s	struct:__gnu_cxx::__aligned_membuf
_Tp_alloc_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	rebind<_Tp>::other _Tp_alloc_type;$/;"	t	class:std::_Deque_base	typeref:typename:__gnu_cxx::__alloc_traits<_Alloc>::template rebind<_Tp>::other
_Tp_alloc_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;$/;"	t	class:std::deque	typeref:typename:_Base::_Tp_alloc_type
_Tp_alloc_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	rebind<_Tp>::other _Tp_alloc_type;$/;"	t	struct:std::_Vector_base	typeref:typename:__gnu_cxx::__alloc_traits<_Alloc>::template rebind<_Tp>::other
_Tp_alloc_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;$/;"	t	class:std::vector	typeref:typename:_Base::_Tp_alloc_type
_Tp_elt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      using _Tp_elt = typename shared_ptr<_Tp>::element_type;$/;"	t	function:std::operator <	typeref:typename:shared_ptr<_Tp>::element_type
_Tp_elt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using _Tp_elt = typename __shared_ptr<_Tp, _Lp>::element_type;$/;"	t	function:std::operator <	typeref:typename:__shared_ptr<_Tp,_Lp>::element_type
_Tp_nc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      typedef typename std::remove_const<_Tp>::type _Tp_nc;$/;"	t	function:std::__make_shared	typeref:typename:std::remove_const<_Tp>::type
_Tr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      using _Tr = char_traits<typename iterator_traits<_BiIter>::value_type>;$/;"	t	function:std::operator <=>	typeref:typename:char_traits<typename iterator_traits<_BiIter>::value_type>
_Tr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      using _Tr = char_traits<typename iterator_traits<_Bi_iter>::value_type>;$/;"	t	function:std::operator <=>	typeref:typename:char_traits<typename iterator_traits<_Bi_iter>::value_type>
_Tr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;$/;"	t	function:std::_Vector_base::_M_allocate	typeref:typename:__gnu_cxx::__alloc_traits<_Tp_alloc_type>
_Tr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;$/;"	t	function:std::_Vector_base::_M_deallocate	typeref:typename:__gnu_cxx::__alloc_traits<_Tp_alloc_type>
_Traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Traits;$/;"	t	function:std::_Deque_base::_M_allocate_node	typeref:typename:__gnu_cxx::__alloc_traits<_Tp_alloc_type>
_Traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Traits;$/;"	t	function:std::_Deque_base::_M_deallocate_node	typeref:typename:__gnu_cxx::__alloc_traits<_Tp_alloc_type>
_Traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	using _Traits = iterator_traits<_It>;$/;"	t	function:std::iterator_traits::_S_iter_cat	typeref:typename:iterator_traits<_It>
_TransT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef _RegexTranslator<_TraitsT, __icase, __collate> _TransT;$/;"	t	struct:std::__detail::_AnyMatcher	typeref:typename:_RegexTranslator<_TraitsT,__icase,__collate>
_TransT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef _RegexTranslator<_TraitsT, __icase, __collate> _TransT;$/;"	t	struct:std::__detail::_BracketMatcher	typeref:typename:_RegexTranslator<_TraitsT,__icase,__collate>
_TransT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      typedef _RegexTranslator<_TraitsT, __icase, __collate> _TransT;$/;"	t	struct:std::__detail::_CharMatcher	typeref:typename:_RegexTranslator<_TraitsT,__icase,__collate>
_Type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^	enum class _Type : char { _None, _Char, _Class } _M_type = _Type::_None;$/;"	g	struct:std::__detail::_Compiler::_BracketState	typeref:typename:char
_UINTPTR_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define _UINTPTR_T$/;"	d
_UNIQUE_PTR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^#define _UNIQUE_PTR_H /;"	d
_USES_ALLOCATOR_ARGS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator_args.h	/^#define _USES_ALLOCATOR_ARGS /;"	d
_USES_ALLOCATOR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^#define _USES_ALLOCATOR_H /;"	d
_USize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      using _USize = make_unsigned_t<_Size>;$/;"	t	function:std::__sample	typeref:typename:make_unsigned_t<_Size>
_UnboundedArray	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    using _UnboundedArray = _Tp;$/;"	t	namespace:std	typeref:typename:_Tp
_UnboundedArray	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    using _UnboundedArray$/;"	t	namespace:std	typeref:typename:__enable_if_t<__is_array_unknown_bounds<_Tp>::value,_Tp>
_Unchecked	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef _GLIBCXX_STD_C::vector<sub_match<_Bi_iter>, _Alloc> _Unchecked;$/;"	t	class:std::match_results	typeref:typename:_GLIBCXX_STD_C::vector<sub_match<_Bi_iter>,_Alloc>
_UniqAssignable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	using _UniqAssignable = _UniqCompatible<_Yp, _Del, __shared_ptr&>;$/;"	t	class:std::__shared_ptr	typeref:typename:_UniqCompatible<_Yp,_Del,__shared_ptr &>
_UniqCompatible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	using _UniqCompatible = __enable_if_t<__and_<$/;"	t	class:std::__shared_ptr
_UnsignedCharT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      using _UnsignedCharT = typename std::make_unsigned<_CharT>::type;$/;"	t	struct:std::__detail::_BracketMatcher	typeref:typename:std::make_unsigned<_CharT>::type
_Up	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^      using _Up = typename decay<_Tp>::type;$/;"	t	function:std::throw_with_nested	typeref:typename:decay<_Tp>::type
_Up	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      using _Up = remove_all_extents_t<_Tp>;$/;"	t	function:std::__make_shared_arrN_tag	typeref:typename:remove_all_extents_t<_Tp>
_Up	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      using _Up = remove_all_extents_t<_Tp>;$/;"	t	function:std::__make_shared_arr_tag	typeref:typename:remove_all_extents_t<_Tp>
_Up	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	  using _Up = remove_all_extents_t<_Tp>;$/;"	t	function:std::__shared_count::__shared_count	typeref:typename:remove_all_extents_t<_Tp>
_Up	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	  using _Up = typename allocator_traits<_Alloc>::value_type;$/;"	t	function:std::_Sp_counted_array_base::_M_init	typeref:typename:allocator_traits<_Alloc>::value_type
_UpAlloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      using _UpAlloc = __alloc_rebind<_Alloc, _Up>;$/;"	t	function:std::__make_shared_arrN_tag	typeref:typename:__alloc_rebind<_Alloc,_Up>
_UpAlloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      using _UpAlloc = __alloc_rebind<_Alloc, _Up>;$/;"	t	function:std::__make_shared_arr_tag	typeref:typename:__alloc_rebind<_Alloc,_Up>
_Up_elt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      using _Up_elt = typename shared_ptr<_Up>::element_type;$/;"	t	function:std::operator <	typeref:typename:shared_ptr<_Up>::element_type
_Up_elt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using _Up_elt = typename __shared_ptr<_Up, _Lp>::element_type;$/;"	t	function:std::operator <	typeref:typename:__shared_ptr<_Up,_Lp>::element_type
_Up_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	  using _Up_traits = __gnu_cxx::__int_traits<_Up>;$/;"	t	function:std::uniform_int_distribution::_S_nd	typeref:typename:__gnu_cxx::__int_traits<_Up>
_UseCache	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      using _UseCache = typename std::is_same<_CharT, char>::type;$/;"	t	struct:std::__detail::_BracketMatcher	typeref:typename:std::is_same<_CharT,char>::type
_Uses	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^	using _Uses = typename$/;"	t	class:std::stack	typeref:typename:enable_if<uses_allocator<_Sequence,_Alloc>::value>::type
_VA_LIST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdarg.h	/^#define _VA_LIST$/;"	d
_VA_LIST_DEFINED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#   define _VA_LIST_DEFINED$/;"	d
_VA_LIST_DEFINED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#   define _VA_LIST_DEFINED$/;"	d
_Val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      using _Val = typename remove_volatile<_Tp>::type;$/;"	t	namespace:std::__atomic_impl	typeref:typename:remove_volatile<_Tp>::type
_Val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	using _Val = __parse_int::_Parse_int<_Digits...>;$/;"	t	function:std::literals::chrono_literals::__check_overflow	typeref:typename:__parse_int::_Parse_int<_Digits...>
_ValT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  using _ValT = typename iterator_traits<_InputIterator>::value_type;$/;"	t	function:std::basic_regex::assign	typeref:typename:iterator_traits<_InputIterator>::value_type
_Val_comp_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Val_comp_iter(_Compare __comp)$/;"	f	struct:__gnu_cxx::__ops::_Val_comp_iter	typeref:typename:_GLIBCXX20_CONSTEXPR
_Val_comp_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Val_comp_iter(_Iter_comp_iter<_Compare>&& __comp)$/;"	f	struct:__gnu_cxx::__ops::_Val_comp_iter	typeref:typename:_GLIBCXX20_CONSTEXPR
_Val_comp_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      _Val_comp_iter(const _Iter_comp_iter<_Compare>& __comp)$/;"	f	struct:__gnu_cxx::__ops::_Val_comp_iter	typeref:typename:_GLIBCXX20_CONSTEXPR
_Val_comp_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    struct _Val_comp_iter$/;"	s	namespace:__gnu_cxx::__ops
_Val_less_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    _Val_less_iter(_Iter_less_iter) { }$/;"	f	struct:__gnu_cxx::__ops::_Val_less_iter	typeref:typename:_GLIBCXX20_CONSTEXPR
_Val_less_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^  struct _Val_less_iter$/;"	s	namespace:__gnu_cxx::__ops
_ValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	  _ValueType;$/;"	t	function:std::__inplace_merge	typeref:typename:iterator_traits<_BidirectionalIterator>::value_type
_ValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	_ValueType;$/;"	t	function:std::__rotate	typeref:typename:iterator_traits<_RandomAccessIterator>::value_type
_ValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	_ValueType;$/;"	t	function:std::__stable_partition	typeref:typename:iterator_traits<_ForwardIterator>::value_type
_ValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	_ValueType;$/;"	t	function:std::__stable_sort	typeref:typename:iterator_traits<_RandomAccessIterator>::value_type
_ValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^	  _ValueType;$/;"	t	function:std::__make_heap	typeref:typename:iterator_traits<_RandomAccessIterator>::value_type
_ValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^	  _ValueType;$/;"	t	function:std::push_heap	typeref:typename:iterator_traits<_RandomAccessIterator>::value_type
_ValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^	_ValueType;$/;"	t	function:std::__pop_heap	typeref:typename:iterator_traits<_RandomAccessIterator>::value_type
_ValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^	_ValueType;$/;"	t	function:std::__uninitialized_construct_buf	typeref:typename:std::iterator_traits<_Pointer>::value_type
_ValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^	_ValueType;$/;"	t	function:std::__relocate_a_1	typeref:typename:iterator_traits<_InputIterator>::value_type
_ValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^	_ValueType;$/;"	t	function:std::__uninitialized_default	typeref:typename:iterator_traits<_ForwardIterator>::value_type
_ValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^	_ValueType;$/;"	t	function:std::__uninitialized_default_n	typeref:typename:iterator_traits<_ForwardIterator>::value_type
_ValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^	_ValueType;$/;"	t	function:std::__uninitialized_default_novalue	typeref:typename:iterator_traits<_ForwardIterator>::value_type
_ValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^	_ValueType;$/;"	t	function:std::__uninitialized_default_novalue_n	typeref:typename:iterator_traits<_ForwardIterator>::value_type
_ValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^	_ValueType;$/;"	t	function:std::uninitialized_fill	typeref:typename:iterator_traits<_ForwardIterator>::value_type
_ValueType	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^	_ValueType;$/;"	t	function:std::uninitialized_fill_n	typeref:typename:iterator_traits<_ForwardIterator>::value_type
_ValueType1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	    _ValueType1;$/;"	t	function:std::__iter_swap::iter_swap	typeref:typename:iterator_traits<_ForwardIterator1>::value_type
_ValueType1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	_ValueType1;$/;"	t	function:std::iter_swap	typeref:typename:iterator_traits<_ForwardIterator1>::value_type
_ValueType1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^      typedef typename iterator_traits<_II1>::value_type _ValueType1;$/;"	t	function:std::__equal_aux1	typeref:typename:iterator_traits<_II1>::value_type
_ValueType1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^      typedef typename iterator_traits<_II1>::value_type _ValueType1;$/;"	t	function:std::__lexicographical_compare_aux1	typeref:typename:iterator_traits<_II1>::value_type
_ValueType1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^      typedef typename iterator_traits<_II1>::value_type _ValueType1;$/;"	t	function:std::lexicographical_compare	typeref:typename:iterator_traits<_II1>::value_type
_ValueType1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^	_ValueType1;$/;"	t	function:std::uninitialized_copy	typeref:typename:iterator_traits<_InputIterator>::value_type
_ValueType2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	_ValueType2;$/;"	t	function:std::iter_swap	typeref:typename:iterator_traits<_ForwardIterator2>::value_type
_ValueType2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^      typedef typename iterator_traits<_II2>::value_type _ValueType2;$/;"	t	function:std::__lexicographical_compare_aux1	typeref:typename:iterator_traits<_II2>::value_type
_ValueType2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^      typedef typename iterator_traits<_II2>::value_type _ValueType2;$/;"	t	function:std::lexicographical_compare	typeref:typename:iterator_traits<_II2>::value_type
_ValueType2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^	_ValueType2;$/;"	t	function:std::__relocate_a_1	typeref:typename:iterator_traits<_ForwardIterator>::value_type
_ValueType2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^	_ValueType2;$/;"	t	function:std::uninitialized_copy	typeref:typename:iterator_traits<_ForwardIterator>::value_type
_Value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^                       _Value_type;$/;"	t	function:std::_Destroy	typeref:typename:iterator_traits<_ForwardIterator>::value_type
_Value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^                       _Value_type;$/;"	t	function:std::_Destroy_n	typeref:typename:iterator_traits<_ForwardIterator>::value_type
_Vector_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _Vector_base() { }$/;"	f	struct:std::_Vector_base
_Vector_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _Vector_base(_Tp_alloc_type&& __a) noexcept$/;"	f	struct:std::_Vector_base	typeref:typename:_GLIBCXX20_CONSTEXPR
_Vector_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _Vector_base(_Vector_base&& __x, const allocator_type& __a)$/;"	f	struct:std::_Vector_base	typeref:typename:_GLIBCXX20_CONSTEXPR
_Vector_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Vector_base	typeref:typename:_GLIBCXX20_CONSTEXPR
_Vector_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _Vector_base(const allocator_type& __a, _Vector_base&& __x)$/;"	f	struct:std::_Vector_base	typeref:typename:_GLIBCXX20_CONSTEXPR
_Vector_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _Vector_base(size_t __n)$/;"	f	struct:std::_Vector_base	typeref:typename:_GLIBCXX20_CONSTEXPR
_Vector_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      _Vector_base(size_t __n, const allocator_type& __a)$/;"	f	struct:std::_Vector_base	typeref:typename:_GLIBCXX20_CONSTEXPR
_Vector_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^    struct _Vector_base$/;"	s	namespace:std
_Vector_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_Vector_impl() _GLIBCXX_NOEXCEPT_IF($/;"	f	struct:std::_Vector_base::_Vector_impl	typeref:typename:_GLIBCXX20_CONSTEXPR
_Vector_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Vector_base::_Vector_impl	typeref:typename:_GLIBCXX20_CONSTEXPR
_Vector_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_Vector_impl(_Tp_alloc_type&& __a) noexcept$/;"	f	struct:std::_Vector_base::_Vector_impl	typeref:typename:_GLIBCXX20_CONSTEXPR
_Vector_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept$/;"	f	struct:std::_Vector_base::_Vector_impl	typeref:typename:_GLIBCXX20_CONSTEXPR
_Vector_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_Vector_impl(_Vector_impl&& __x) noexcept$/;"	f	struct:std::_Vector_base::_Vector_impl	typeref:typename:_GLIBCXX20_CONSTEXPR
_Vector_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      struct _Vector_impl$/;"	s	struct:std::_Vector_base
_Vector_impl_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_Vector_impl_data() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Vector_base::_Vector_impl_data	typeref:typename:_GLIBCXX20_CONSTEXPR
_Vector_impl_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	_Vector_impl_data(_Vector_impl_data&& __x) noexcept$/;"	f	struct:std::_Vector_base::_Vector_impl_data	typeref:typename:_GLIBCXX20_CONSTEXPR
_Vector_impl_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      struct _Vector_impl_data$/;"	s	struct:std::_Vector_base
_Vp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^	using _Vp = _Val<_Tp>;$/;"	t	function:std::__atomic_impl::__compare_exchange	typeref:typename:_Val<_Tp>
_Vp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      using _Vp = typename common_type<_Tp_elt*, _Up_elt*>::type;$/;"	t	function:std::operator <	typeref:typename:common_type<_Tp_elt *,_Up_elt * >::type
_Vp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using _Vp = typename common_type<_Tp_elt*, _Up_elt*>::type;$/;"	t	function:std::operator <	typeref:typename:common_type<_Tp_elt *,_Up_elt * >::type
_Vp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	  using _Vp = __conditional_t<_MoveValue,$/;"	t	function:std::_Rb_tree::_M_clone_node	typeref:typename:__conditional_t<_MoveValue,value_type &&,const value_type &>
_WCHAR_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#define _WCHAR_H /;"	d
_WCHAR_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^#define _WCHAR_T$/;"	d
_WCHAR_T_DEFINED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^#define _WCHAR_T_DEFINED$/;"	d
_WCTYPE_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wctype.h	/^#define _WCTYPE_H /;"	d
_WINT_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@wint_t.h	/^#define _WINT_T /;"	d
_WINT_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^#define _WINT_T$/;"	d
_Weak_result_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Weak_result_type$/;"	s	namespace:std
_Weak_result_type_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    _Weak_result_type_impl<_Res(*)(_ArgTypes......) _GLIBCXX_NOEXCEPT_QUAL>$/;"	s	namespace:std
_Weak_result_type_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Weak_result_type_impl$/;"	s	namespace:std
_Weak_result_type_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Weak_result_type_impl<_Res(*)(_ArgTypes...) _GLIBCXX_NOEXCEPT_QUAL>$/;"	s	namespace:std
_Weak_result_type_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Weak_result_type_impl<_Res(_ArgTypes...) _GLIBCXX_NOEXCEPT_QUAL>$/;"	s	namespace:std
_Weak_result_type_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Weak_result_type_impl<_Res(_ArgTypes......) _GLIBCXX_NOEXCEPT_QUAL>$/;"	s	namespace:std
_Weak_result_type_memfun	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Weak_result_type_memfun$/;"	s	namespace:std
_Weak_result_type_memfun	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Weak_result_type_memfun<_Func _Class::*, false>$/;"	s	namespace:std
_Weak_result_type_memfun	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    struct _Weak_result_type_memfun<_MemFunPtr, true>$/;"	s	namespace:std
_Wide_streambuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      typedef basic_streambuf<_Elem, _Tr> _Wide_streambuf;$/;"	t	class:std::wbuffer_convert	typeref:typename:basic_streambuf<_Elem,_Tr>
_Words	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      _Words() : _M_pword(0), _M_iword(0) { }$/;"	f	struct:std::ios_base::_Words
_Words	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    struct _Words$/;"	s	class:std::ios_base
_Wp_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	  using _Wp_traits = __gnu_cxx::__int_traits<_Wp>;$/;"	t	function:std::uniform_int_distribution::_S_nd	typeref:typename:__gnu_cxx::__int_traits<_Wp>
_Wrapper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^	using _Wrapper = _Call_wrapper<_Callable, _Args...>;$/;"	t	function:std::thread::thread	typeref:typename:_Call_wrapper<_Callable,_Args...>
_XOPEN_SOURCE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define _XOPEN_SOURCE	/;"	d
_XOPEN_SOURCE_EXTENDED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define _XOPEN_SOURCE_EXTENDED	/;"	d
__3way	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	__3way(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2)$/;"	f	struct:std::__lexicographical_compare	typeref:typename:_GLIBCXX20_CONSTEXPR int
__3way	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	__3way(const _Tp* __first1, const _Tp* __last1,$/;"	f	struct:std::__lexicographical_compare	typeref:typename:_GLIBCXX20_CONSTEXPR ptrdiff_t
__ASMNAME	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __ASMNAME(cname)  __ASMNAME2/;"	d
__ASMNAME2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __ASMNAME2(/;"	d
__ASSERT_FILE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@assert.h	/^#    define __ASSERT_FILE /;"	d
__ASSERT_FILE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@assert.h	/^#   define __ASSERT_FILE /;"	d
__ASSERT_FUNCTION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@assert.h	/^#   define __ASSERT_FUNCTION	/;"	d
__ASSERT_LINE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@assert.h	/^#    define __ASSERT_LINE /;"	d
__ASSERT_LINE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@assert.h	/^#   define __ASSERT_LINE /;"	d
__ASSERT_VOID_CAST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@assert.h	/^# define __ASSERT_VOID_CAST /;"	d
__BEGIN_DECLS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __BEGIN_DECLS	/;"	d
__BEGIN_DECLS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __BEGIN_DECLS$/;"	d
__BIG_ENDIAN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@endian.h	/^#define	__BIG_ENDIAN	/;"	d
__BIT_TYPES_DEFINED__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^#define __BIT_TYPES_DEFINED__	/;"	d
__BLKCNT64_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __BLKCNT64_T_TYPE	/;"	d
__BLKCNT_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __BLKCNT_T_TYPE	/;"	d
__BLKSIZE_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __BLKSIZE_T_TYPE	/;"	d
__BYTE_ORDER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@endianness.h	/^#define __BYTE_ORDER /;"	d
__CFLOAT128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn.h	/^#   define __CFLOAT128 /;"	d
__CFLOAT128X	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __CFLOAT128X /;"	d
__CFLOAT16	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __CFLOAT16 /;"	d
__CFLOAT32	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __CFLOAT32 /;"	d
__CFLOAT32X	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __CFLOAT32X /;"	d
__CFLOAT64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#    define __CFLOAT64 /;"	d
__CFLOAT64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __CFLOAT64 /;"	d
__CFLOAT64X	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#    define __CFLOAT64X /;"	d
__CFLOAT64X	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __CFLOAT64X /;"	d
__CLANG_MAX_ALIGN_T_DEFINED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@__stddef_max_align_t.h	/^#define __CLANG_MAX_ALIGN_T_DEFINED$/;"	d
__CLANG_STDINT_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define __CLANG_STDINT_H$/;"	d
__CLOCKID_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __CLOCKID_T_TYPE	/;"	d
__CLOCK_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __CLOCK_T_TYPE	/;"	d
__COLD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __COLD	/;"	d
__COLD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __COLD$/;"	d
__COLD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __COLD$/;"	d
__COMMA__	include/sak/stream/serial_data.hpp	/^#define __COMMA__ /;"	d
__COMPAR_FN_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^# define __COMPAR_FN_T$/;"	d
__CONCAT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#define __CONCAT(/;"	d
__CORRECT_ISO_CPP_WCHAR_H_PROTO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^# define __CORRECT_ISO_CPP_WCHAR_H_PROTO$/;"	d
__CPUELT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^#define __CPUELT(/;"	d
__CPUMASK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^#define __CPUMASK(/;"	d
__CPU_ALLOC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^#define __CPU_ALLOC(/;"	d
__CPU_ALLOC_SIZE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^#define __CPU_ALLOC_SIZE(/;"	d
__CPU_CLR_S	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^#define __CPU_CLR_S(/;"	d
__CPU_COUNT_S	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^#define __CPU_COUNT_S(/;"	d
__CPU_EQUAL_S	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^# define __CPU_EQUAL_S(/;"	d
__CPU_FREE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^#define __CPU_FREE(/;"	d
__CPU_ISSET_S	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^#define __CPU_ISSET_S(/;"	d
__CPU_MASK_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __CPU_MASK_TYPE /;"	d
__CPU_OP_S	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^#define __CPU_OP_S(/;"	d
__CPU_SETSIZE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^#define __CPU_SETSIZE	/;"	d
__CPU_SET_S	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^#define __CPU_SET_S(/;"	d
__CPU_ZERO_S	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^# define __CPU_ZERO_S(/;"	d
__DADDR_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __DADDR_T_TYPE	/;"	d
__DEV_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __DEV_T_TYPE	/;"	d
__END_DECLS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __END_DECLS	/;"	d
__END_DECLS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __END_DECLS$/;"	d
__EXCEPTION_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception.h	/^#define __EXCEPTION_H /;"	d
__FDS_BITS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^# define __FDS_BITS(/;"	d
__FD_CLR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@select.h	/^#define __FD_CLR(/;"	d
__FD_ELT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^#define	__FD_ELT(/;"	d
__FD_ISSET	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@select.h	/^#define __FD_ISSET(/;"	d
__FD_MASK	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^#define	__FD_MASK(/;"	d
__FD_SET	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@select.h	/^#define __FD_SET(/;"	d
__FD_SETSIZE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __FD_SETSIZE	/;"	d
__FD_ZERO	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@select.h	/^#define __FD_ZERO(/;"	d
__FILE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__FILE.h	/^typedef struct _IO_FILE __FILE;$/;"	t	typeref:struct:_IO_FILE
__FILE_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@FILE.h	/^#define __FILE_defined /;"	d
__FLOAT_WORD_ORDER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@endian.h	/^# define __FLOAT_WORD_ORDER /;"	d
__FSBLKCNT64_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __FSBLKCNT64_T_TYPE	/;"	d
__FSBLKCNT_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __FSBLKCNT_T_TYPE	/;"	d
__FSFILCNT64_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __FSFILCNT64_T_TYPE	/;"	d
__FSFILCNT_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __FSFILCNT_T_TYPE	/;"	d
__FSID_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __FSID_T_TYPE	/;"	d
__FSWORD_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^# define __FSWORD_T_TYPE	/;"	d
__GID_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __GID_T_TYPE	/;"	d
__GLIBCXX__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^#define __GLIBCXX__ /;"	d
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION$/;"	d
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION$/;"	d
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION$/;"	d
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION$/;"	d
__GLIBC_MINOR__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#define	__GLIBC_MINOR__	/;"	d
__GLIBC_PREREQ	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#define __GLIBC_PREREQ(/;"	d
__GLIBC_USE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#define __GLIBC_USE(F)	__GLIBC_USE_/;"	d
__GLIBC_USE_C2X_STRTOL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __GLIBC_USE_C2X_STRTOL /;"	d
__GLIBC_USE_DEPRECATED_GETS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __GLIBC_USE_DEPRECATED_GETS /;"	d
__GLIBC_USE_DEPRECATED_SCANF	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __GLIBC_USE_DEPRECATED_SCANF /;"	d
__GLIBC_USE_IEC_60559_BFP_EXT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@libc-header-start.h	/^# define __GLIBC_USE_IEC_60559_BFP_EXT /;"	d
__GLIBC_USE_IEC_60559_BFP_EXT_C2X	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@libc-header-start.h	/^# define __GLIBC_USE_IEC_60559_BFP_EXT_C2X /;"	d
__GLIBC_USE_IEC_60559_EXT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@libc-header-start.h	/^# define __GLIBC_USE_IEC_60559_EXT /;"	d
__GLIBC_USE_IEC_60559_FUNCS_EXT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@libc-header-start.h	/^# define __GLIBC_USE_IEC_60559_FUNCS_EXT /;"	d
__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@libc-header-start.h	/^# define __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X /;"	d
__GLIBC_USE_IEC_60559_TYPES_EXT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@libc-header-start.h	/^# define __GLIBC_USE_IEC_60559_TYPES_EXT /;"	d
__GLIBC_USE_ISOC2X	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __GLIBC_USE_ISOC2X	/;"	d
__GLIBC_USE_LIB_EXT2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@libc-header-start.h	/^# define __GLIBC_USE_LIB_EXT2 /;"	d
__GLIBC__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#define	__GLIBC__	/;"	d
__GNUC_PREREQ	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __GNUC_PREREQ(/;"	d
__GNUC_VA_LIST	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdarg.h	/^#define __GNUC_VA_LIST$/;"	d
__GNU_GETTEXT_SUPPORTED_REVISION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@libintl.h	/^#define __GNU_GETTEXT_SUPPORTED_REVISION(/;"	d
__GNU_LIBRARY__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#define __GNU_LIBRARY__ /;"	d
__GTHREADS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^#define __GTHREADS /;"	d
__GTHREADS_CXX0X	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^#define __GTHREADS_CXX0X /;"	d
__GTHREAD_COND_INIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^#define __GTHREAD_COND_INIT /;"	d
__GTHREAD_COND_INIT_FUNCTION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^# define __GTHREAD_COND_INIT_FUNCTION /;"	d
__GTHREAD_HAS_COND	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^#define __GTHREAD_HAS_COND	/;"	d
__GTHREAD_MUTEX_INIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^#define __GTHREAD_MUTEX_INIT /;"	d
__GTHREAD_MUTEX_INIT_FUNCTION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^#define __GTHREAD_MUTEX_INIT_FUNCTION /;"	d
__GTHREAD_ONCE_INIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^#define __GTHREAD_ONCE_INIT /;"	d
__GTHREAD_RECURSIVE_MUTEX_INIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^#define __GTHREAD_RECURSIVE_MUTEX_INIT /;"	d
__GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^# define __GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION /;"	d
__GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^#define __GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION /;"	d
__GTHREAD_TIME_INIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^#define __GTHREAD_TIME_INIT /;"	d
__HAVE_DISTINCT_FLOAT128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn.h	/^# define __HAVE_DISTINCT_FLOAT128 /;"	d
__HAVE_DISTINCT_FLOAT128X	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#define __HAVE_DISTINCT_FLOAT128X /;"	d
__HAVE_DISTINCT_FLOAT16	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#define __HAVE_DISTINCT_FLOAT16 /;"	d
__HAVE_DISTINCT_FLOAT32	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#define __HAVE_DISTINCT_FLOAT32 /;"	d
__HAVE_DISTINCT_FLOAT32X	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#define __HAVE_DISTINCT_FLOAT32X /;"	d
__HAVE_DISTINCT_FLOAT64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#define __HAVE_DISTINCT_FLOAT64 /;"	d
__HAVE_DISTINCT_FLOAT64X	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#define __HAVE_DISTINCT_FLOAT64X /;"	d
__HAVE_FLOAT128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn.h	/^# define __HAVE_FLOAT128 /;"	d
__HAVE_FLOAT128X	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#define __HAVE_FLOAT128X /;"	d
__HAVE_FLOAT128_UNLIKE_LDBL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#define __HAVE_FLOAT128_UNLIKE_LDBL /;"	d
__HAVE_FLOAT16	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#define __HAVE_FLOAT16 /;"	d
__HAVE_FLOAT32	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#define __HAVE_FLOAT32 /;"	d
__HAVE_FLOAT32X	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#define __HAVE_FLOAT32X /;"	d
__HAVE_FLOAT64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#define __HAVE_FLOAT64 /;"	d
__HAVE_FLOAT64X	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn.h	/^#define __HAVE_FLOAT64X /;"	d
__HAVE_FLOAT64X_LONG_DOUBLE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn.h	/^#define __HAVE_FLOAT64X_LONG_DOUBLE /;"	d
__HAVE_FLOATN_NOT_TYPEDEF	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^# define __HAVE_FLOATN_NOT_TYPEDEF /;"	d
__HAVE_GENERIC_SELECTION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __HAVE_GENERIC_SELECTION /;"	d
__ID_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __ID_T_TYPE	/;"	d
__INO64_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __INO64_T_TYPE	/;"	d
__INO_T_MATCHES_INO64_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^# define __INO_T_MATCHES_INO64_T	/;"	d
__INO_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __INO_T_TYPE	/;"	d
__INT64_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define __INT64_C(/;"	d
__INTN_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define  __INTN_C(/;"	d
__INTN_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define  __INTN_MAX(/;"	d
__INTN_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define  __INTN_MIN(/;"	d
__INT_LEAST16_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __INT_LEAST16_MAX /;"	d
__INT_LEAST16_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __INT_LEAST16_MIN /;"	d
__INT_LEAST32_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __INT_LEAST32_MAX /;"	d
__INT_LEAST32_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __INT_LEAST32_MIN /;"	d
__INT_LEAST64_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __INT_LEAST64_MAX /;"	d
__INT_LEAST64_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __INT_LEAST64_MIN /;"	d
__INT_LEAST8_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __INT_LEAST8_MAX /;"	d
__INT_LEAST8_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __INT_LEAST8_MIN /;"	d
__INT_N	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^#define __INT_N(/;"	d
__ISwalnum	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  __ISwalnum = 11,			\/* Alphanumeric.  *\/$/;"	e	enum:__anon16a540eb0103
__ISwalpha	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  __ISwalpha = 2,			\/* Alphabetic.  *\/$/;"	e	enum:__anon16a540eb0103
__ISwblank	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  __ISwblank = 8,			\/* Blank (usually SPC and TAB).  *\/$/;"	e	enum:__anon16a540eb0103
__ISwcntrl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  __ISwcntrl = 9,			\/* Control character.  *\/$/;"	e	enum:__anon16a540eb0103
__ISwdigit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  __ISwdigit = 3,			\/* Numeric.  *\/$/;"	e	enum:__anon16a540eb0103
__ISwgraph	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  __ISwgraph = 7,			\/* Graphical.  *\/$/;"	e	enum:__anon16a540eb0103
__ISwlower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  __ISwlower = 1,			\/* lowercase.  *\/$/;"	e	enum:__anon16a540eb0103
__ISwprint	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  __ISwprint = 6,			\/* Printing.  *\/$/;"	e	enum:__anon16a540eb0103
__ISwpunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  __ISwpunct = 10,			\/* Punctuation.  *\/$/;"	e	enum:__anon16a540eb0103
__ISwspace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  __ISwspace = 5,			\/* Whitespace.  *\/$/;"	e	enum:__anon16a540eb0103
__ISwupper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  __ISwupper = 0,			\/* UPPERCASE.  *\/$/;"	e	enum:__anon16a540eb0103
__ISwxdigit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^  __ISwxdigit = 4,			\/* Hexadecimal numeric.  *\/$/;"	e	enum:__anon16a540eb0103
__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^# define __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64 /;"	d
__KERNEL_STRICT_NAMES	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __KERNEL_STRICT_NAMES$/;"	d
__KEY_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __KEY_T_TYPE	/;"	d
__LC_ADDRESS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@locale.h	/^#define __LC_ADDRESS	/;"	d
__LC_ALL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@locale.h	/^#define __LC_ALL	/;"	d
__LC_COLLATE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@locale.h	/^#define __LC_COLLATE	/;"	d
__LC_CTYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@locale.h	/^#define __LC_CTYPE	/;"	d
__LC_IDENTIFICATION	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@locale.h	/^#define __LC_IDENTIFICATION	/;"	d
__LC_MEASUREMENT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@locale.h	/^#define __LC_MEASUREMENT	/;"	d
__LC_MESSAGES	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@locale.h	/^#define __LC_MESSAGES	/;"	d
__LC_MONETARY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@locale.h	/^#define __LC_MONETARY	/;"	d
__LC_NAME	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@locale.h	/^#define __LC_NAME	/;"	d
__LC_NUMERIC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@locale.h	/^#define __LC_NUMERIC	/;"	d
__LC_PAPER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@locale.h	/^#define __LC_PAPER	/;"	d
__LC_TELEPHONE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@locale.h	/^#define __LC_TELEPHONE	/;"	d
__LC_TIME	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@locale.h	/^#define __LC_TIME	/;"	d
__LDBL_COMPAT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __LDBL_COMPAT /;"	d
__LDBL_REDIR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __LDBL_REDIR(/;"	d
__LDBL_REDIR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __LDBL_REDIR(/;"	d
__LDBL_REDIR1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __LDBL_REDIR1(/;"	d
__LDBL_REDIR1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __LDBL_REDIR1(/;"	d
__LDBL_REDIR1_DECL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __LDBL_REDIR1_DECL(/;"	d
__LDBL_REDIR1_NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __LDBL_REDIR1_NTH(/;"	d
__LDBL_REDIR1_NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __LDBL_REDIR1_NTH(/;"	d
__LDBL_REDIR2_DECL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __LDBL_REDIR2_DECL(/;"	d
__LDBL_REDIR2_DECL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __LDBL_REDIR2_DECL(/;"	d
__LDBL_REDIR_DECL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __LDBL_REDIR_DECL(/;"	d
__LDBL_REDIR_DECL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __LDBL_REDIR_DECL(/;"	d
__LDBL_REDIR_NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __LDBL_REDIR_NTH(/;"	d
__LDBL_REDIR_NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __LDBL_REDIR_NTH(/;"	d
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@long-double.h	/^#define __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI /;"	d
__LEAF	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __LEAF /;"	d
__LEAF	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __LEAF$/;"	d
__LEAF_ATTR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __LEAF_ATTR /;"	d
__LEAF_ATTR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __LEAF_ATTR$/;"	d
__LITTLE_ENDIAN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@endian.h	/^#define	__LITTLE_ENDIAN	/;"	d
__LOCK_ALIGNMENT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^#define __LOCK_ALIGNMENT$/;"	d
__LONG_LONG_PAIR	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@endian.h	/^# define __LONG_LONG_PAIR(/;"	d
__MODE_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __MODE_T_TYPE	/;"	d
__NCPUBITS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^#define __NCPUBITS	/;"	d
__NFDBITS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^#define __NFDBITS	/;"	d
__NLINK_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^# define __NLINK_T_TYPE	/;"	d
__NO_CTYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@os_defines.h	/^#define __NO_CTYPE /;"	d
__NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@stdlib-float.h	/^__NTH (atof (const char *__nptr))$/;"	f	typeref:typename:__extern_inline double
__NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^__NTH (toupper (int __c))$/;"	f	typeref:typename:__extern_inline int
__NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^__NTH (pthread_equal (pthread_t __thread1, pthread_t __thread2))$/;"	f	typeref:typename:__extern_inline int
__NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^__NTH (atoi (const char *__nptr))$/;"	f	typeref:typename:__extern_inline int
__NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^__NTH (atol (const char *__nptr))$/;"	f	typeref:typename:__extern_inline long int
__NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^__NTH (atoll (const char *__nptr))$/;"	f	typeref:typename:__extension__ __extern_inline long long int
__NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#   define __NTH(/;"	d
__NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __NTH(/;"	d
__NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __NTH(/;"	d
__NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^__NTH (btowc (int __c))$/;"	f	typeref:typename:__extern_inline wint_t
__NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^__NTH (mbrlen (const char *__restrict __s, size_t __n,$/;"	f	typeref:typename:__extern_inline size_t
__NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^__NTH (wctob (wint_t __wc))$/;"	f	typeref:typename:__extern_inline int
__NTHNL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#   define __NTHNL(/;"	d
__NTHNL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __NTHNL(/;"	d
__OFF64_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __OFF64_T_TYPE	/;"	d
__OFF_T_MATCHES_OFF64_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^# define __OFF_T_MATCHES_OFF64_T	/;"	d
__OFF_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __OFF_T_TYPE	/;"	d
__ONCE_ALIGNMENT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^#define __ONCE_ALIGNMENT$/;"	d
__ONCE_ALIGNMENT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^  int __data __ONCE_ALIGNMENT;$/;"	m	struct:__anon5a8cba0b0108	typeref:typename:int __data
__ONCE_FLAG_INIT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^#define __ONCE_FLAG_INIT /;"	d
__P	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#define __P(/;"	d
__PDP_ENDIAN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@endian.h	/^#define	__PDP_ENDIAN	/;"	d
__PID_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __PID_T_TYPE	/;"	d
__PMT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#define __PMT(/;"	d
__PTHREAD_MUTEX_HAVE_PREV	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^# define __PTHREAD_MUTEX_HAVE_PREV /;"	d
__PTHREAD_MUTEX_INITIALIZER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^# define __PTHREAD_MUTEX_INITIALIZER(/;"	d
__PTHREAD_RWLOCK_ELISION_EXTRA	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^#  define __PTHREAD_RWLOCK_ELISION_EXTRA /;"	d
__PTHREAD_RWLOCK_INITIALIZER	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^# define __PTHREAD_RWLOCK_INITIALIZER(/;"	d
__REDIRECT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __REDIRECT(/;"	d
__REDIRECT_FORTIFY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#define __REDIRECT_FORTIFY /;"	d
__REDIRECT_FORTIFY_NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#define __REDIRECT_FORTIFY_NTH /;"	d
__REDIRECT_LDBL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __REDIRECT_LDBL(/;"	d
__REDIRECT_NTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __REDIRECT_NTH(/;"	d
__REDIRECT_NTHNL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __REDIRECT_NTHNL(/;"	d
__REDIRECT_NTH_LDBL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __REDIRECT_NTH_LDBL(/;"	d
__RLIM64_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __RLIM64_T_TYPE	/;"	d
__RLIM_T_MATCHES_RLIM64_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^# define __RLIM_T_MATCHES_RLIM64_T	/;"	d
__RLIM_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __RLIM_T_TYPE	/;"	d
__S16_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^#define	__S16_TYPE	/;"	d
__S32_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^#define	__S32_TYPE	/;"	d
__S64_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^# define __S64_TYPE	/;"	d
__SC_THREAD_STACK_MIN_VALUE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthread_stack_min-dynamic.h	/^#   define __SC_THREAD_STACK_MIN_VALUE /;"	d
__SIZEOF_PTHREAD_ATTR_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^#  define __SIZEOF_PTHREAD_ATTR_T /;"	d
__SIZEOF_PTHREAD_ATTR_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^# define __SIZEOF_PTHREAD_ATTR_T /;"	d
__SIZEOF_PTHREAD_BARRIERATTR_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^#define __SIZEOF_PTHREAD_BARRIERATTR_T /;"	d
__SIZEOF_PTHREAD_BARRIER_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^#  define __SIZEOF_PTHREAD_BARRIER_T /;"	d
__SIZEOF_PTHREAD_BARRIER_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^# define __SIZEOF_PTHREAD_BARRIER_T /;"	d
__SIZEOF_PTHREAD_CONDATTR_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^#define __SIZEOF_PTHREAD_CONDATTR_T /;"	d
__SIZEOF_PTHREAD_COND_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^#define __SIZEOF_PTHREAD_COND_T /;"	d
__SIZEOF_PTHREAD_MUTEXATTR_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^#define __SIZEOF_PTHREAD_MUTEXATTR_T /;"	d
__SIZEOF_PTHREAD_MUTEX_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^#  define __SIZEOF_PTHREAD_MUTEX_T /;"	d
__SIZEOF_PTHREAD_MUTEX_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^# define __SIZEOF_PTHREAD_MUTEX_T /;"	d
__SIZEOF_PTHREAD_RWLOCKATTR_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^#define __SIZEOF_PTHREAD_RWLOCKATTR_T /;"	d
__SIZEOF_PTHREAD_RWLOCK_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^#  define __SIZEOF_PTHREAD_RWLOCK_T /;"	d
__SIZEOF_PTHREAD_RWLOCK_T	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^# define __SIZEOF_PTHREAD_RWLOCK_T /;"	d
__SLONG32_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^# define __SLONG32_TYPE	/;"	d
__SLONGWORD_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^#define __SLONGWORD_TYPE	/;"	d
__SQUAD_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^# define __SQUAD_TYPE	/;"	d
__SSIZE_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __SSIZE_T_TYPE	/;"	d
__STATFS_MATCHES_STATFS64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^# define __STATFS_MATCHES_STATFS64 /;"	d
__STDARG_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdarg.h	/^#define __STDARG_H$/;"	d
__STDC_CONSTANT_MACROS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#   define __STDC_CONSTANT_MACROS$/;"	d
__STDC_CONSTANT_MACROS_DEFINED_BY_CLANG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#   define __STDC_CONSTANT_MACROS_DEFINED_BY_CLANG$/;"	d
__STDC_IEC_559_COMPLEX__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdc-predef.h	/^#  define __STDC_IEC_559_COMPLEX__	/;"	d
__STDC_IEC_559_COMPLEX__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdc-predef.h	/^# define __STDC_IEC_559_COMPLEX__	/;"	d
__STDC_IEC_559__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdc-predef.h	/^#  define __STDC_IEC_559__	/;"	d
__STDC_IEC_559__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdc-predef.h	/^# define __STDC_IEC_559__	/;"	d
__STDC_IEC_60559_BFP__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdc-predef.h	/^#  define __STDC_IEC_60559_BFP__ /;"	d
__STDC_IEC_60559_BFP__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdc-predef.h	/^# define __STDC_IEC_60559_BFP__ /;"	d
__STDC_IEC_60559_COMPLEX__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdc-predef.h	/^#  define __STDC_IEC_60559_COMPLEX__	/;"	d
__STDC_IEC_60559_COMPLEX__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdc-predef.h	/^# define __STDC_IEC_60559_COMPLEX__	/;"	d
__STDC_ISO_10646__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdc-predef.h	/^#define __STDC_ISO_10646__	/;"	d
__STDC_LIMIT_MACROS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#   define __STDC_LIMIT_MACROS$/;"	d
__STDC_LIMIT_MACROS_DEFINED_BY_CLANG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#   define __STDC_LIMIT_MACROS_DEFINED_BY_CLANG$/;"	d
__STDDEF_H	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^#define __STDDEF_H$/;"	d
__STD_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^# define __STD_TYPE	/;"	d
__STRING	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#define __STRING(/;"	d
__SUSECONDS64_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __SUSECONDS64_T_TYPE	/;"	d
__SUSECONDS_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __SUSECONDS_T_TYPE	/;"	d
__SWORD_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^# define __SWORD_TYPE	/;"	d
__SYSCALL_SLONG_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^# define __SYSCALL_SLONG_TYPE	/;"	d
__SYSCALL_ULONG_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^# define __SYSCALL_ULONG_TYPE	/;"	d
__SYSCALL_WORDSIZE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wordsize.h	/^# define __SYSCALL_WORDSIZE	/;"	d
__THROW	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#    define __THROW	/;"	d
__THROW	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#   define __THROW$/;"	d
__THROW	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __THROW	/;"	d
__THROW	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __THROW$/;"	d
__THROWNL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#   define __THROWNL	/;"	d
__THROWNL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#   define __THROWNL$/;"	d
__THROWNL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __THROWNL	/;"	d
__THROWNL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __THROWNL$/;"	d
__TIME64_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time64.h	/^# define __TIME64_T_TYPE	/;"	d
__TIMER_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __TIMER_T_TYPE	/;"	d
__TIMESIZE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timesize.h	/^# define __TIMESIZE	/;"	d
__TIME_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __TIME_T_TYPE	/;"	d
__U16_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^#define __U16_TYPE	/;"	d
__U32_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^#define __U32_TYPE	/;"	d
__U64_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^# define __U64_TYPE	/;"	d
__UID_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __UID_T_TYPE	/;"	d
__UINT64_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define __UINT64_C(/;"	d
__UINTN_C	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define __UINTN_C(/;"	d
__UINTN_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define __UINTN_MAX(/;"	d
__UINT_LEAST16_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __UINT_LEAST16_MAX /;"	d
__UINT_LEAST16_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __UINT_LEAST16_WIDTH /;"	d
__UINT_LEAST16_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define __UINT_LEAST16_WIDTH /;"	d
__UINT_LEAST32_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __UINT_LEAST32_MAX /;"	d
__UINT_LEAST32_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __UINT_LEAST32_WIDTH /;"	d
__UINT_LEAST32_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define __UINT_LEAST32_WIDTH /;"	d
__UINT_LEAST64_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __UINT_LEAST64_MAX /;"	d
__UINT_LEAST64_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __UINT_LEAST64_WIDTH /;"	d
__UINT_LEAST8_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __UINT_LEAST8_MAX /;"	d
__UINT_LEAST8_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __UINT_LEAST8_WIDTH /;"	d
__UINT_LEAST8_WIDTH	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define __UINT_LEAST8_WIDTH /;"	d
__ULONG32_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^# define __ULONG32_TYPE	/;"	d
__ULONGWORD_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^#define __ULONGWORD_TYPE	/;"	d
__UQUAD_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^# define __UQUAD_TYPE	/;"	d
__USECONDS_T_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@typesizes.h	/^#define __USECONDS_T_TYPE	/;"	d
__USE_ATFILE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_ATFILE	/;"	d
__USE_DYNAMIC_STACK_SIZE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_DYNAMIC_STACK_SIZE	/;"	d
__USE_EXTERN_INLINES	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_EXTERN_INLINES	/;"	d
__USE_FILE_OFFSET64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_FILE_OFFSET64	/;"	d
__USE_FORTIFY_LEVEL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#  define __USE_FORTIFY_LEVEL /;"	d
__USE_FORTIFY_LEVEL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_FORTIFY_LEVEL /;"	d
__USE_GNU	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_GNU	/;"	d
__USE_GNU_GETTEXT	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@libintl.h	/^#define __USE_GNU_GETTEXT /;"	d
__USE_ISOC11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#  define __USE_ISOC11	/;"	d
__USE_ISOC11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_ISOC11	/;"	d
__USE_ISOC95	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#   define __USE_ISOC95	/;"	d
__USE_ISOC95	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_ISOC95	/;"	d
__USE_ISOC99	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#   define __USE_ISOC99	/;"	d
__USE_ISOC99	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#  define __USE_ISOC99	/;"	d
__USE_ISOC99	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_ISOC99	/;"	d
__USE_ISOCXX11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#  define __USE_ISOCXX11	/;"	d
__USE_LARGEFILE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#  define __USE_LARGEFILE	/;"	d
__USE_LARGEFILE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_LARGEFILE	/;"	d
__USE_LARGEFILE64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#  define __USE_LARGEFILE64	/;"	d
__USE_LARGEFILE64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_LARGEFILE64	/;"	d
__USE_MISC	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_MISC	/;"	d
__USE_POSIX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_POSIX	/;"	d
__USE_POSIX199309	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_POSIX199309	/;"	d
__USE_POSIX199506	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_POSIX199506	/;"	d
__USE_POSIX2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_POSIX2	/;"	d
__USE_POSIX_IMPLICITLY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#  define __USE_POSIX_IMPLICITLY	/;"	d
__USE_POSIX_IMPLICITLY	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_POSIX_IMPLICITLY	/;"	d
__USE_TIME_BITS64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features-time64.h	/^#   define __USE_TIME_BITS64	/;"	d
__USE_UNIX98	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#  define __USE_UNIX98	/;"	d
__USE_XOPEN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_XOPEN	/;"	d
__USE_XOPEN2K	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#   define __USE_XOPEN2K	/;"	d
__USE_XOPEN2K	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_XOPEN2K	/;"	d
__USE_XOPEN2K8	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#    define __USE_XOPEN2K8	/;"	d
__USE_XOPEN2K8	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __USE_XOPEN2K8	/;"	d
__USE_XOPEN2K8XSI	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#    define __USE_XOPEN2K8XSI	/;"	d
__USE_XOPEN2KXSI	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#   define __USE_XOPEN2KXSI	/;"	d
__USE_XOPEN_EXTENDED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#   define __USE_XOPEN_EXTENDED	/;"	d
__USE_XOPEN_EXTENDED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^#  define __USE_XOPEN_EXTENDED	/;"	d
__UWORD_TYPE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^# define __UWORD_TYPE	/;"	d
__WALL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitflags.h	/^#define __WALL	/;"	d
__WCHAR_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wchar.h	/^# define __WCHAR_MAX	/;"	d
__WCHAR_MAX	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wchar.h	/^# define __WCHAR_MAX	__WCHAR_MAX_/;"	d
__WCHAR_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wchar.h	/^# define __WCHAR_MIN	/;"	d
__WCHAR_MIN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wchar.h	/^# define __WCHAR_MIN	__WCHAR_MIN_/;"	d
__WCHAR_TYPE__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^typedef __WCHAR_TYPE__ wchar_t;$/;"	t	typeref:typename:wchar_t
__WCLONE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitflags.h	/^#define __WCLONE	/;"	d
__WCOREDUMP	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitstatus.h	/^#define	__WCOREDUMP(/;"	d
__WCOREFLAG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitstatus.h	/^#define	__WCOREFLAG	/;"	d
__WEXITSTATUS	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitstatus.h	/^#define	__WEXITSTATUS(/;"	d
__WIFCONTINUED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitstatus.h	/^# define __WIFCONTINUED(/;"	d
__WIFEXITED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitstatus.h	/^#define	__WIFEXITED(/;"	d
__WIFSIGNALED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitstatus.h	/^#define __WIFSIGNALED(/;"	d
__WIFSTOPPED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitstatus.h	/^#define	__WIFSTOPPED(/;"	d
__WINT_TYPE__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__mbstate_t.h	/^# define __WINT_TYPE__ /;"	d
__WINT_TYPE__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@wint_t.h	/^# define __WINT_TYPE__ /;"	d
__WNOTHREAD	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitflags.h	/^#define __WNOTHREAD /;"	d
__WORDSIZE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wordsize.h	/^# define __WORDSIZE	/;"	d
__WORDSIZE32_PTRDIFF_LONG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wordsize.h	/^#define __WORDSIZE32_PTRDIFF_LONG	/;"	d
__WORDSIZE32_SIZE_ULONG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wordsize.h	/^#define __WORDSIZE32_SIZE_ULONG	/;"	d
__WORDSIZE_TIME64_COMPAT32	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wordsize.h	/^# define __WORDSIZE_TIME64_COMPAT32	/;"	d
__WSTOPSIG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitstatus.h	/^#define	__WSTOPSIG(/;"	d
__WTERMSIG	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitstatus.h	/^#define	__WTERMSIG(/;"	d
__W_CONTINUED	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitstatus.h	/^#define __W_CONTINUED	/;"	d
__W_EXITCODE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitstatus.h	/^#define	__W_EXITCODE(/;"	d
__W_STOPCODE	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@waitstatus.h	/^#define	__W_STOPCODE(/;"	d
____FILE_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__FILE.h	/^#define ____FILE_defined /;"	d
_____fpos64_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__fpos64_t.h	/^#define _____fpos64_t_defined /;"	d
_____fpos_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__fpos_t.h	/^#define _____fpos_t_defined /;"	d
____mbstate_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__mbstate_t.h	/^#define ____mbstate_t_defined /;"	d
____sigset_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__sigset_t.h	/^#define ____sigset_t_defined$/;"	d
__a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    __extension__ unsigned long long int __a;	\/* Factor in congruential$/;"	m	struct:drand48_data	typeref:typename:__extension__ unsigned long long int
__add_fetch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __add_fetch(_Tp* __ptr, _Diff<_Tp> __i) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE _Tp
__add_fetch_flt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __add_fetch_flt(_Tp* __ptr, _Val<_Tp> __i) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_Tp
__add_unsigned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __add_unsigned$/;"	s	namespace:__gnu_cxx
__add_unsigned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __add_unsigned<char>$/;"	s	namespace:__gnu_cxx
__add_unsigned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __add_unsigned<int>$/;"	s	namespace:__gnu_cxx
__add_unsigned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __add_unsigned<long long>$/;"	s	namespace:__gnu_cxx
__add_unsigned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __add_unsigned<long>$/;"	s	namespace:__gnu_cxx
__add_unsigned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __add_unsigned<short>$/;"	s	namespace:__gnu_cxx
__add_unsigned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __add_unsigned<signed char>$/;"	s	namespace:__gnu_cxx
__addressof	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@move.h	/^    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION _GLIBCXX_CONSTEXPR _Tp *
__adjacent_find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __adjacent_find(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__adjust_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    __adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__advance	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_funcs.h	/^    __advance(_BidirectionalIterator& __i, _Distance __n,$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR void
__advance	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_funcs.h	/^    __advance(_InputIterator& __i, _Distance __n, input_iterator_tag)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR void
__advance	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_funcs.h	/^    __advance(_RandomAccessIterator& __i, _Distance __n,$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR void
__align	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  __extension__ long long int __align;$/;"	m	union:__anondcf6770a040a	typeref:typename:__extension__ long long int
__align	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  int __align;$/;"	m	union:__anondcf6770a010a	typeref:typename:int
__align	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  int __align;$/;"	m	union:__anondcf6770a020a	typeref:typename:int
__align	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  int __align;$/;"	m	union:__anondcf6770a080a	typeref:typename:int
__align	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  long int __align;$/;"	m	union:__anondcf6770a030a	typeref:typename:long int
__align	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  long int __align;$/;"	m	union:__anondcf6770a050a	typeref:typename:long int
__align	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  long int __align;$/;"	m	union:__anondcf6770a060a	typeref:typename:long int
__align	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  long int __align;$/;"	m	union:__anondcf6770a070a	typeref:typename:long int
__align	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  long int __align;$/;"	m	union:pthread_attr_t	typeref:typename:long int
__aligned_buffer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^      __aligned_buffer(std::nullptr_t) { }$/;"	f	struct:__gnu_cxx::__aligned_buffer
__aligned_buffer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^    struct __aligned_buffer$/;"	s	namespace:__gnu_cxx
__aligned_buffer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^    using __aligned_buffer = __aligned_membuf<_Tp>;$/;"	t	namespace:__gnu_cxx	typeref:typename:__aligned_membuf<_Tp>
__aligned_membuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^      __aligned_membuf(std::nullptr_t) { }$/;"	f	struct:__gnu_cxx::__aligned_membuf
__aligned_membuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^    struct __aligned_membuf$/;"	s	namespace:__gnu_cxx
__alloc_on_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    __alloc_on_copy(_Alloc& __one, const _Alloc& __two)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR void
__alloc_on_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    __alloc_on_copy(const _Alloc& __a)$/;"	f	namespace:std	typeref:typename:_Alloc
__alloc_on_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    __alloc_on_move(_Alloc& __one, _Alloc& __two)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR void
__alloc_on_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    __alloc_on_swap(_Alloc& __one, _Alloc& __two)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR void
__alloc_rebind	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    using __alloc_rebind$/;"	t	namespace:std	typeref:typename:__allocator_traits_base::template __rebind<_Alloc,_Up>::type
__alloc_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    struct __alloc_swap$/;"	s	namespace:std
__alloc_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    struct __alloc_swap<_Alloc, false>$/;"	s	namespace:std
__alloc_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^  struct __alloc_traits$/;"	s	namespace:__gnu_cxx
__allocate_guarded	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocated_ptr.h	/^    __allocate_guarded(_Alloc& __a)$/;"	f	namespace:std	typeref:typename:__allocated_ptr<_Alloc>
__allocate_shared	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    __allocate_shared(const _Alloc& __a, _Args&&... __args)$/;"	f	namespace:std	typeref:typename:__shared_ptr<_Tp,_Lp>
__allocated_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocated_ptr.h	/^      __allocated_ptr(_Alloc& __a, _Ptr __ptr)$/;"	f	struct:std::__allocated_ptr
__allocated_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocated_ptr.h	/^      __allocated_ptr(_Alloc& __a, pointer __ptr) noexcept$/;"	f	struct:std::__allocated_ptr
__allocated_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocated_ptr.h	/^      __allocated_ptr(__allocated_ptr&& __gd) noexcept$/;"	f	struct:std::__allocated_ptr
__allocated_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocated_ptr.h	/^    struct __allocated_ptr$/;"	s	namespace:std
__allocator_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++allocator.h	/^    using __allocator_base = __new_allocator<_Tp>;$/;"	t	namespace:std	typeref:typename:__new_allocator<_Tp>
__allocator_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++allocator.h	/^# define __allocator_base /;"	d
__allocator_traits_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^  struct __allocator_traits_base$/;"	s	namespace:std
__allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using __allocator_type = __alloc_rebind<_Alloc, _Sp_counted_deleter>;$/;"	t	class:std::_Sp_counted_deleter	typeref:typename:__alloc_rebind<_Alloc,_Sp_counted_deleter>
__allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using __allocator_type = __alloc_rebind<_Alloc, _Sp_counted_ptr_inplace>;$/;"	t	class:std::_Sp_counted_ptr_inplace	typeref:typename:__alloc_rebind<_Alloc,_Sp_counted_ptr_inplace>
__allow_parallel	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^    __allow_parallel()$/;"	f	class:__pstl::execution::v1::parallel_policy	typeref:typename:std::true_type
__allow_parallel	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^    __allow_parallel()$/;"	f	class:__pstl::execution::v1::parallel_unsequenced_policy	typeref:typename:std::true_type
__allow_parallel	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^    __allow_parallel()$/;"	f	class:__pstl::execution::v1::sequenced_policy	typeref:typename:std::false_type
__allow_parallel	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^    __allow_parallel()$/;"	f	class:__pstl::execution::v1::unsequenced_policy	typeref:typename:std::false_type
__allow_unsequenced	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^    __allow_unsequenced()$/;"	f	class:__pstl::execution::v1::parallel_policy	typeref:typename:std::false_type
__allow_unsequenced	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^    __allow_unsequenced()$/;"	f	class:__pstl::execution::v1::parallel_unsequenced_policy	typeref:typename:std::true_type
__allow_unsequenced	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^    __allow_unsequenced()$/;"	f	class:__pstl::execution::v1::sequenced_policy	typeref:typename:std::false_type
__allow_unsequenced	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^    __allow_unsequenced()$/;"	f	class:__pstl::execution::v1::unsequenced_policy	typeref:typename:std::true_type
__allow_vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^    __allow_vector()$/;"	f	class:__pstl::execution::v1::parallel_policy	typeref:typename:std::false_type
__allow_vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^    __allow_vector()$/;"	f	class:__pstl::execution::v1::parallel_unsequenced_policy	typeref:typename:std::true_type
__allow_vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^    __allow_vector()$/;"	f	class:__pstl::execution::v1::sequenced_policy	typeref:typename:std::false_type
__allow_vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^    __allow_vector()$/;"	f	class:__pstl::execution::v1::unsequenced_policy	typeref:typename:std::true_type
__always_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	using __always_equal = typename _Alloc_traits::is_always_equal;$/;"	t	function:std::deque::operator =	typeref:typename:_Alloc_traits::is_always_equal
__always_inline	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __always_inline /;"	d
__always_inline	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __always_inline __inline __attribute__ ((__always_inline_/;"	d
__and_fetch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __and_fetch(_Tp* __ptr, _Val<_Tp> __i) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE _Tp
__anon10c6f9110103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^      enum { __width = __value ? sizeof(_Tp) * __CHAR_BIT__ : 0 };$/;"	g	struct:__gnu_cxx::__is_integer_nonstrict
__anon16a540eb0103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^{$/;"	g
__anon1a10cc0f0103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      enum { _S_need_barriers = 0 };$/;"	g	class:std::_Mutex_base
__anon1a10cc0f0203	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      enum { _S_need_barriers = 1 };$/;"	g	class:std::_Mutex_base
__anon1a10cc0f030a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      union {$/;"	u	class:std::_Sp_counted_ptr_inplace
__anon203e79380108	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@__stddef_max_align_t.h	/^typedef struct {$/;"	s
__anon2cfddada0108	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^  {$/;"	s
__anon3095fb100103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^  enum { _S_word_bit = int(__CHAR_BIT__ * sizeof(_Bit_type)) };$/;"	g	namespace:std
__anon398d3d600102	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^	  [__m, this] { return __atomic_load_n(&_M_i, int(__m)); });$/;"	f	function:std::atomic_flag::wait	file:
__anon398d3d600202	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^			   [__m, this] { return this->load(__m); });$/;"	f	function:std::__atomic_base::wait	file:
__anon398d3d600302	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^				     { return this->load(__m); });$/;"	f	function:std::__atomic_base::wait	file:
__anon398d3d600402	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^	    [__ptr, __m]() { return __atomic_impl::load(__ptr, __m); });$/;"	f	function:std::__atomic_impl::wait	file:
__anon4e7740d1010a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@atomic_wide_counter.h	/^{$/;"	u
__anon4e7740d10208	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@atomic_wide_counter.h	/^  {$/;"	s	union:__anon4e7740d1010a
__anon4fbc4f980108	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^		{$/;"	s	class:sak::debug::test_handler::netbeans_cpp_simple_test::output_texts
__anon5a8cba0b0108	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^{$/;"	s
__anon6d8b52b00103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    {$/;"	g	class:std::money_base
__anon7b04dba30108	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__mbstate_t.h	/^{$/;"	s
__anon7b04dba3020a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__mbstate_t.h	/^  {$/;"	u	struct:__anon7b04dba30108
__anon841809de0103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^  enum { _S_threshold = 16 };$/;"	g	namespace:std
__anon841809de0203	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^  enum { _S_chunk_size = 7 };$/;"	g	namespace:std
__anon89c730530103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      enum { __value = _Base::value };$/;"	g	struct:std::__is_random_access_iter
__anon89c730530203	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^    { enum { __value = __is_base_of(random_access_iterator_tag, _Cat) }; };$/;"	g	struct:std::__is_random_access_iter
__anon8c4663c10103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      enum { _S_local_capacity = 15 \/ sizeof(_CharT) };$/;"	g	class:std::basic_string
__anon8c4663c1020a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      {$/;"	u	class:std::basic_string
__anon8ca180ce0103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    enum { _S_local_word_size = 8 };$/;"	g	class:std::ios_base
__anon8cc412ae0108	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^{$/;"	s
__anon9201e7230103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^{$/;"	g
__anon9201e7230203	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^{$/;"	g
__anon9201e7230303	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^{$/;"	g
__anon9201e7230403	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^{$/;"	g
__anon9201e7230503	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^{$/;"	g
__anon9201e7230603	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^{$/;"	g
__anon9201e7230703	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^{$/;"	g
__anon9201e7230803	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^{$/;"	g
__anon9201e7230903	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^{$/;"	g
__anon9201e7230a03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^{$/;"	g
__anon9201e7230b08	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^{$/;"	s
__anonaed0cf220108	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__sigset_t.h	/^{$/;"	s
__anonb0d55d8b0103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      enum { __as_lvalue, __as_rvalue };$/;"	g	class:std::_Rb_tree
__anonb226b13b010a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^    {$/;"	u	struct:std::__detail::_State_base
__anonb226b13b0208	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      {$/;"	s	union:std::__detail::_State_base::__anonb226b13b010a
__anoncd57ede5010a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    {$/;"	u	class:std::common_iterator
__anoncd57ede50203	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_move_iterator
__anoncdcc7d0e0103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      {$/;"	g	class:std::__num_base
__anoncdcc7d0e0203	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    {$/;"	g	class:std::__num_base
__anond1e051230103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = bool(_Sp::__value) || bool(_Tp::__value) };$/;"	g	struct:std::__traitor
__anond1e051230203	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	g	struct:std::__are_same
__anond1e051230303	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__are_same
__anond1e051230403	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	g	struct:std::__is_void
__anond1e051230503	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_void
__anond1e051230603	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	g	struct:std::__is_integer
__anond1e051230703	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_integer
__anond1e051230803	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_integer
__anond1e051230903	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_integer
__anond1e051230a03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_integer
__anond1e051230b03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_integer
__anond1e051230c03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_integer
__anond1e051230d03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_integer
__anond1e051230e03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_integer
__anond1e051230f03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_integer
__anond1e051231003	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_integer
__anond1e051231103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_integer
__anond1e051231203	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_integer
__anond1e051231303	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_integer
__anond1e051231403	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_integer
__anond1e051231503	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_integer
__anond1e051231603	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_integer
__anond1e051231703	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	g	struct:std::__is_floating
__anond1e051231803	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_floating
__anond1e051231903	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_floating
__anond1e051231a03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_floating
__anond1e051231b03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_floating
__anond1e051231c03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_floating
__anond1e051231d03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_floating
__anond1e051231e03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_floating
__anond1e051231f03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_floating
__anond1e051232003	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	g	struct:std::__is_pointer
__anond1e051232103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_pointer
__anond1e051232203	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	g	struct:std::__is_char
__anond1e051232303	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_char
__anond1e051232403	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_char
__anond1e051232503	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	g	struct:std::__is_byte
__anond1e051232603	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_byte
__anond1e051232703	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_byte
__anond1e051232803	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_byte
__anond1e051232903	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_byte
__anond1e051232a03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	g	struct:std::__is_byte
__anond1e051232b03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = __is_trivially_copyable(_Tp) };$/;"	g	struct:std::__is_nonvolatile_trivially_copyable
__anond1e051232c03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	g	struct:std::__is_nonvolatile_trivially_copyable
__anond1e051232d03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	g	struct:std::__memcpyable
__anond1e051232e03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	g	struct:std::__memcmpable
__anond1e051232f03	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	g	struct:std::__is_move_iterator
__anond6b8f37d0108	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^  {$/;"	s
__anond6b8f37d0208	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^  {$/;"	s
__anond6b8f37d0308	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^  {$/;"	s
__anond75609660103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    enum { _S_categories_size = 6 + _GLIBCXX_NUM_CATEGORIES };$/;"	g	class:std::locale
__anondcf6770a010a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^{$/;"	u
__anondcf6770a020a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^{$/;"	u
__anondcf6770a030a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^{$/;"	u
__anondcf6770a040a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^{$/;"	u
__anondcf6770a050a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^{$/;"	u
__anondcf6770a060a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^{$/;"	u
__anondcf6770a070a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^{$/;"	u
__anondcf6770a080a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^{$/;"	u
__anonde6d01af0103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      enum { _S_initial_map_size = 8 };$/;"	g	class:std::_Deque_base
__anone306b5000103	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^{$/;"	g
__anone4492d64010a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^  {$/;"	u	struct:__pthread_mutex_s
__anone4492d640208	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^    {$/;"	s	union:__pthread_mutex_s::__anone4492d64010a
__anonf4c333750102	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator_args.h	/^	  std::apply([&__a](auto&&... __args1) {$/;"	f	function:std::uses_allocator_construction_args	file:
__anonf4c333750202	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator_args.h	/^	  std::apply([&__a](auto&&... __args2) {$/;"	f	function:std::uses_allocator_construction_args	file:
__anonf4c333750302	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator_args.h	/^      return std::apply([&](auto&&... __xs) {$/;"	f	function:std::uninitialized_construct_using_allocator	file:
__are_same	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __are_same$/;"	s	namespace:std
__are_same	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __are_same<_Tp, _Tp>$/;"	s	namespace:std
__arg	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  void *__arg;                            \/* Its argument.  *\/$/;"	m	struct:_pthread_cleanup_buffer	typeref:typename:void *
__arity	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^      using __arity = integral_constant<size_t, sizeof...(_ArgTypes)>;$/;"	t	struct:std::_Mem_fn_traits_base
__array	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    { typedef unique_ptr<_Tp[]> __array; };$/;"	t	struct:std::__detail::_MakeUniq	typeref:typename:unique_ptr<_Tp[]>
__array_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    __array_type_info(const char* __n) : std::type_info(__n) { }$/;"	f	class:__cxxabiv1::__array_type_info
__array_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^  class __array_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1
__arrow_proxy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      __arrow_proxy(iter_reference_t<_It>&& __x)$/;"	f	class:std::common_iterator::__arrow_proxy
__arrow_proxy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    class __arrow_proxy$/;"	c	class:std::common_iterator
__as_lvalue	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      enum { __as_lvalue, __as_rvalue };$/;"	e	enum:std::_Rb_tree::__anonb0d55d8b0103
__as_rvalue	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      enum { __as_lvalue, __as_rvalue };$/;"	e	enum:std::_Rb_tree::__anonb0d55d8b0103
__assign_one	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	__assign_one(_Tp* __to, _Up* __from)$/;"	f	struct:std::__copy_move	typeref:typename:void
__atomic_add	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@atomicity.h	/^  __atomic_add(volatile _Atomic_word* __mem, int __val)$/;"	f	namespace:__gnu_cxx	typeref:typename:void
__atomic_add_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@atomicity.h	/^  __atomic_add_dispatch(_Atomic_word* __mem, int __val)$/;"	f	namespace:__gnu_cxx	typeref:typename:void
__atomic_add_single	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@atomicity.h	/^  __atomic_add_single(_Atomic_word* __mem, int __val)$/;"	f	namespace:__gnu_cxx	typeref:typename:void
__atomic_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }$/;"	f	struct:std::__atomic_base
__atomic_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      constexpr __atomic_base(__pointer_type __p) noexcept : _M_p (__p) { }$/;"	f	struct:std::__atomic_base
__atomic_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    struct __atomic_base$/;"	s	namespace:std
__atomic_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    struct __atomic_base<_PTp*>$/;"	s	namespace:std
__atomic_flag_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  struct __atomic_flag_base$/;"	s	namespace:std
__atomic_flag_data_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    typedef bool __atomic_flag_data_type;$/;"	t	namespace:std	typeref:typename:bool
__atomic_flag_data_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    typedef unsigned char __atomic_flag_data_type;$/;"	t	namespace:std	typeref:typename:unsigned char
__atomic_float	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __atomic_float(_Fp __t) : _M_fp(__t)$/;"	f	struct:std::__atomic_float
__atomic_float	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    struct __atomic_float$/;"	s	namespace:std
__atomic_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  namespace __atomic_impl$/;"	n	namespace:std
__atomic_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __atomic_ref(_Fp& __t) : _M_ptr(&__t)$/;"	f	struct:std::__atomic_ref
__atomic_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __atomic_ref(_Tp& __t) : _M_ptr(&__t)$/;"	f	struct:std::__atomic_ref
__atomic_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __atomic_ref(_Tp& __t) : _M_ptr(std::__addressof(__t))$/;"	f	struct:std::__atomic_ref
__atomic_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __atomic_ref(_Tp*& __t) : _M_ptr(std::__addressof(__t))$/;"	f	struct:std::__atomic_ref
__atomic_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    struct __atomic_ref<_Fp, false, true>$/;"	s	namespace:std
__atomic_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    struct __atomic_ref<_Tp*, false, false>$/;"	s	namespace:std
__atomic_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    struct __atomic_ref<_Tp, false, false>$/;"	s	namespace:std
__atomic_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    struct __atomic_ref<_Tp, true, false>$/;"	s	namespace:std
__atomic_wide_counter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@atomic_wide_counter.h	/^} __atomic_wide_counter;$/;"	t	typeref:union:__anon4e7740d1010a
__attr_access	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __attr_access(/;"	d
__attr_access_none	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#    define __attr_access_none(/;"	d
__attr_access_none	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __attr_access_none(/;"	d
__attr_dealloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attr_dealloc(/;"	d
__attr_dealloc_fclose	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define __attr_dealloc_fclose /;"	d
__attr_dealloc_fclose	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#      define __attr_dealloc_fclose /;"	d
__attr_dealloc_fclose	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#  define __attr_dealloc_fclose /;"	d
__attr_dealloc_free	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attr_dealloc_free /;"	d
__attr_dealloc_free	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attr_dealloc_free$/;"	d
__attribute__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute__(/;"	d
__attribute_alloc_align__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_alloc_align__(/;"	d
__attribute_alloc_size__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_alloc_size__(/;"	d
__attribute_artificial__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_artificial__ /;"	d
__attribute_const__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_const__ /;"	d
__attribute_copy__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_copy__(/;"	d
__attribute_deprecated__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_deprecated__ /;"	d
__attribute_deprecated_msg__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_deprecated_msg__(/;"	d
__attribute_format_arg__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_format_arg__(/;"	d
__attribute_format_strfmon__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_format_strfmon__(/;"	d
__attribute_malloc__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_malloc__ /;"	d
__attribute_maybe_unused__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_maybe_unused__ /;"	d
__attribute_noinline__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_noinline__ /;"	d
__attribute_nonnull__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __attribute_nonnull__(/;"	d
__attribute_nonstring__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_nonstring__ /;"	d
__attribute_nonstring__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_nonstring__$/;"	d
__attribute_pure__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_pure__ /;"	d
__attribute_returns_twice__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_returns_twice__ /;"	d
__attribute_used__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_used__ /;"	d
__attribute_warn_unused_result__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __attribute_warn_unused_result__ /;"	d
__base_class_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^  class __base_class_type_info$/;"	c	namespace:__cxxabiv1
__base_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    unsigned int 		__base_count;  \/\/ Number of direct bases.$/;"	m	class:__cxxabiv1::__vmi_class_type_info	typeref:typename:unsigned int
__base_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    __base_class_type_info 	__base_info[1];  \/\/ Array of bases.$/;"	m	class:__cxxabiv1::__vmi_class_type_info	typeref:typename:__base_class_type_info[1]
__base_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using __base_ref = typename __traits_type::reference;$/;"	t	class:std::move_iterator	typeref:typename:__traits_type::reference
__base_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    const __class_type_info* 	__base_type;  \/\/ Base class type.$/;"	m	class:__cxxabiv1::__base_class_type_info	typeref:typename:const __class_type_info *
__base_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    const __class_type_info* __base_type;$/;"	m	class:__cxxabiv1::__si_class_type_info	typeref:typename:const __class_type_info *
__basic_const_iterator_iter_cat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      struct __basic_const_iterator_iter_cat$/;"	s	namespace:std::__detail
__basic_const_iterator_iter_cat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      struct __basic_const_iterator_iter_cat<_It>$/;"	s	namespace:std::__detail
__bfs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      using __bfs = false_type;$/;"	t	class:std::__detail::_Executor	typeref:typename:false_type
__bits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^  __cpu_mask __bits[__CPU_SETSIZE \/ __NCPUBITS];$/;"	m	struct:__anon8cc412ae0108	typeref:typename:__cpu_mask[]
__blkcnt64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __BLKCNT64_T_TYPE __blkcnt64_t;$/;"	v	typeref:typename:__STD_TYPE __BLKCNT64_T_TYPE
__blkcnt_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __BLKCNT_T_TYPE __blkcnt_t;$/;"	v	typeref:typename:__STD_TYPE __BLKCNT_T_TYPE
__blkcnt_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^#  define __blkcnt_t_defined$/;"	d
__blksize_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __BLKSIZE_T_TYPE __blksize_t;$/;"	v	typeref:typename:__STD_TYPE __BLKSIZE_T_TYPE
__blksize_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^# define __blksize_t_defined$/;"	d
__bos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#define __bos(/;"	d
__bos0	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#define __bos0(/;"	d
__bswap_16	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@byteswap.h	/^__bswap_16 (__uint16_t __bsx)$/;"	f	typeref:typename:__uint16_t
__bswap_32	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@byteswap.h	/^__bswap_32 (__uint32_t __bsx)$/;"	f	typeref:typename:__uint32_t
__bswap_64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@byteswap.h	/^__bswap_64 (__uint64_t __bsx)$/;"	f	typeref:typename:__extension__ __uint64_t
__bswap_constant_16	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@byteswap.h	/^#define __bswap_constant_16(/;"	d
__bswap_constant_32	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@byteswap.h	/^#define __bswap_constant_32(/;"	d
__bswap_constant_64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@byteswap.h	/^#define __bswap_constant_64(/;"	d
__builtin_copysignf128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn.h	/^#   define __builtin_copysignf128 /;"	d
__builtin_fabsf128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn.h	/^#   define __builtin_fabsf128 /;"	d
__builtin_huge_valf128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn.h	/^#   define __builtin_huge_valf128(/;"	d
__builtin_huge_valf128x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __builtin_huge_valf128x(/;"	d
__builtin_huge_valf16	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __builtin_huge_valf16(/;"	d
__builtin_huge_valf32	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __builtin_huge_valf32(/;"	d
__builtin_huge_valf32x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __builtin_huge_valf32x(/;"	d
__builtin_huge_valf64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#    define __builtin_huge_valf64(/;"	d
__builtin_huge_valf64x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#    define __builtin_huge_valf64x(/;"	d
__builtin_inff128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn.h	/^#   define __builtin_inff128(/;"	d
__builtin_inff128x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __builtin_inff128x(/;"	d
__builtin_inff16	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __builtin_inff16(/;"	d
__builtin_inff32	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __builtin_inff32(/;"	d
__builtin_inff32x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __builtin_inff32x(/;"	d
__builtin_inff64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#    define __builtin_inff64(/;"	d
__builtin_inff64x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#    define __builtin_inff64x(/;"	d
__builtin_nanf128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn.h	/^#   define __builtin_nanf128(/;"	d
__builtin_nanf128x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __builtin_nanf128x(/;"	d
__builtin_nanf16	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __builtin_nanf16(/;"	d
__builtin_nanf32	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __builtin_nanf32(/;"	d
__builtin_nanf32x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __builtin_nanf32x(/;"	d
__builtin_nanf64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#    define __builtin_nanf64(/;"	d
__builtin_nanf64x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#    define __builtin_nanf64x(/;"	d
__builtin_nansf128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn.h	/^#   define __builtin_nansf128(/;"	d
__builtin_nansf128x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __builtin_nansf128x(/;"	d
__builtin_nansf16	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __builtin_nansf16(/;"	d
__builtin_nansf32	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __builtin_nansf32(/;"	d
__builtin_nansf32x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __builtin_nansf32x(/;"	d
__builtin_nansf64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#    define __builtin_nansf64(/;"	d
__builtin_nansf64x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#    define __builtin_nansf64x(/;"	d
__builtin_signbitf128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn.h	/^#   define __builtin_signbitf128 /;"	d
__c	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    unsigned short int __c;	\/* Additive const. in congruential formula.  *\/$/;"	m	struct:drand48_data	typeref:typename:unsigned short int
__c_locale	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++locale.h	/^  typedef __locale_t		__c_locale;$/;"	t	namespace:std	typeref:typename:__locale_t
__c_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using __c_pointer = typename _Tp::const_pointer;$/;"	t	struct:std::__allocator_traits_base	typeref:typename:_Tp::const_pointer
__cache_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      typedef __numpunct_cache<_CharT>  __cache_type;$/;"	t	class:std::numpunct	typeref:typename:__numpunct_cache<_CharT>
__cache_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef __moneypunct_cache<_CharT, _Intl>     __cache_type;$/;"	t	class:std::moneypunct	typeref:typename:__moneypunct_cache<_CharT,_Intl>
__cache_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef __timepunct_cache<_CharT>	__cache_type;$/;"	t	class:std::__timepunct	typeref:typename:__timepunct_cache<_CharT>
__caddr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef char *__caddr_t;$/;"	t	typeref:typename:char *
__cancel_arg	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  void *__cancel_arg;$/;"	m	class:__pthread_cleanup_class	typeref:typename:void *
__cancel_arg	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  void *__cancel_arg;$/;"	m	struct:__pthread_cleanup_frame	typeref:typename:void *
__cancel_jmp_buf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  __jmp_buf __cancel_jmp_buf;$/;"	m	struct:__cancel_jmp_buf_tag	typeref:typename:__jmp_buf
__cancel_jmp_buf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  struct __cancel_jmp_buf_tag __cancel_jmp_buf[1];$/;"	m	struct:__anon9201e7230b08	typeref:struct:__cancel_jmp_buf_tag[1]
__cancel_jmp_buf_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^struct __cancel_jmp_buf_tag$/;"	s
__cancel_routine	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  void (*__cancel_routine) (void *);$/;"	m	class:__pthread_cleanup_class	typeref:typename:void (*)(void *)
__cancel_routine	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  void (*__cancel_routine) (void *);$/;"	m	struct:__pthread_cleanup_frame	typeref:typename:void (*)(void *)
__cancel_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  int __cancel_type;$/;"	m	class:__pthread_cleanup_class	typeref:typename:int
__cancel_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  int __cancel_type;$/;"	m	struct:__pthread_cleanup_frame	typeref:typename:int
__canceltype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  int __canceltype;                       \/* Saved cancellation type. *\/$/;"	m	struct:_pthread_cleanup_buffer	typeref:typename:int
__cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  __cast(const duration<_Rep, _Period>& __d)$/;"	f	struct:std::chrono::__duration_cast_impl	typeref:typename:_ToDur
__cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^      using __cast = __and_<is_polymorphic<_Ex>,$/;"	t	function:std::rethrow_if_nested	typeref:typename:__and_<is_polymorphic<_Ex>,__or_<__not_<is_base_of<nested_exception,_Ex>>,is_convertible<_Ex *,nested_exception * >>>
__cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^      using __cast = __and_<is_polymorphic<_Ex>,$/;"	t	function:std::rethrow_if_nested	typeref:typename:__and_<is_polymorphic<_Ex>,is_base_of<nested_exception,_Ex>,is_convertible<_Ex *,nested_exception * >>
__catch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_defines.h	/^# define __catch(/;"	d
__cd	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  __cd;$/;"	t	function:std::chrono::operator %	typeref:typename:duration<typename common_type<_Rep1,_Rep2>::type,_Period>
__cd	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  __cd;$/;"	t	function:std::chrono::operator *	typeref:typename:duration<typename common_type<_Rep1,_Rep2>::type,_Period>
__cd	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  __cd;$/;"	t	function:std::chrono::operator /	typeref:typename:duration<typename common_type<_Rep1,_Rep2>::type,_Period>
__cd	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef typename common_type<__dur1,__dur2>::type	__cd;$/;"	t	function:std::chrono::operator %	typeref:typename:common_type<__dur1,__dur2>::type
__cd	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef typename common_type<__dur1,__dur2>::type	__cd;$/;"	t	function:std::chrono::operator +	typeref:typename:common_type<__dur1,__dur2>::type
__cd	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef typename common_type<__dur1,__dur2>::type	__cd;$/;"	t	function:std::chrono::operator -	typeref:typename:common_type<__dur1,__dur2>::type
__cd	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef typename common_type<__dur1,__dur2>::type	__cd;$/;"	t	function:std::chrono::operator /	typeref:typename:common_type<__dur1,__dur2>::type
__ceil_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	__ceil_impl(const _Tp& __t, const _Up& __u)$/;"	f	namespace:std::chrono::__detail	typeref:typename:_Tp
__cf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  using __cf = ratio_divide<_Period, __to_period>;$/;"	t	function:std::chrono::duration_cast	typeref:typename:ratio_divide<_Period,__to_period>
__cfloat128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn.h	/^typedef _Complex float __cfloat128 __attribute__ ((__mode__ (__TC__)));$/;"	t	typeref:typename:_Complex float
__cfloat16	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^typedef _Complex float __cfloat16 __attribute__ ((__mode__ (__HC__)));$/;"	t	typeref:typename:_Complex float
__char_traits_cmp_cat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      __char_traits_cmp_cat(int __cmp) noexcept$/;"	f	namespace:std::__detail	typeref:typename:auto
__char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _CharT			__char_type;$/;"	t	class:std::__timepunct	typeref:typename:_CharT
__check_constructible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __check_constructible()$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION bool
__check_facet	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^    __check_facet(const _Facet* __f)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION const _Facet &
__check_overflow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      constexpr _Dur __check_overflow()$/;"	f	namespace:std::literals::chrono_literals	typeref:typename:_Dur
__chunk_insertion_sort	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __chunk_insertion_sort(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__clamp_iter_cat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using __clamp_iter_cat$/;"	t	namespace:std::__detail	typeref:typename:__conditional_t<derived_from<_Cat,_Limit>,_Limit,_Otherwise>
__clang_max_align_nonce1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@__stddef_max_align_t.h	/^  long long __clang_max_align_nonce1$/;"	m	struct:__anon203e79380108	typeref:typename:long long
__clang_max_align_nonce2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@__stddef_max_align_t.h	/^  long double __clang_max_align_nonce2$/;"	m	struct:__anon203e79380108	typeref:typename:long double
__class_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    __class_type_info (const char *__n) : type_info(__n) { }$/;"	f	class:__cxxabiv1::__class_type_info
__class_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^  class __class_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1
__cleanup_fct_attribute	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes-arch.h	/^# define __cleanup_fct_attribute /;"	d
__cleanup_fct_attribute	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^# define __cleanup_fct_attribute$/;"	d
__clear_padding	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __clear_padding(_Tp& __val) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE _Tp *
__clock_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __CLOCK_T_TYPE __clock_t;	\/* Type of CPU usage counts.  *\/$/;"	v	typeref:typename:__STD_TYPE __CLOCK_T_TYPE
__clock_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@clock_t.h	/^#define __clock_t_defined /;"	d
__clockid_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __CLOCKID_T_TYPE __clockid_t;$/;"	v	typeref:typename:__STD_TYPE __CLOCKID_T_TYPE
__clockid_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@clockid_t.h	/^#define __clockid_t_defined /;"	d
__clone_functor	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    __clone_functor,$/;"	e	enum:std::_Manager_operation
__cmpexch_failure_order	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  __cmpexch_failure_order(memory_order __m) noexcept$/;"	f	namespace:std	typeref:typename:memory_order
__cmpexch_failure_order2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  __cmpexch_failure_order2(memory_order __m) noexcept$/;"	f	namespace:std	typeref:typename:memory_order
__cnd2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	__cnd2(_II __first, _II __last)$/;"	f	struct:std::__lc_rai	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__cnd2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	__cnd2(_RAI, _RAI)$/;"	f	struct:std::__lc_rai	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__codecvt_abstract_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      __codecvt_abstract_base(size_t __refs = 0) : locale::facet(__refs) { }$/;"	f	class:std::__codecvt_abstract_base
__codecvt_abstract_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^    class __codecvt_abstract_base$/;"	c	namespace:std
__collate_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  typedef std::collate<char_type> __collate_type;$/;"	t	function:std::regex_traits::transform	typeref:typename:std::collate<char_type>
__common_rep_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using __common_rep_t = typename$/;"	t	namespace:std::chrono	typeref:typename:enable_if<is_convertible<const _Rep2 &,_CRep>::value,_CRep>::type
__compar_d_fn_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^typedef int (*__compar_d_fn_t) (const void *, const void *, void *);$/;"	t	typeref:typename:int (*)(const void *,const void *,void *)
__compar_fn_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^typedef int (*__compar_fn_t) (const void *, const void *);$/;"	t	typeref:typename:int (*)(const void *,const void *)
__compare_exchange	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __compare_exchange(_Tp& __val, _Val<_Tp>& __e, _Val<_Tp>& __i,$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE bool
__concurrence_broadcast_error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  class __concurrence_broadcast_error : public std::exception$/;"	c	namespace:__gnu_cxx
__concurrence_lock_error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  class __concurrence_lock_error : public std::exception$/;"	c	namespace:__gnu_cxx
__concurrence_unlock_error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  class __concurrence_unlock_error : public std::exception$/;"	c	namespace:__gnu_cxx
__concurrence_wait_error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  class __concurrence_wait_error : public std::exception$/;"	c	namespace:__gnu_cxx
__cond	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    __cond() $/;"	f	class:__gnu_cxx::__cond
__cond	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  class __cond$/;"	c	namespace:__gnu_cxx
__conditional_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __conditional_type$/;"	s	namespace:__gnu_cxx
__conditional_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __conditional_type<false, _Iftrue, _Iffalse>$/;"	s	namespace:__gnu_cxx
__const_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	__const_get(const pair<_Tp1, _Tp2>& __pair) noexcept$/;"	f	struct:std::__pair_get	typeref:typename:const _Tp1 &
__const_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	__const_get(const pair<_Tp1, _Tp2>& __pair) noexcept$/;"	f	struct:std::__pair_get	typeref:typename:const _Tp2 &
__const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef iterator __const_iterator;$/;"	t	class:std::basic_string	typeref:typename:iterator
__const_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__const_mask = 0x1,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__const_move_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	__const_move_get(const pair<_Tp1, _Tp2>&& __pair) noexcept$/;"	f	struct:std::__pair_get	typeref:typename:const _Tp1 &&
__const_move_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	__const_move_get(const pair<_Tp1, _Tp2>&& __pair) noexcept$/;"	f	struct:std::__pair_get	typeref:typename:const _Tp2 &&
__const_sentinel	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      struct __const_sentinel$/;"	s	namespace:std::__detail
__const_sentinel	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      struct __const_sentinel<_Sent>$/;"	s	namespace:std::__detail
__construct_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	struct __construct_helper$/;"	s	struct:std::allocator_traits
__contained_ambig	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__contained_ambig,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__contained_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__contained_mask = 1 << __base_class_type_info::__hwm_bit,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__contained_private	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__contained_private = __contained_mask,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__contained_public	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__contained_public = __contained_mask | __contained_public_mask$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__contained_public_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__contained_public_mask = __base_class_type_info::__public_mask,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__contained_virtual_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__contained_virtual_mask = __base_class_type_info::__virtual_mask,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__context	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    __class_type_info* __context;   \/\/ Class of the member.$/;"	m	class:__cxxabiv1::__pointer_to_member_type_info	typeref:typename:__class_type_info *
__convert_from_v	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++locale.h	/^  __convert_from_v(const __c_locale& __cloc __attribute__ ((__unused__)),$/;"	f	namespace:std::__gnu_cxx_ieee128	typeref:typename:int
__convertible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	static constexpr bool __convertible = !is_same_v<_Iter, _Iterator>$/;"	m	class:std::reverse_iterator	typeref:typename:bool
__convertible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	static constexpr bool __convertible = !is_same_v<_Iter2, _Iterator>$/;"	m	class:std::move_iterator	typeref:typename:bool
__convertible_from	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	using __convertible_from$/;"	t	class:__gnu_cxx::__normal_iterator	typeref:typename:std::__enable_if_t<std::is_convertible<_Iter,_Iterator>::value>
__cookie_io_functions_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@cookie_io_functions_t.h	/^#define __cookie_io_functions_t_defined /;"	d
__copy_m	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	__copy_m(_II __first, _II __last, _OI __result)$/;"	f	struct:std::__copy_move	typeref:typename:_GLIBCXX20_CONSTEXPR _OI
__copy_m	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	__copy_m(_Tp* __first, _Tp* __last, _Up* __result)$/;"	f	struct:std::__copy_move	typeref:typename:_GLIBCXX20_CONSTEXPR _Up *
__copy_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __copy_move$/;"	s	namespace:std
__copy_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __copy_move<_IsMove, true, random_access_iterator_tag>$/;"	s	namespace:std
__copy_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __copy_move<false, false, random_access_iterator_tag>$/;"	s	namespace:std
__copy_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __copy_move<true, false, _Category>$/;"	s	namespace:std
__copy_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __copy_move<true, false, random_access_iterator_tag>$/;"	s	namespace:std
__copy_move_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __copy_move_a(_II __first, _II __last, _OI __result)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OI
__copy_move_a1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __copy_move_a1(_II __first, _II __last, _OI __result)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OI
__copy_move_a2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __copy_move_a2(_II __first, _II __last, _OI __result)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OI
__copy_move_a2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^    __copy_move_a2(_CharT* __first, _CharT* __last,$/;"	f	namespace:std	typeref:typename:__gnu_cxx::__enable_if<__is_char<_CharT>::__value,ostreambuf_iterator<_CharT>>::__type
__copy_move_a2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^    __copy_move_a2(const _CharT* __first, const _CharT* __last,$/;"	f	namespace:std	typeref:typename:__gnu_cxx::__enable_if<__is_char<_CharT>::__value,ostreambuf_iterator<_CharT>>::__type
__copy_move_a2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^    __copy_move_a2(istreambuf_iterator<_CharT> __first,$/;"	f	namespace:std	typeref:typename:__gnu_cxx::__enable_if<__is_char<_CharT>::__value,_CharT * >::__type
__copy_move_b	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	struct:std::__copy_move_backward	typeref:typename:_GLIBCXX20_CONSTEXPR _BI2
__copy_move_b	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	__copy_move_b(_Tp* __first, _Tp* __last, _Up* __result)$/;"	f	struct:std::__copy_move_backward	typeref:typename:_GLIBCXX20_CONSTEXPR _Up *
__copy_move_backward	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __copy_move_backward$/;"	s	namespace:std
__copy_move_backward	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>$/;"	s	namespace:std
__copy_move_backward	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __copy_move_backward<false, false, random_access_iterator_tag>$/;"	s	namespace:std
__copy_move_backward	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __copy_move_backward<true, false, _Category>$/;"	s	namespace:std
__copy_move_backward	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __copy_move_backward<true, false, random_access_iterator_tag>$/;"	s	namespace:std
__copy_move_backward_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __copy_move_backward_a(_II __first, _II __last, _OI __result)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OI
__copy_move_backward_a1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _BI2
__copy_move_backward_a2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _BI2
__copy_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __copy_n(_InputIterator __first, _Size __n,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
__copy_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __copy_n(_RandomAccessIterator __first, _Size __n,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
__copy_n_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __copy_n_a(_InputIterator __first, _Size __n, _OutputIterator __result,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
__copy_n_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^    __copy_n_a(istreambuf_iterator<_CharT> __it, _Size __n, _CharT* __result,$/;"	f	namespace:std	typeref:typename:__gnu_cxx::__enable_if<__is_char<_CharT>::__value,_CharT * >::__type
__count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^  unsigned int __count;$/;"	m	struct:__pthread_mutex_s	typeref:typename:unsigned int
__count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__mbstate_t.h	/^  int __count;$/;"	m	struct:__anon7b04dba30108	typeref:typename:int
__count_if	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR typename iterator_traits<_InputIterator>::difference_type
__count_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^	using __count_type = decltype(_Tp::_M_refcount);$/;"	t	struct:std::_Sp_atomic::_Atomic_count
__counted_iter_cat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      struct __counted_iter_cat$/;"	s	namespace:std::__detail
__counted_iter_cat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      struct __counted_iter_cat<_It>$/;"	s	namespace:std::__detail
__counted_iter_concept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      struct __counted_iter_concept$/;"	s	namespace:std::__detail
__counted_iter_concept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      struct __counted_iter_concept<_It>$/;"	s	namespace:std::__detail
__counted_iter_value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      struct __counted_iter_value_type$/;"	s	namespace:std::__detail
__counted_iter_value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      struct __counted_iter_value_type<_It>$/;"	s	namespace:std::__detail
__cpp_lib_addressof_constexpr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@move.h	/^# define __cpp_lib_addressof_constexpr /;"	d
__cpp_lib_allocator_traits_is_always_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^#define __cpp_lib_allocator_traits_is_always_equal /;"	d
__cpp_lib_array_constexpr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^# define __cpp_lib_array_constexpr /;"	d
__cpp_lib_assume_aligned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@align.h	/^#define __cpp_lib_assume_aligned /;"	d
__cpp_lib_atomic_flag_test	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^#define __cpp_lib_atomic_flag_test /;"	d
__cpp_lib_atomic_shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^# define __cpp_lib_atomic_shared_ptr /;"	d
__cpp_lib_atomic_value_initialization	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^# define __cpp_lib_atomic_value_initialization /;"	d
__cpp_lib_chrono	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^# define __cpp_lib_chrono /;"	d
__cpp_lib_chrono_udls	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^#define __cpp_lib_chrono_udls /;"	d
__cpp_lib_clamp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^#define __cpp_lib_clamp /;"	d
__cpp_lib_constexpr_algorithms	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@algorithmfwd.h	/^#  define __cpp_lib_constexpr_algorithms /;"	d
__cpp_lib_constexpr_char_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^# define __cpp_lib_constexpr_char_traits /;"	d
__cpp_lib_constexpr_dynamic_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^# define __cpp_lib_constexpr_dynamic_alloc /;"	d
__cpp_lib_constexpr_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^# define __cpp_lib_constexpr_iterator /;"	d
__cpp_lib_constexpr_memory	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^# define __cpp_lib_constexpr_memory /;"	d
__cpp_lib_constexpr_memory	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^# define __cpp_lib_constexpr_memory /;"	d
__cpp_lib_constexpr_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^# define __cpp_lib_constexpr_string /;"	d
__cpp_lib_constexpr_utility	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^# define __cpp_lib_constexpr_utility /;"	d
__cpp_lib_constexpr_vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^#define __cpp_lib_constexpr_vector /;"	d
__cpp_lib_enable_shared_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^#define __cpp_lib_enable_shared_from_this /;"	d
__cpp_lib_generic_associative_lookup	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^# define __cpp_lib_generic_associative_lookup /;"	d
__cpp_lib_incomplete_container_elements	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^#define __cpp_lib_incomplete_container_elements /;"	d
__cpp_lib_integer_sequence	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^#define __cpp_lib_integer_sequence /;"	d
__cpp_lib_ios_noreplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^#define __cpp_lib_ios_noreplace /;"	d
__cpp_lib_make_obj_using_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator_args.h	/^#define __cpp_lib_make_obj_using_allocator /;"	d
__cpp_lib_make_reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^#  define __cpp_lib_make_reverse_iterator /;"	d
__cpp_lib_make_unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^#define __cpp_lib_make_unique /;"	d
__cpp_lib_map_try_emplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^#define __cpp_lib_map_try_emplace /;"	d
__cpp_lib_move_iterator_concept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^# define __cpp_lib_move_iterator_concept /;"	d
__cpp_lib_node_extract	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^# define __cpp_lib_node_extract /;"	d
__cpp_lib_nonmember_container_access	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^#define __cpp_lib_nonmember_container_access /;"	d
__cpp_lib_ranges_zip	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^#define __cpp_lib_ranges_zip /;"	d
__cpp_lib_raw_memory_algorithms	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^# define __cpp_lib_raw_memory_algorithms /;"	d
__cpp_lib_robust_nonmodifying_seq_ops	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^#define __cpp_lib_robust_nonmodifying_seq_ops /;"	d
__cpp_lib_sample	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^#define __cpp_lib_sample /;"	d
__cpp_lib_shared_ptr_arrays	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^# define __cpp_lib_shared_ptr_arrays /;"	d
__cpp_lib_shared_ptr_weak_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^# define __cpp_lib_shared_ptr_weak_type /;"	d
__cpp_lib_smart_ptr_for_overwrite	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^# define __cpp_lib_smart_ptr_for_overwrite /;"	d
__cpp_lib_ssize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^#define __cpp_lib_ssize /;"	d
__cpp_lib_string_resize_and_overwrite	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^#define __cpp_lib_string_resize_and_overwrite /;"	d
__cpp_lib_string_udls	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^#define __cpp_lib_string_udls /;"	d
__cpp_lib_to_address	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^#define __cpp_lib_to_address /;"	d
__cpp_lib_transparent_operators	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^#define __cpp_lib_transparent_operators /;"	d
__cpp_lib_tuple_element_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^#define __cpp_lib_tuple_element_t /;"	d
__cpp_lib_tuples_by_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^#define __cpp_lib_tuples_by_type /;"	d
__cpu_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^typedef __CPU_MASK_TYPE __cpu_mask;$/;"	t	typeref:typename:__CPU_MASK_TYPE
__cr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  using __cr = typename common_type<__to_rep, _Rep, intmax_t>::type;$/;"	t	function:std::chrono::duration_cast	typeref:typename:common_type<__to_rep,_Rep,intmax_t>::type
__cr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using __cr = typename _CT::type;$/;"	t	struct:std::__duration_common_type	typeref:typename:_CT::type
__ct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef typename common_type<_Dur1,__dur2>::type	__ct;$/;"	t	function:std::chrono::operator +	typeref:typename:common_type<_Dur1,__dur2>::type
__ct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef typename common_type<_Dur1,__dur2>::type	__ct;$/;"	t	function:std::chrono::operator -	typeref:typename:common_type<_Dur1,__dur2>::type
__ct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef typename common_type<__dur1,_Dur2>::type	__ct;$/;"	t	function:std::chrono::operator +	typeref:typename:common_type<__dur1,_Dur2>::type
__ct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef typename common_type<__dur1,__dur2>::type	__ct;$/;"	t	function:std::chrono::operator <	typeref:typename:common_type<__dur1,__dur2>::type
__ct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef typename common_type<__dur1,__dur2>::type	__ct;$/;"	t	function:std::chrono::operator ==	typeref:typename:common_type<__dur1,__dur2>::type
__ct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	using __ct = common_type_t<duration<_Rep1, _Period1>,$/;"	t	function:std::chrono::operator <=>	typeref:typename:common_type_t<duration<_Rep1,_Period1>,duration<_Rep2,_Period2>>
__ctype_abstract_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }$/;"	f	class:std::__ctype_abstract_base
__ctype_abstract_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    class __ctype_abstract_base : public locale::facet, public ctype_base$/;"	c	namespace:std
__ctype_b	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__locale_t.h	/^  const unsigned short int *__ctype_b;$/;"	m	struct:__locale_struct	typeref:typename:const unsigned short int *
__ctype_tolower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__locale_t.h	/^  const int *__ctype_tolower;$/;"	m	struct:__locale_struct	typeref:typename:const int *
__ctype_toupper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__locale_t.h	/^  const int *__ctype_toupper;$/;"	m	struct:__locale_struct	typeref:typename:const int *
__ctype_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      typedef ctype<_CharT>                          __ctype_type;$/;"	t	class:std::basic_ios	typeref:typename:ctype<_CharT>
__ctype_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  typedef std::ctype<char_type> __ctype_type;$/;"	t	function:std::regex_traits::transform_primary	typeref:typename:std::ctype<char_type>
__ctype_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	typedef std::ctype<char_type> __ctype_type;$/;"	t	function:std::regex_traits::translate_nocase	typeref:typename:std::ctype<char_type>
__ctype_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^	typedef std::ctype<_CharT> __ctype_type;$/;"	t	function:std::__detail::_RegexTranslatorBase::_M_in_range_icase	typeref:typename:std::ctype<_CharT>
__cur_writer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^  int __cur_writer;$/;"	m	struct:__pthread_rwlock_arch_t	typeref:typename:int
__cv_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using __cv_pointer = typename _Tp::const_void_pointer;$/;"	t	struct:std::__allocator_traits_base	typeref:typename:_Tp::const_void_pointer
__cxa_cdtor_return_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@cxxabi_tweaks.h	/^  typedef void __cxa_cdtor_return_type;$/;"	t	namespace:__cxxabiv1	typeref:typename:void
__cxa_cdtor_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^  typedef __cxa_cdtor_return_type (*__cxa_cdtor_type)(void *);$/;"	t	namespace:__cxxabiv1	typeref:typename:__cxa_cdtor_return_type (*)(void *)
__cxa_vec_ctor_return_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@cxxabi_tweaks.h	/^  typedef void __cxa_vec_ctor_return_type;$/;"	t	namespace:__cxxabiv1	typeref:typename:void
__cxx11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }$/;"	n	namespace:__gnu_cxx
__cxx11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }$/;"	n	namespace:std
__cxx11	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }$/;"	n	namespace:std::__cxx1998
__cxx1998	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^  namespace __cxx1998$/;"	n	namespace:std
__cxxabiv1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cxxabi_forced.h	/^namespace __cxxabiv1$/;"	n
__cxxabiv1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cxxabi_init_exception.h	/^namespace __cxxabiv1$/;"	n
__cxxabiv1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^namespace __cxxabiv1$/;"	n
__cxxabiv1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@cxxabi_tweaks.h	/^namespace __cxxabiv1$/;"	n
__d	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	duration __d;$/;"	m	class:std::chrono::time_point	typeref:typename:duration
__daddr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __DADDR_T_TYPE __daddr_t;	\/* The type of a disk address.  *\/$/;"	v	typeref:typename:__STD_TYPE __DADDR_T_TYPE
__daddr_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^#  define __daddr_t_defined$/;"	d
__data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  struct __pthread_cond_s __data;$/;"	m	union:__anondcf6770a040a	typeref:struct:__pthread_cond_s
__data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  struct __pthread_mutex_s __data;$/;"	m	union:__anondcf6770a030a	typeref:struct:__pthread_mutex_s
__data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  struct __pthread_rwlock_arch_t __data;$/;"	m	union:__anondcf6770a050a	typeref:struct:__pthread_rwlock_arch_t
__dc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  using __dc = __duration_cast_impl<_ToDur, __cf, __cr,$/;"	t	function:std::chrono::duration_cast	typeref:typename:__duration_cast_impl<_ToDur,__cf,__cr,__cf::num==1,__cf::den==1>
__debug	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^  namespace __debug { } $/;"	n	namespace:std
__debug	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^  inline namespace __debug { }$/;"	n	namespace:std
__default_lock_policy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  _GLIBCXX17_INLINE const _Lock_policy __default_lock_policy =$/;"	v	namespace:__gnu_cxx	typeref:typename:_GLIBCXX17_INLINE const _Lock_policy
__defer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  void __defer () { pthread_setcanceltype (PTHREAD_CANCEL_DEFERRED,$/;"	f	class:__pthread_cleanup_class	typeref:typename:void
__deque_buf_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^  __deque_buf_size(size_t __size)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION _GLIBCXX_BEGIN_NAMESPACE_CONTAINER _GLIBCXX_CONSTEXPR size_t
__dest_thunk	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^      __dest_thunk(void* __x)$/;"	f	namespace:std::__exception_ptr	typeref:typename:_GLIBCXX_CDTOR_CALLABI void
__destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^	__destroy(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	struct:std::_Destroy_aux	typeref:typename:_GLIBCXX20_CONSTEXPR void
__destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^        __destroy(_ForwardIterator, _ForwardIterator) { }$/;"	f	struct:std::_Destroy_aux	typeref:typename:void
__destroy_functor	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    __destroy_functor$/;"	e	enum:std::_Manager_operation
__destroy_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^	__destroy_n(_ForwardIterator __first, _Size __count)$/;"	f	struct:std::_Destroy_n_aux	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__destroy_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^        __destroy_n(_ForwardIterator __first, _Size __count)$/;"	f	struct:std::_Destroy_n_aux	typeref:typename:_ForwardIterator
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  namespace __detail::__variant$/;"	n	namespace:std
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^  namespace __detail$/;"	n	namespace:std
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@charconv.h	/^namespace __detail$/;"	n	namespace:std
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    namespace __detail { using chrono::ceil; }$/;"	n	namespace:std::chrono
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    namespace __detail$/;"	n	namespace:std::chrono
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^  namespace __detail$/;"	n	namespace:std
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^namespace __detail$/;"	n	namespace:std
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^namespace __detail$/;"	n	namespace:std
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^namespace __detail$/;"	n	namespace:std
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^namespace __detail$/;"	n	namespace:std
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^namespace __detail$/;"	n	namespace:std
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^  namespace __detail::__variant$/;"	n	namespace:std
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^  namespace __detail::__variant$/;"	n	namespace:std
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^  namespace __detail$/;"	n	namespace:std
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^  namespace __detail$/;"	n	namespace:std
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^  namespace __detail::__variant$/;"	n	namespace:std
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^  namespace __detail$/;"	n	namespace:std
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^  namespace __detail::__variant$/;"	n	namespace:std
__detail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^namespace __detail$/;"	n	namespace:std
__dev_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __DEV_T_TYPE __dev_t;	\/* Type of device numbers.  *\/$/;"	v	typeref:typename:__STD_TYPE __DEV_T_TYPE
__dev_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^# define __dev_t_defined$/;"	d
__dfs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      using __dfs = true_type;$/;"	t	class:std::__detail::_Executor	typeref:typename:true_type
__diamond_shaped_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__diamond_shaped_mask = 0x2, \/\/ Diamond shaped multiple inheritance.$/;"	e	enum:__cxxabiv1::__vmi_class_type_info::__flags_masks
__diff_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^	using __diff_t = typename _Tp::difference_type;$/;"	t	struct:std::__ptr_traits_impl	typeref:typename:_Tp::difference_type
__digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^      using __digit = _Digit<_Base, _Dig>;$/;"	t	struct:std::__parse_int::_Number_help	typeref:typename:_Digit<_Base,_Dig>
__digits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^      static const int __digits$/;"	m	struct:__gnu_cxx::__numeric_traits_integer	typeref:typename:const int
__digits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    const int __numeric_traits_integer<_Value>::__digits;$/;"	m	class:__gnu_cxx::__numeric_traits_integer<_Value>	typeref:typename:const int
__digits10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^      static const int __digits10 = 31;$/;"	m	struct:__gnu_cxx::__numeric_traits_floating	typeref:typename:const int
__digits10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^      static const int __digits10 = 33;$/;"	m	struct:__gnu_cxx::__numeric_traits_floating	typeref:typename:const int
__digits10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^      static const int __digits10 = __glibcxx_digits10(_Value);$/;"	m	struct:__gnu_cxx::__numeric_traits_floating	typeref:typename:const int
__digits10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    const int __numeric_traits_floating<_Value>::__digits10;$/;"	m	class:__gnu_cxx::__numeric_traits_floating<_Value>	typeref:typename:const int
__disable_if_is_duration	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using __disable_if_is_duration$/;"	t	namespace:std::chrono	typeref:typename:enable_if<!__is_duration<_Tp>::value,_Tp>::type
__distance	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_funcs.h	/^    __distance(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_END_NAMESPACE_CONTAINER _GLIBCXX14_CONSTEXPR typename iterator_traits<_InputIterator>::difference_type
__distance	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_funcs.h	/^    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR typename iterator_traits<_RandomAccessIterator>::difference_type
__distr_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      typedef typename std::uniform_int_distribution<__ud_type> __distr_type;$/;"	t	function:std::shuffle	typeref:typename:std::uniform_int_distribution<__ud_type>
__distrib_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      using __distrib_type = uniform_int_distribution<_Size>;$/;"	t	function:std::__sample	typeref:typename:uniform_int_distribution<_Size>
__divide	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  using __divide = ratio<(_R1::num \/ __gcd1) * (_R2::den \/ __gcd2),$/;"	t	class:std::chrono::duration
__do_alloc_on_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    __do_alloc_on_copy(_Alloc& __one, const _Alloc& __two, true_type)$/;"	f	namespace:std	typeref:typename:void
__do_alloc_on_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)$/;"	f	namespace:std	typeref:typename:void
__do_alloc_on_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)$/;"	f	namespace:std	typeref:typename:void
__do_alloc_on_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)$/;"	f	namespace:std	typeref:typename:void
__do_alloc_on_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    inline void __do_alloc_on_swap(_Alloc& __one, _Alloc& __two, true_type)$/;"	f	namespace:std	typeref:typename:void
__do_alloc_on_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    inline void __do_alloc_on_swap(_Alloc&, _Alloc&, false_type)$/;"	f	namespace:std	typeref:typename:void
__do_it	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  int __do_it;$/;"	m	class:__pthread_cleanup_class	typeref:typename:int
__do_it	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  int __do_it;$/;"	m	struct:__pthread_cleanup_frame	typeref:typename:int
__do_str_codecvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^    __do_str_codecvt(const _InChar* __first, const _InChar* __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION bool
__do_uninit_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __do_uninit_copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__do_uninit_fill	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __do_uninit_fill(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__do_uninit_fill_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __do_uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__ds_type1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      typedef typename __decay_and_strip<_T1>::__type __ds_type1;$/;"	t	function:std::make_pair	typeref:typename:__decay_and_strip<_T1>::__type
__ds_type2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      typedef typename __decay_and_strip<_T2>::__type __ds_type2;$/;"	t	function:std::make_pair	typeref:typename:__decay_and_strip<_T2>::__type
__dur1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef duration<_Rep1, _Period1>			__dur1;$/;"	t	function:std::chrono::operator %	typeref:typename:duration<_Rep1,_Period1>
__dur1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef duration<_Rep1, _Period1>			__dur1;$/;"	t	function:std::chrono::operator +	typeref:typename:duration<_Rep1,_Period1>
__dur1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef duration<_Rep1, _Period1>			__dur1;$/;"	t	function:std::chrono::operator -	typeref:typename:duration<_Rep1,_Period1>
__dur1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef duration<_Rep1, _Period1>			__dur1;$/;"	t	function:std::chrono::operator /	typeref:typename:duration<_Rep1,_Period1>
__dur1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef duration<_Rep1, _Period1>			__dur1;$/;"	t	function:std::chrono::operator <	typeref:typename:duration<_Rep1,_Period1>
__dur1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef duration<_Rep1, _Period1>			__dur1;$/;"	t	function:std::chrono::operator ==	typeref:typename:duration<_Rep1,_Period1>
__dur2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef duration<_Rep2, _Period2>			__dur2;$/;"	t	function:std::chrono::operator %	typeref:typename:duration<_Rep2,_Period2>
__dur2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef duration<_Rep2, _Period2>			__dur2;$/;"	t	function:std::chrono::operator +	typeref:typename:duration<_Rep2,_Period2>
__dur2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef duration<_Rep2, _Period2>			__dur2;$/;"	t	function:std::chrono::operator -	typeref:typename:duration<_Rep2,_Period2>
__dur2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef duration<_Rep2, _Period2>			__dur2;$/;"	t	function:std::chrono::operator /	typeref:typename:duration<_Rep2,_Period2>
__dur2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef duration<_Rep2, _Period2>			__dur2;$/;"	t	function:std::chrono::operator <	typeref:typename:duration<_Rep2,_Period2>
__dur2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef duration<_Rep2, _Period2>			__dur2;$/;"	t	function:std::chrono::operator ==	typeref:typename:duration<_Rep2,_Period2>
__duration_cast_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      struct __duration_cast_impl$/;"	s	namespace:std::chrono
__duration_cast_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      struct __duration_cast_impl<_ToDur, _CF, _CR, false, true>$/;"	s	namespace:std::chrono
__duration_cast_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      struct __duration_cast_impl<_ToDur, _CF, _CR, true, false>$/;"	s	namespace:std::chrono
__duration_cast_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      struct __duration_cast_impl<_ToDur, _CF, _CR, true, true>$/;"	s	namespace:std::chrono
__duration_common_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    struct __duration_common_type$/;"	s	namespace:std
__duration_common_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    struct __duration_common_type<_CT, _Period1, _Period2,$/;"	s	namespace:std
__eelision	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^      short __eelision;$/;"	m	struct:__pthread_mutex_s::__anone4492d64010a::__anone4492d640208	typeref:typename:short
__elision	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^  short __elision;$/;"	m	struct:__pthread_mutex_s	typeref:typename:short
__elision	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^# define __elision __elision_/;"	d
__elision_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^    } __elision_data;$/;"	m	union:__pthread_mutex_s::__anone4492d64010a	typeref:struct:__pthread_mutex_s::__anone4492d64010a::__anone4492d640208
__enable_hash_call	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^      static constexpr bool __enable_hash_call = false;$/;"	m	struct:std::__poison_hash	typeref:typename:bool
__enable_hash_call	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^      static constexpr bool __enable_hash_call = true;$/;"	m	struct:std::__poison_hash	typeref:typename:bool
__enable_if	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __enable_if $/;"	s	namespace:__gnu_cxx
__enable_if	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __enable_if<true, _Tp>$/;"	s	namespace:__gnu_cxx
__enable_if_execution_policy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^using __enable_if_execution_policy =$/;"	t	namespace:__pstl::__internal	typeref:typename:std::enable_if<__pstl::execution::is_execution_policy<std::__remove_cvref_t<_ExecPolicy>>::value,_Tp>::type
__enable_if_has_tuple_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    using __enable_if_has_tuple_size = _Tp;$/;"	t	namespace:std	typeref:typename:_Tp
__enable_if_is_duration	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using __enable_if_is_duration$/;"	t	namespace:std::chrono	typeref:typename:enable_if<__is_duration<_Tp>::value,_Tp>::type
__enable_if_not_native_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	struct __enable_if_not_native_iterator$/;"	s	class:std::basic_string
__enable_if_not_native_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	struct __enable_if_not_native_iterator<_Tp, false> { };$/;"	s	class:std::basic_string
__enable_shared_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      __enable_shared_from_this(const __enable_shared_from_this&) noexcept { }$/;"	f	class:std::__enable_shared_from_this
__enable_shared_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      constexpr __enable_shared_from_this() noexcept { }$/;"	f	class:std::__enable_shared_from_this
__enable_shared_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    class __enable_shared_from_this$/;"	c	namespace:std
__enable_shared_from_this_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      __enable_shared_from_this_base(const __shared_count<>&,$/;"	f	namespace:std	typeref:typename:const enable_shared_from_this *
__enable_shared_from_this_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      __enable_shared_from_this_base(const __shared_count<_Lp>&,$/;"	f	namespace:std	typeref:typename:const __enable_shared_from_this *
__enum_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    __enum_type_info(const char* __n) : std::type_info(__n) { }$/;"	f	class:__cxxabiv1::__enum_type_info
__enum_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^  class __enum_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1
__equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using __equal = __type_identity<typename _Tp::is_always_equal>;$/;"	t	struct:std::__allocator_traits_base	typeref:typename:__type_identity<typename _Tp::is_always_equal>
__equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __equal$/;"	s	namespace:std
__equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __equal<true>$/;"	s	namespace:std
__equal4	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __equal4(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__equal4	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __equal4(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__equal_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __equal_aux(_II1 __first1, _II1 __last1, _II2 __first2)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__equal_aux1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __equal_aux1(_II1 __first1, _II1 __last1, _II2 __first2)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__equal_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __equal_range(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR pair<_ForwardIterator,_ForwardIterator>
__erased_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^  struct __erased_type { };$/;"	s	namespace:std
__error_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@error_t.h	/^# define __error_t_defined /;"	d
__errordecl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __errordecl(/;"	d
__esft_base_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	using __esft_base_t = decltype(__enable_shared_from_this_base($/;"	t	class:std::__shared_ptr
__espins	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^      short __espins;$/;"	m	struct:__pthread_mutex_s::__anone4492d64010a::__anone4492d640208	typeref:typename:short
__exception_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^  namespace __exception_ptr$/;"	n	namespace:std
__exchange	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@move.h	/^    __exchange(_Tp& __obj, _Up&& __new_val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _Tp
__exchange_and_add	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@atomicity.h	/^  __exchange_and_add(volatile _Atomic_word* __mem, int __val)$/;"	f	namespace:__gnu_cxx	typeref:typename:_Atomic_word
__exchange_and_add_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@atomicity.h	/^  __exchange_and_add_dispatch(_Atomic_word* __mem, int __val)$/;"	f	namespace:__gnu_cxx	typeref:typename:_Atomic_word
__exchange_and_add_single	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@atomicity.h	/^  __exchange_and_add_single(_Atomic_word* __mem, int __val)$/;"	f	namespace:__gnu_cxx	typeref:typename:_Atomic_word
__exctype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#define	__exctype(/;"	d
__exctype_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^# define __exctype_l(/;"	d
__extension__	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __extension__	/;"	d
__extern_always_inline	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __extern_always_inline /;"	d
__extern_inline	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __extern_inline /;"	d
__f128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn.h	/^#   define __f128(/;"	d
__f128x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __f128x(/;"	d
__f16	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __f16(/;"	d
__f32	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __f32(/;"	d
__f32x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __f32x(/;"	d
__f64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#    define __f64(/;"	d
__f64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __f64(/;"	d
__f64x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#    define __f64x(/;"	d
__f64x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@floatn-common.h	/^#   define __f64x(/;"	d
__false_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^  struct __false_type { };$/;"	s	namespace:std
__fd_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^typedef long int __fd_mask;$/;"	t	typeref:typename:long int
__feof_unlocked_body	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^#define __feof_unlocked_body(/;"	d
__ferror_unlocked_body	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^#define __ferror_unlocked_body(/;"	d
__fetch_add_flt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __fetch_add_flt(_Tp* __ptr, _Val<_Tp> __i, memory_order __m) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_Tp
__fetch_sub_flt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __fetch_sub_flt(_Tp* __ptr, _Val<_Tp> __i, memory_order __m) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_Tp
__file_clock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    struct __file_clock$/;"	s	namespace:std::filesystem
__file_time	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  using __file_time = chrono::time_point<__file_clock, _Dur>;$/;"	t	function:std::filesystem::__file_clock::_S_from_sys	typeref:typename:chrono::time_point<__file_clock,_Dur>
__fill_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__fill_a1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __fill_a1(::__gnu_cxx::__normal_iterator<_Ite, _Cont> __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__fill_a1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value,void>::__type
__fill_a1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value,void>::__type
__fill_a1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value,void>::__type
__fill_a1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^  __fill_a1(_GLIBCXX_STD_C::_Bit_iterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__fill_bvector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^  __fill_bvector(_Bit_type* __v, unsigned int __first, unsigned int __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_END_NAMESPACE_CONTAINER _GLIBCXX20_CONSTEXPR void
__fill_bvector_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^  __fill_bvector_n(_Bit_type* __p, size_t __n, bool __x) _GLIBCXX_NOEXCEPT$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__fill_n_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
__fill_n_a1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __fill_n_a1(_OutputIterator __first, _Size __n, const _Tp& __value)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value,_OutputIterator>::__type
__fill_n_a1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __fill_n_a1(_OutputIterator __first, _Size __n, const _Tp& __value)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value,_OutputIterator>::__type
__final_insertion_sort	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __final_insertion_sort(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__find_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __find_end(_BidirectionalIterator1 __first1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _BidirectionalIterator1
__find_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator1
__find_if	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __find_if(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_END_NAMESPACE_ALGO _GLIBCXX20_CONSTEXPR _InputIterator
__find_if	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __find_if(_Iterator __first, _Iterator __last, _Predicate __pred)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _Iterator
__find_if	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __find_if(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _RandomAccessIterator
__find_if_not	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __find_if_not(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _InputIterator
__find_if_not_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __find_if_not_n(_InputIterator __first, _Distance& __len, _Predicate __pred)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _InputIterator
__find_uniq_type_in_pack	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    __find_uniq_type_in_pack()$/;"	f	namespace:std	typeref:typename:size_t
__flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^  unsigned char __flags;$/;"	m	struct:__pthread_rwlock_arch_t	typeref:typename:unsigned char
__flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^  unsigned int __flags;$/;"	m	struct:__pthread_rwlock_arch_t	typeref:typename:unsigned int
__flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    unsigned int 		__flags;  \/\/ Details about the class hierarchy.$/;"	m	class:__cxxabiv1::__vmi_class_type_info	typeref:typename:unsigned int
__flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    unsigned int 		__flags; \/\/ Qualification of the target object.$/;"	m	class:__cxxabiv1::__pbase_type_info	typeref:typename:unsigned int
__flags_masks	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    enum __flags_masks$/;"	g	class:__cxxabiv1::__vmi_class_type_info
__flags_unknown_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__flags_unknown_mask = 0x10$/;"	e	enum:__cxxabiv1::__vmi_class_type_info::__flags_masks
__flexarr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __flexarr	/;"	d
__forced_unwind	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cxxabi_forced.h	/^  class __forced_unwind$/;"	c	namespace:__cxxabiv1
__foreign_exception	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^  class __foreign_exception$/;"	c	namespace:__cxxabiv1
__fortified_attr_access	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#    define __fortified_attr_access(/;"	d
__fortified_attr_access	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __fortified_attr_access(/;"	d
__fortify_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __fortify_function /;"	d
__fpos64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__fpos64_t.h	/^} __fpos64_t;$/;"	t	typeref:struct:_G_fpos64_t
__fpos_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__fpos_t.h	/^} __fpos_t;$/;"	t	typeref:struct:_G_fpos_t
__from	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef chrono::time_point<system_clock, seconds>	__from;$/;"	t	function:std::chrono::system_clock::from_time_t	typeref:typename:chrono::time_point<system_clock,seconds>
__fsblkcnt64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __FSBLKCNT64_T_TYPE __fsblkcnt64_t;$/;"	v	typeref:typename:__STD_TYPE __FSBLKCNT64_T_TYPE
__fsblkcnt_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __FSBLKCNT_T_TYPE __fsblkcnt_t;$/;"	v	typeref:typename:__STD_TYPE __FSBLKCNT_T_TYPE
__fsblkcnt_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^#  define __fsblkcnt_t_defined$/;"	d
__fsfilcnt64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __FSFILCNT64_T_TYPE __fsfilcnt64_t;$/;"	v	typeref:typename:__STD_TYPE __FSFILCNT64_T_TYPE
__fsfilcnt_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __FSFILCNT_T_TYPE __fsfilcnt_t;$/;"	v	typeref:typename:__STD_TYPE __FSFILCNT_T_TYPE
__fsfilcnt_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^#  define __fsfilcnt_t_defined$/;"	d
__fsid_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __FSID_T_TYPE __fsid_t;	\/* Type of file system IDs.  *\/$/;"	v	typeref:typename:__STD_TYPE __FSID_T_TYPE
__fsword_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __FSWORD_T_TYPE __fsword_t;$/;"	v	typeref:typename:__STD_TYPE __FSWORD_T_TYPE
__function_guide_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    struct __function_guide_helper$/;"	s	namespace:std
__function_guide_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    struct __function_guide_helper<$/;"	s	namespace:std
__function_guide_static_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    struct __function_guide_static_helper$/;"	s	namespace:std
__function_guide_static_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    struct __function_guide_static_helper<_Res (*) (_Args...) noexcept(_Nx)>$/;"	s	namespace:std
__function_guide_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    using __function_guide_t = typename __conditional_t<$/;"	t	namespace:std
__function_guide_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    using __function_guide_t = typename __function_guide_helper<_Op>::type;$/;"	t	namespace:std	typeref:typename:__function_guide_helper<_Op>::type
__function_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    __function_type_info(const char* __n) : std::type_info(__n) { }$/;"	f	class:__cxxabiv1::__function_type_info
__function_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^  class __function_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1
__fundamental_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    __fundamental_type_info(const char* __n) : std::type_info(__n) { }$/;"	f	class:__cxxabiv1::__fundamental_type_info
__fundamental_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^  class __fundamental_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1
__g1_orig_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^  unsigned int __g1_orig_size;$/;"	m	struct:__pthread_cond_s	typeref:typename:unsigned int
__g1_start	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^  __atomic_wide_counter __g1_start;$/;"	m	struct:__pthread_cond_s	typeref:typename:__atomic_wide_counter
__g_refs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^  unsigned int __g_refs[2] __LOCK_ALIGNMENT;$/;"	m	struct:__pthread_cond_s	typeref:typename:unsigned int[2]__LOCK_ALIGNMENT
__g_signals	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^  unsigned int __g_signals[2];$/;"	m	struct:__pthread_cond_s	typeref:typename:unsigned int[2]
__g_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^  unsigned int __g_size[2];$/;"	m	struct:__pthread_cond_s	typeref:typename:unsigned int[2]
__gcd	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _EuclideanRingElement
__gcd_den	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using __gcd_den = __static_gcd<_Period1::den, _Period2::den>;$/;"	t	struct:std::__duration_common_type	typeref:typename:__static_gcd<_Period1::den,_Period2::den>
__gcd_num	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using __gcd_num = __static_gcd<_Period1::num, _Period2::num>;$/;"	t	struct:std::__duration_common_type	typeref:typename:__static_gcd<_Period1::num,_Period2::num>
__gen_two_uniform_ints	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __gen_two_uniform_ints(_IntType __b0, _IntType __b1,$/;"	f	namespace:std	typeref:typename:pair<_IntType,_IntType>
__generate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	__generate(_ForwardIterator __f, _ForwardIterator __t,$/;"	f	class:std::uniform_int_distribution	typeref:typename:void
__generate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	__generate(result_type* __f, result_type* __t,$/;"	f	class:std::uniform_int_distribution	typeref:typename:void
__generate_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      __generate_impl(_ForwardIterator __f, _ForwardIterator __t,$/;"	f	class:std::uniform_int_distribution	typeref:typename:void
__get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	__get(pair<_Tp1, _Tp2>& __pair) noexcept$/;"	f	struct:std::__pair_get	typeref:typename:_Tp1 &
__get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	__get(pair<_Tp1, _Tp2>& __pair) noexcept$/;"	f	struct:std::__pair_get	typeref:typename:_Tp2 &
__get_first_arg	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    struct __get_first_arg$/;"	s	namespace:std
__get_first_arg	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    struct __get_first_arg<_SomeTemplate<_Tp, _Types...>>$/;"	s	namespace:std
__get_functor_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    __get_functor_ptr,$/;"	e	enum:std::_Manager_operation
__get_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    __get_type_info,$/;"	e	enum:std::_Manager_operation
__getc_unlocked_body	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^#define __getc_unlocked_body(/;"	d
__gid_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __GID_T_TYPE __gid_t;	\/* Type of group identifications.  *\/$/;"	v	typeref:typename:__STD_TYPE __GID_T_TYPE
__gid_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^# define __gid_t_defined$/;"	d
__glibc_c99_flexarr_available	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __glibc_c99_flexarr_available /;"	d
__glibc_clang_prereq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@features.h	/^# define __glibc_clang_prereq(/;"	d
__glibc_fortify	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#define __glibc_fortify(/;"	d
__glibc_fortify_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#define __glibc_fortify_n(/;"	d
__glibc_has_attribute	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __glibc_has_attribute(/;"	d
__glibc_has_builtin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __glibc_has_builtin(/;"	d
__glibc_has_extension	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __glibc_has_extension(/;"	d
__glibc_likely	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __glibc_likely(/;"	d
__glibc_macro_warning	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __glibc_macro_warning(/;"	d
__glibc_macro_warning1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __glibc_macro_warning1(/;"	d
__glibc_objsize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __glibc_objsize(/;"	d
__glibc_objsize0	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __glibc_objsize0(/;"	d
__glibc_safe_len_cond	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#define __glibc_safe_len_cond(/;"	d
__glibc_safe_or_unknown_len	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#define __glibc_safe_or_unknown_len(/;"	d
__glibc_unlikely	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __glibc_unlikely(/;"	d
__glibc_unsafe_len	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#define __glibc_unsafe_len(/;"	d
__glibc_unsigned_or_positive	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#define __glibc_unsigned_or_positive(/;"	d
__glibcxx_class_requires	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@concept_check.h	/^#define __glibcxx_class_requires(/;"	d
__glibcxx_class_requires2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@concept_check.h	/^#define __glibcxx_class_requires2(/;"	d
__glibcxx_class_requires3	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@concept_check.h	/^#define __glibcxx_class_requires3(/;"	d
__glibcxx_class_requires4	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@concept_check.h	/^#define __glibcxx_class_requires4(/;"	d
__glibcxx_digits10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^#define __glibcxx_digits10(/;"	d
__glibcxx_floating	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^#define __glibcxx_floating(/;"	d
__glibcxx_function_requires	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@concept_check.h	/^#define __glibcxx_function_requires(/;"	d
__glibcxx_max_digits10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^#define __glibcxx_max_digits10(/;"	d
__glibcxx_max_exponent10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^#define __glibcxx_max_exponent10(/;"	d
__glibcxx_requires_can_decrement_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_can_decrement_range(/;"	d
__glibcxx_requires_can_increment	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_can_increment(/;"	d
__glibcxx_requires_can_increment_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_can_increment_range(/;"	d
__glibcxx_requires_cond	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_cond(/;"	d
__glibcxx_requires_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_heap(/;"	d
__glibcxx_requires_heap_pred	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_heap_pred(/;"	d
__glibcxx_requires_irreflexive	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_irreflexive(/;"	d
__glibcxx_requires_irreflexive2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_irreflexive2(/;"	d
__glibcxx_requires_irreflexive_pred	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_irreflexive_pred(/;"	d
__glibcxx_requires_irreflexive_pred2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_irreflexive_pred2(/;"	d
__glibcxx_requires_non_empty_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@assertions.h	/^# define __glibcxx_requires_non_empty_range(/;"	d
__glibcxx_requires_nonempty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@assertions.h	/^# define __glibcxx_requires_nonempty(/;"	d
__glibcxx_requires_partitioned_lower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_partitioned_lower(/;"	d
__glibcxx_requires_partitioned_lower_pred	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_partitioned_lower_pred(/;"	d
__glibcxx_requires_partitioned_upper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_partitioned_upper(/;"	d
__glibcxx_requires_partitioned_upper_pred	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_partitioned_upper_pred(/;"	d
__glibcxx_requires_sorted	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_sorted(/;"	d
__glibcxx_requires_sorted_pred	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_sorted_pred(/;"	d
__glibcxx_requires_sorted_set	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_sorted_set(/;"	d
__glibcxx_requires_sorted_set_pred	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_sorted_set_pred(/;"	d
__glibcxx_requires_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^#  define __glibcxx_requires_string(/;"	d
__glibcxx_requires_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_string(/;"	d
__glibcxx_requires_string_len	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^#  define __glibcxx_requires_string_len(/;"	d
__glibcxx_requires_string_len	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_string_len(/;"	d
__glibcxx_requires_subscript	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@assertions.h	/^# define __glibcxx_requires_subscript(/;"	d
__glibcxx_requires_valid_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^# define __glibcxx_requires_valid_range(/;"	d
__gnu_cxx	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	n
__gnu_cxx	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^namespace __gnu_cxx$/;"	n
__gnu_cxx	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	n
__gnu_cxx	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^namespace __gnu_cxx$/;"	n
__gnu_cxx	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@aligned_buffer.h	/^namespace __gnu_cxx$/;"	n
__gnu_cxx	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	n
__gnu_cxx	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@atomicity.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	n
__gnu_cxx	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	n
__gnu_cxx	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	n
__gnu_cxx	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@string_conversions.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	n
__gnu_cxx	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	n
__gnu_cxx	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^namespace __gnu_cxx$/;"	n
__gnu_cxx	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++locale.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	n
__gnu_cxx11_ieee128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^  inline namespace __gnu_cxx11_ieee128 { }$/;"	n	namespace:std
__gnu_cxx_ieee128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^  inline namespace __gnu_cxx_ieee128 { }$/;"	n	namespace:std
__gnu_cxx_ieee128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++locale.h	/^namespace __gnu_cxx_ieee128 {$/;"	n	namespace:std
__gnu_cxx_ldbl128	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^  inline namespace __gnu_cxx_ldbl128 { }$/;"	n	namespace:std
__gnu_debug	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^namespace __gnu_debug { struct _Safe_iterator_base; }$/;"	n
__gnu_debug	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^namespace __gnu_debug$/;"	n
__gnuc_va_list	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdarg.h	/^typedef __builtin_va_list __gnuc_va_list;$/;"	t	typeref:typename:__builtin_va_list
__gthread_active_p	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_active_p (void)$/;"	f	typeref:typename:int
__gthread_cond_broadcast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_cond_broadcast (__gthread_cond_t *__cond)$/;"	f	typeref:typename:int
__gthread_cond_destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_cond_destroy (__gthread_cond_t* __cond)$/;"	f	typeref:typename:int
__gthread_cond_init_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_cond_init_function (__gthread_cond_t *__cond)$/;"	f	typeref:typename:void
__gthread_cond_signal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_cond_signal (__gthread_cond_t *__cond)$/;"	f	typeref:typename:int
__gthread_cond_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^typedef pthread_cond_t __gthread_cond_t;$/;"	t	typeref:typename:pthread_cond_t
__gthread_cond_timedwait	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_cond_timedwait (__gthread_cond_t *__cond, __gthread_mutex_t *__mutex,$/;"	f	typeref:typename:int
__gthread_cond_wait	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_cond_wait (__gthread_cond_t *__cond, __gthread_mutex_t *__mutex)$/;"	f	typeref:typename:int
__gthread_cond_wait_recursive	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_cond_wait_recursive (__gthread_cond_t *__cond,$/;"	f	typeref:typename:int
__gthread_create	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_create (__gthread_t *__threadid, void *(*__func) (void*),$/;"	f	typeref:typename:int
__gthread_detach	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_detach (__gthread_t __threadid)$/;"	f	typeref:typename:int
__gthread_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_equal (__gthread_t __t1, __gthread_t __t2)$/;"	f	typeref:typename:int
__gthread_getspecific	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_getspecific (__gthread_key_t __key)$/;"	f	typeref:typename:void *
__gthread_join	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_join (__gthread_t __threadid, void **__value_ptr)$/;"	f	typeref:typename:int
__gthread_key_create	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_key_create (__gthread_key_t *__key, void (*__dtor) (void *))$/;"	f	typeref:typename:int
__gthread_key_delete	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_key_delete (__gthread_key_t __key)$/;"	f	typeref:typename:int
__gthread_key_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^typedef pthread_key_t __gthread_key_t;$/;"	t	typeref:typename:pthread_key_t
__gthread_mutex_destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_mutex_destroy (__gthread_mutex_t *__mutex)$/;"	f	typeref:typename:int
__gthread_mutex_init_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_mutex_init_function (__gthread_mutex_t *__mutex)$/;"	f	typeref:typename:void
__gthread_mutex_lock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_mutex_lock (__gthread_mutex_t *__mutex)$/;"	f	typeref:typename:int
__gthread_mutex_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^typedef pthread_mutex_t __gthread_mutex_t;$/;"	t	typeref:typename:pthread_mutex_t
__gthread_mutex_timedlock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_mutex_timedlock (__gthread_mutex_t *__mutex,$/;"	f	typeref:typename:int
__gthread_mutex_trylock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_mutex_trylock (__gthread_mutex_t *__mutex)$/;"	f	typeref:typename:int
__gthread_mutex_unlock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_mutex_unlock (__gthread_mutex_t *__mutex)$/;"	f	typeref:typename:int
__gthread_objc_close_thread_system	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_close_thread_system (void)$/;"	f	typeref:typename:int
__gthread_objc_condition_allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_condition_allocate (objc_condition_t condition)$/;"	f	typeref:typename:int
__gthread_objc_condition_broadcast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_condition_broadcast (objc_condition_t condition)$/;"	f	typeref:typename:int
__gthread_objc_condition_deallocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_condition_deallocate (objc_condition_t condition)$/;"	f	typeref:typename:int
__gthread_objc_condition_signal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_condition_signal (objc_condition_t condition)$/;"	f	typeref:typename:int
__gthread_objc_condition_wait	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_condition_wait (objc_condition_t condition, objc_mutex_t mutex)$/;"	f	typeref:typename:int
__gthread_objc_init_thread_system	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_init_thread_system (void)$/;"	f	typeref:typename:int
__gthread_objc_mutex_allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_mutex_allocate (objc_mutex_t mutex)$/;"	f	typeref:typename:int
__gthread_objc_mutex_deallocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_mutex_deallocate (objc_mutex_t mutex)$/;"	f	typeref:typename:int
__gthread_objc_mutex_lock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_mutex_lock (objc_mutex_t mutex)$/;"	f	typeref:typename:int
__gthread_objc_mutex_trylock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_mutex_trylock (objc_mutex_t mutex)$/;"	f	typeref:typename:int
__gthread_objc_mutex_unlock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_mutex_unlock (objc_mutex_t mutex)$/;"	f	typeref:typename:int
__gthread_objc_thread_detach	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_thread_detach (void (*func)(void *), void *arg)$/;"	f	typeref:typename:objc_thread_t
__gthread_objc_thread_exit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_thread_exit (void)$/;"	f	typeref:typename:int
__gthread_objc_thread_get_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_thread_get_data (void)$/;"	f	typeref:typename:void *
__gthread_objc_thread_get_priority	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_thread_get_priority (void)$/;"	f	typeref:typename:int
__gthread_objc_thread_id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_thread_id (void)$/;"	f	typeref:typename:objc_thread_t
__gthread_objc_thread_set_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_thread_set_data (void *value)$/;"	f	typeref:typename:int
__gthread_objc_thread_set_priority	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_thread_set_priority (int priority)$/;"	f	typeref:typename:int
__gthread_objc_thread_yield	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_objc_thread_yield (void)$/;"	f	typeref:typename:void
__gthread_once	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_once (__gthread_once_t *__once, void (*__func) (void))$/;"	f	typeref:typename:int
__gthread_once_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^typedef pthread_once_t __gthread_once_t;$/;"	t	typeref:typename:pthread_once_t
__gthread_recursive_mutex_destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_recursive_mutex_destroy (__gthread_recursive_mutex_t *__mutex)$/;"	f	typeref:typename:int
__gthread_recursive_mutex_init_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_recursive_mutex_init_function (__gthread_recursive_mutex_t *__mutex)$/;"	f	typeref:typename:int
__gthread_recursive_mutex_lock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_recursive_mutex_lock (__gthread_recursive_mutex_t *__mutex)$/;"	f	typeref:typename:int
__gthread_recursive_mutex_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^typedef pthread_mutex_t __gthread_recursive_mutex_t;$/;"	t	typeref:typename:pthread_mutex_t
__gthread_recursive_mutex_timedlock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_recursive_mutex_timedlock (__gthread_recursive_mutex_t *__mutex,$/;"	f	typeref:typename:int
__gthread_recursive_mutex_trylock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_recursive_mutex_trylock (__gthread_recursive_mutex_t *__mutex)$/;"	f	typeref:typename:int
__gthread_recursive_mutex_unlock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *__mutex)$/;"	f	typeref:typename:int
__gthread_self	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_self (void)$/;"	f	typeref:typename:__gthread_t
__gthread_setspecific	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_setspecific (__gthread_key_t __key, const void *__ptr)$/;"	f	typeref:typename:int
__gthread_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^typedef pthread_t __gthread_t;$/;"	t	typeref:typename:pthread_t
__gthread_time_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^typedef struct timespec __gthread_time_t;$/;"	t	typeref:struct:timespec
__gthread_trigger	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_trigger (void)$/;"	f	typeref:typename:void
__gthread_yield	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^__gthread_yield (void)$/;"	f	typeref:typename:int
__gthrw	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^#define __gthrw(name) __gthrw2(__gthrw_/;"	d
__gthrw2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^# define __gthrw2(/;"	d
__gthrw_	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^# define __gthrw_(/;"	d
__gthrw_	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^# define __gthrw_(name) __gthrw_ /;"	d
__gthrw_pragma	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^#  define __gthrw_pragma(/;"	d
__guard	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@cxxabi_tweaks.h	/^  __extension__ typedef int __guard __attribute__((mode (__DI__)));$/;"	t	namespace:__cxxabiv1	typeref:typename:int
__has_construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	using __has_construct$/;"	t	struct:std::allocator_traits	typeref:typename:__construct_helper<_Tp,_Args...>::type
__has_esft_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	struct __has_esft_base$/;"	s	class:std::__shared_ptr
__has_esft_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	struct __has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>$/;"	s	class:std::__shared_ptr
__has_is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct __has_is_transparent$/;"	s	namespace:std
__has_is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct __has_is_transparent<_Func, _SfinaeType,$/;"	s	namespace:std
__has_is_transparent_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    using __has_is_transparent_t$/;"	t	namespace:std	typeref:typename:__has_is_transparent<_Func,_SfinaeType>::type
__hash_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^    struct __hash_base$/;"	s	namespace:std
__hash_combine	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^      __hash_combine(const _Tp& __val, size_t __hash)$/;"	f	struct:std::_Fnv_hash_impl	typeref:typename:size_t
__hash_combine	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^      __hash_combine(const _Tp& __val, size_t __hash)$/;"	f	struct:std::_Hash_impl	typeref:typename:size_t
__hash_enum	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^    struct __hash_enum$/;"	s	namespace:std
__hash_enum	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^    struct __hash_enum<_Tp, true> : public __hash_base<size_t, _Tp>$/;"	s	namespace:std
__have_pthread_attr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^# define __have_pthread_attr_t /;"	d
__heap_select	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __heap_select(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__high	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@atomic_wide_counter.h	/^    unsigned int __high;$/;"	m	struct:__anon4e7740d1010a::__anon4e7740d10208	typeref:typename:unsigned int
__hwm_bit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__hwm_bit = 2,$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__id_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __ID_T_TYPE __id_t;		\/* General type for IDs.  *\/$/;"	v	typeref:typename:__STD_TYPE __ID_T_TYPE
__id_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^# define __id_t_defined$/;"	d
__if_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^      typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;$/;"	t	struct:__gnu_cxx::__add_unsigned	typeref:typename:__enable_if<std::__is_integer<_Tp>::__value,_Tp>
__if_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^      typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;$/;"	t	struct:__gnu_cxx::__remove_unsigned	typeref:typename:__enable_if<std::__is_integer<_Tp>::__value,_Tp>
__includes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __includes(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__incomplete_class_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__incomplete_class_mask = 0x10,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__incomplete_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__incomplete_mask = 0x8,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__init	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    unsigned short int __init;	\/* Flag for initializing.  *\/$/;"	m	struct:drand48_data	typeref:typename:unsigned short int
__inline	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __inline	/;"	d
__ino64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __INO64_T_TYPE __ino64_t;	\/* Type of file serial numbers (LFS).*\/$/;"	v	typeref:typename:__STD_TYPE __INO64_T_TYPE
__ino64_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^# define __ino64_t_defined$/;"	d
__ino_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __INO_T_TYPE __ino_t;	\/* Type of file serial numbers.  *\/$/;"	v	typeref:typename:__STD_TYPE __INO_T_TYPE
__ino_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^# define __ino_t_defined$/;"	d
__inplace_merge	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __inplace_merge(_BidirectionalIterator __first,$/;"	f	namespace:std	typeref:typename:void
__inplace_stable_sort	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __inplace_stable_sort(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:void
__insertion_sort	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __insertion_sort(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__int16_c_suffix	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define __int16_c_suffix /;"	d
__int16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef signed short int __int16_t;$/;"	t	typeref:typename:signed short int
__int32_c_suffix	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define __int32_c_suffix /;"	d
__int32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef signed int __int32_t;$/;"	t	typeref:typename:signed int
__int64_c_suffix	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define __int64_c_suffix /;"	d
__int64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__extension__ typedef signed long long int __int64_t;$/;"	t	typeref:typename:signed long long int
__int64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef signed long int __int64_t;$/;"	t	typeref:typename:signed long int
__int8_c_suffix	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define  __int8_c_suffix /;"	d
__int8_c_suffix	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#  define __int8_c_suffix /;"	d
__int8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef signed char __int8_t;$/;"	t	typeref:typename:signed char
__int8_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __int8_t_defined$/;"	d
__int_c	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define __int_c(v, suffix) __int_c_/;"	d
__int_c_join	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define __int_c_join(/;"	d
__int_least16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef __int16_t __int_least16_t;$/;"	t	typeref:typename:__int16_t
__int_least16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __int_least16_t /;"	d
__int_least32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef __int32_t __int_least32_t;$/;"	t	typeref:typename:__int32_t
__int_least32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __int_least32_t /;"	d
__int_least64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef __int64_t __int_least64_t;$/;"	t	typeref:typename:__int64_t
__int_least64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __int_least64_t /;"	d
__int_least8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef __int8_t __int_least8_t;$/;"	t	typeref:typename:__int8_t
__int_least8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __int_least8_t /;"	d
__int_n_cs_precedes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char __int_n_cs_precedes;$/;"	m	struct:lconv	typeref:typename:char
__int_n_sep_by_space	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char __int_n_sep_by_space;$/;"	m	struct:lconv	typeref:typename:char
__int_n_sign_posn	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char __int_n_sign_posn;$/;"	m	struct:lconv	typeref:typename:char
__int_p_cs_precedes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char __int_p_cs_precedes;$/;"	m	struct:lconv	typeref:typename:char
__int_p_sep_by_space	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char __int_p_sep_by_space;$/;"	m	struct:lconv	typeref:typename:char
__int_p_sign_posn	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char __int_p_sign_posn;$/;"	m	struct:lconv	typeref:typename:char
__int_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    using __int_traits = __numeric_traits_integer<_Tp>;$/;"	t	namespace:__gnu_cxx	typeref:typename:__numeric_traits_integer<_Tp>
__int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      typedef _ITp 	__int_type;$/;"	t	struct:std::__atomic_base	typeref:typename:_ITp
__integer_to_chars_is_unsigned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@charconv.h	/^    constexpr bool __integer_to_chars_is_unsigned$/;"	v	namespace:std::__detail	typeref:typename:bool
__internal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^namespace __internal$/;"	n	namespace:__pstl
__intmax_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__extension__ typedef long long int __intmax_t;$/;"	t	typeref:typename:long long int
__intmax_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef long int __intmax_t;$/;"	t	typeref:typename:long int
__intptr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __SWORD_TYPE __intptr_t;$/;"	v	typeref:typename:__STD_TYPE __SWORD_TYPE
__intptr_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^#  define __intptr_t_defined$/;"	d
__intptr_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define __intptr_t_defined$/;"	d
__introselect	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__introsort_loop	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __introsort_loop(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__invalid_make_unique_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    using __invalid_make_unique_t = typename _MakeUniq<_Tp>::__invalid_type;$/;"	t	namespace:std::__detail	typeref:typename:_MakeUniq<_Tp>::__invalid_type
__invalid_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    { struct __invalid_type { }; };$/;"	s	struct:std::__detail::_MakeUniq
__invfwd	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^    __invfwd(typename remove_reference<_Tp>::type& __t) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION _Up &&
__invoke	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^    __invoke(_Callable&& __fn, _Args&&... __args)$/;"	f	namespace:std	typeref:typename:__invoke_result<_Callable,_Args...>::type
__invoke_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^    __invoke_impl(__invoke_memfun_deref, _MemFun&& __f, _Tp&& __t,$/;"	f	namespace:std	typeref:typename:_Res
__invoke_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^    __invoke_impl(__invoke_memfun_ref, _MemFun&& __f, _Tp&& __t,$/;"	f	namespace:std	typeref:typename:_Res
__invoke_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^    __invoke_impl(__invoke_memobj_deref, _MemPtr&& __f, _Tp&& __t)$/;"	f	namespace:std	typeref:typename:_Res
__invoke_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^    __invoke_impl(__invoke_memobj_ref, _MemPtr&& __f, _Tp&& __t)$/;"	f	namespace:std	typeref:typename:_Res
__invoke_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)$/;"	f	namespace:std	typeref:typename:_Res
__invoke_r	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^    __invoke_r(_Callable&& __fn, _Args&&... __args)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR __enable_if_t<is_void<_Res>::value,_Res>
__invoke_r	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^    __invoke_r(_Callable&& __fn, _Args&&... __args)$/;"	f	namespace:std	typeref:typename:__enable_if_t<!is_void<_Res>::value,_Res>
__invoke_r	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^    __invoke_r(_Callable&& __fn, _Args&&... __args)$/;"	f	namespace:std	typeref:typename:enable_if_t<is_invocable_r_v<_Res,_Callable,_Args...>,_Res>
__ios_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ostream_insert.h	/^      typedef typename __ostream_type::ios_base    __ios_base;$/;"	t	function:std::__ostream_fill	typeref:typename:__ostream_type::ios_base
__ios_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ostream_insert.h	/^      typedef typename __ostream_type::ios_base    __ios_base;$/;"	t	function:std::__ostream_insert	typeref:typename:__ostream_type::ios_base
__ios_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ostream_insert.h	/^      typedef typename __ostream_type::ios_base    __ios_base;$/;"	t	function:std::__ostream_write	typeref:typename:__ostream_type::ios_base
__is_alloc_insertable_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    struct __is_alloc_insertable_impl$/;"	s	namespace:std
__is_alloc_insertable_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    struct __is_alloc_insertable_impl<_Alloc, _Tp, _ValueT,$/;"	s	namespace:std
__is_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    struct __is_allocator : false_type { };$/;"	s	namespace:std
__is_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    struct __is_allocator<_Alloc,$/;"	s	namespace:std
__is_arithmetic	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_arithmetic$/;"	s	namespace:std
__is_bitwise_relocatable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^    struct __is_bitwise_relocatable<_GLIBCXX_STD_C::deque<_Tp>>$/;"	s	namespace:std
__is_bitwise_relocatable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    struct __is_bitwise_relocatable$/;"	s	namespace:std
__is_byte	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_byte$/;"	s	namespace:std
__is_byte	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_byte<byte>$/;"	s	namespace:std
__is_byte	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_byte<char8_t>$/;"	s	namespace:std
__is_byte	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_byte<char>$/;"	s	namespace:std
__is_byte	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_byte<signed char>$/;"	s	namespace:std
__is_byte	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_byte<unsigned char>$/;"	s	namespace:std
__is_char	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_char$/;"	s	namespace:std
__is_char	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_char<char>$/;"	s	namespace:std
__is_char	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_char<wchar_t>$/;"	s	namespace:std
__is_const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      inline constexpr bool __is_const_iterator = false;$/;"	v	namespace:std::__detail	typeref:typename:bool
__is_constant_evaluated	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^  __is_constant_evaluated() _GLIBCXX_NOEXCEPT$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR bool
__is_contiguous_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    struct __is_contiguous_iter : false_type { };$/;"	s	namespace:std::__detail
__is_contiguous_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    struct __is_contiguous_iter<_Tp*> : true_type { };$/;"	s	namespace:std::__detail
__is_contiguous_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    struct __is_contiguous_iter<__gnu_cxx::__normal_iterator<_Tp*, _Cont>>$/;"	s	namespace:std::__detail
__is_copy_insertable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    struct __is_copy_insertable$/;"	s	namespace:std
__is_copy_insertable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    struct __is_copy_insertable<allocator<_Tp>>$/;"	s	namespace:std
__is_custom_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^      using __is_custom_pointer$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:std::__and_<std::is_same<pointer,_Ptr>,std::__not_<std::is_pointer<_Ptr>>>
__is_derived_Tp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	using __is_derived_Tp$/;"	t	class:std::unique_ptr	typeref:typename:__and_<is_base_of<_Tp,_Up>,__not_<is_same<__remove_cv_t<_Tp>,__remove_cv_t<_Up>>>>
__is_duration	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      struct __is_duration$/;"	s	namespace:std::chrono
__is_duration	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      struct __is_duration<duration<_Rep, _Period>>$/;"	s	namespace:std::chrono
__is_duration_v	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      inline constexpr bool __is_duration_v = false;$/;"	v	namespace:std::chrono	typeref:typename:bool
__is_erased_or_convertible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    using __is_erased_or_convertible$/;"	t	namespace:std	typeref:typename:__or_<is_convertible<_Alloc,_Tp>,is_same<_Tp,__erased_type>>
__is_fast_hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    struct __is_fast_hash<hash<basic_string<_CharT, _Traits, _Alloc>>>$/;"	s	namespace:std
__is_fast_hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    struct __is_fast_hash<hash<basic_string<wchar_t, char_traits<wchar_t>,$/;"	s	namespace:std
__is_fast_hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  template<> struct __is_fast_hash<hash<string>> : std::false_type { };$/;"	s	namespace:std
__is_fast_hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  template<> struct __is_fast_hash<hash<u16string>> : std::false_type { };$/;"	s	namespace:std
__is_fast_hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  template<> struct __is_fast_hash<hash<u32string>> : std::false_type { };$/;"	s	namespace:std
__is_fast_hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  template<> struct __is_fast_hash<hash<u8string>> : std::false_type { };$/;"	s	namespace:std
__is_fast_hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  template<> struct __is_fast_hash<hash<wstring>> : std::false_type { };$/;"	s	namespace:std
__is_fast_hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^    struct __is_fast_hash : public std::true_type$/;"	s	namespace:std
__is_fast_hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^    struct __is_fast_hash<hash<long double>> : public std::false_type$/;"	s	namespace:std
__is_float	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  using __is_float = treat_as_floating_point<_Rep2>;$/;"	t	class:std::chrono::duration	typeref:typename:treat_as_floating_point<_Rep2>
__is_floating	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_floating$/;"	s	namespace:std
__is_floating	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_floating<_Float128>$/;"	s	namespace:std
__is_floating	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_floating<_Float16>$/;"	s	namespace:std
__is_floating	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_floating<_Float32>$/;"	s	namespace:std
__is_floating	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_floating<_Float64>$/;"	s	namespace:std
__is_floating	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_floating<__gnu_cxx::__bfloat16_t>$/;"	s	namespace:std
__is_floating	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_floating<double>$/;"	s	namespace:std
__is_floating	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_floating<float>$/;"	s	namespace:std
__is_floating	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_floating<long double>$/;"	s	namespace:std
__is_harmonic	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  using __is_harmonic$/;"	t	class:std::chrono::duration	typeref:typename:__bool_constant<__divide<_Period2,_Period>::den==1>
__is_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    __is_heap(_RandomAccessIterator __first, _Compare __comp, _Distance __n)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__is_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    __is_heap(_RandomAccessIterator __first, _Distance __n)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__is_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__is_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__is_heap_until	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    __is_heap_until(_RandomAccessIterator __first, _Distance __n,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION _GLIBCXX20_CONSTEXPR _Distance
__is_in_place_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    using __is_in_place_type = bool_constant<__is_in_place_type_v<_Tp>>;$/;"	t	namespace:std	typeref:typename:bool_constant<__is_in_place_type_v<_Tp>>
__is_in_place_type_v	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    inline constexpr bool __is_in_place_type_v = false;$/;"	v	namespace:std	typeref:typename:bool
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer$/;"	s	namespace:std
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer<bool>$/;"	s	namespace:std
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer<char16_t>$/;"	s	namespace:std
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer<char32_t>$/;"	s	namespace:std
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer<char8_t>$/;"	s	namespace:std
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer<char>$/;"	s	namespace:std
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer<int>$/;"	s	namespace:std
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer<long long>$/;"	s	namespace:std
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer<long>$/;"	s	namespace:std
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer<short>$/;"	s	namespace:std
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer<signed char>$/;"	s	namespace:std
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer<unsigned char>$/;"	s	namespace:std
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer<unsigned int>$/;"	s	namespace:std
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer<unsigned long long>$/;"	s	namespace:std
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer<unsigned long>$/;"	s	namespace:std
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer<unsigned short>$/;"	s	namespace:std
__is_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_integer<wchar_t>$/;"	s	namespace:std
__is_integer_nonstrict	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    struct __is_integer_nonstrict$/;"	s	namespace:__gnu_cxx
__is_iterator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef istreambuf_iterator<_CharT>		   __is_iterator_type;$/;"	t	function:std::__copy_move_a2	typeref:typename:istreambuf_iterator<_CharT>
__is_iterator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef istreambuf_iterator<_CharT>		   __is_iterator_type;$/;"	t	function:std::advance	typeref:typename:istreambuf_iterator<_CharT>
__is_iterator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef istreambuf_iterator<_CharT>		   __is_iterator_type;$/;"	t	function:std::find	typeref:typename:istreambuf_iterator<_CharT>
__is_location_invariant	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    struct __is_location_invariant$/;"	s	namespace:std
__is_memcmp_ordered	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_memcmp_ordered$/;"	s	namespace:std
__is_memcmp_ordered	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_memcmp_ordered<_Tp, false>$/;"	s	namespace:std
__is_memcmp_ordered	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_memcmp_ordered<std::byte, false>$/;"	s	namespace:std
__is_memcmp_ordered_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_memcmp_ordered_with$/;"	s	namespace:std
__is_memcmp_ordered_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_memcmp_ordered_with<_Tp, _Up, false>$/;"	s	namespace:std
__is_memcmp_ordered_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_memcmp_ordered_with<_Tp, std::byte, _SameSize>$/;"	s	namespace:std
__is_memcmp_ordered_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_memcmp_ordered_with<std::byte, _Up, _SameSize>$/;"	s	namespace:std
__is_memcmp_ordered_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_memcmp_ordered_with<std::byte, std::byte, true>$/;"	s	namespace:std
__is_move_insertable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    struct __is_move_insertable$/;"	s	namespace:std
__is_move_insertable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    struct __is_move_insertable<allocator<_Tp>>$/;"	s	namespace:std
__is_move_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_move_iterator$/;"	s	namespace:std
__is_move_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    struct __is_move_iterator<move_iterator<_Iterator> >$/;"	s	namespace:std
__is_move_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    struct __is_move_iterator<reverse_iterator<_Iterator> >$/;"	s	namespace:std
__is_nonvolatile_trivially_copyable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_nonvolatile_trivially_copyable$/;"	s	namespace:std
__is_nonvolatile_trivially_copyable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_nonvolatile_trivially_copyable<volatile _Tp>$/;"	s	namespace:std
__is_nothrow_uses_allocator_constructible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    struct __is_nothrow_uses_allocator_constructible$/;"	s	namespace:std
__is_nothrow_uses_allocator_constructible_v	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    __is_nothrow_uses_allocator_constructible_v =$/;"	v	namespace:std	typeref:typename:_GLIBCXX17_INLINE bool
__is_null_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    __is_null_pointer(_Type)$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_CONSTEXPR bool
__is_null_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    __is_null_pointer(_Type* __ptr)$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_CONSTEXPR bool
__is_null_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^  __is_null_pointer(std::nullptr_t)$/;"	f	namespace:__gnu_cxx	typeref:typename:bool
__is_pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    inline constexpr bool __is_pair = false;$/;"	v	namespace:std	typeref:typename:bool
__is_permutation	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__is_permutation	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__is_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_pointer$/;"	s	namespace:std
__is_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_pointer<_Tp*>$/;"	s	namespace:std
__is_public_p	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    __is_public_p() const$/;"	f	class:__cxxabiv1::__base_class_type_info	typeref:typename:bool
__is_random_access_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^    struct __is_random_access_iter$/;"	s	namespace:std
__is_scalar	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_scalar$/;"	s	namespace:std
__is_shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    static constexpr bool __is_shared_ptr = false;$/;"	v	namespace:std	typeref:typename:bool
__is_signed	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^      static const bool __is_signed = (_Value)(-1) < 0;$/;"	m	struct:__gnu_cxx::__numeric_traits_integer	typeref:typename:const bool
__is_signed	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^      static const bool __is_signed = true;$/;"	m	struct:__gnu_cxx::__numeric_traits_floating	typeref:typename:const bool
__is_signed	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    const bool __numeric_traits_floating<_Value>::__is_signed;$/;"	m	class:__gnu_cxx::__numeric_traits_floating<_Value>	typeref:typename:const bool
__is_signed	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    const bool __numeric_traits_integer<_Value>::__is_signed;$/;"	m	class:__gnu_cxx::__numeric_traits_integer<_Value>	typeref:typename:const bool
__is_single_threaded	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@atomicity.h	/^  __is_single_threaded() _GLIBCXX_NOTHROW$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION bool
__is_sorted_until	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __is_sorted_until(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__is_time_point_v	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      inline constexpr bool __is_time_point_v = false;$/;"	v	namespace:std::chrono	typeref:typename:bool
__is_tuple_like_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    struct __is_tuple_like_impl<pair<_T1, _T2>> : true_type$/;"	s	namespace:std
__is_uses_allocator_constructible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    struct __is_uses_allocator_constructible$/;"	s	namespace:std
__is_uses_allocator_constructible_v	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    _GLIBCXX17_INLINE constexpr bool __is_uses_allocator_constructible_v =$/;"	v	namespace:std	typeref:typename:_GLIBCXX17_INLINE bool
__is_uses_allocator_predicate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    struct __is_uses_allocator_predicate$/;"	s	namespace:std
__is_valid_cmpexch_failure_order	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  __is_valid_cmpexch_failure_order(memory_order __m) noexcept$/;"	f	namespace:std	typeref:typename:bool
__is_virtual_p	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    __is_virtual_p() const$/;"	f	class:__cxxabiv1::__base_class_type_info	typeref:typename:bool
__is_void	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_void$/;"	s	namespace:std
__is_void	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __is_void<void>$/;"	s	namespace:std
__isalnum_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define __isalnum_l(/;"	d
__isalpha_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define __isalpha_l(/;"	d
__isascii	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#define	__isascii(/;"	d
__isascii_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#   define __isascii_l(/;"	d
__isblank_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define __isblank_l(/;"	d
__iscntrl_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define __iscntrl_l(/;"	d
__isctype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^# define __isctype(/;"	d
__isctype_f	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^# define __isctype_f(/;"	d
__isctype_f	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^__isctype_f (alpha)$/;"	f	typeref:typename:alnum
__isctype_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define __isctype_l(/;"	d
__isdigit_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define __isdigit_l(/;"	d
__isgraph_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define __isgraph_l(/;"	d
__isleap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#define __isleap(/;"	d
__islower_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define __islower_l(/;"	d
__isprint_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define __isprint_l(/;"	d
__ispunct_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define __ispunct_l(/;"	d
__isspace_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define __isspace_l(/;"	d
__isupper_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define __isupper_l(/;"	d
__isxdigit_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define __isxdigit_l(/;"	d
__iter_comp_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    __iter_comp_iter(_Compare __comp)$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX14_CONSTEXPR _Iter_comp_iter<_Compare>
__iter_comp_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    __iter_comp_iter(_Iter_comp_iter<_Compare> __comp, _Iterator __it)$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX20_CONSTEXPR _Iter_comp_to_iter<_Compare,_Iterator>
__iter_comp_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    __iter_comp_iter(_Iter_equal_to_iter, _Iterator __it)$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX20_CONSTEXPR _Iter_equals_iter<_Iterator>
__iter_comp_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    __iter_comp_val(_Compare __comp)$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX20_CONSTEXPR _Iter_comp_val<_Compare>
__iter_comp_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    __iter_comp_val(_Compare __comp, _Value &__val)$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_Iter_comp_to_val<_Compare,_Value> _GLIBCXX20_CONSTEXPR
__iter_comp_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    __iter_comp_val(_Iter_comp_iter<_Compare> __comp)$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX20_CONSTEXPR _Iter_comp_val<_Compare>
__iter_comp_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^  __iter_comp_val(_Iter_equal_to_iter)$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX20_CONSTEXPR _Iter_equal_to_val
__iter_comp_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^  __iter_comp_val(_Iter_less_iter)$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX20_CONSTEXPR _Iter_less_val
__iter_const_rvalue_reference_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using __iter_const_rvalue_reference_t$/;"	t	namespace:std::__detail	typeref:typename:common_reference_t<const iter_value_t<_It> &&,iter_rvalue_reference_t<_It>>
__iter_equal_to_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^  __iter_equal_to_iter()$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX20_CONSTEXPR _Iter_equal_to_iter
__iter_equal_to_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^  __iter_equal_to_val()$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX20_CONSTEXPR _Iter_equal_to_val
__iter_equals_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    __iter_equals_val(_Value& __val)$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX20_CONSTEXPR _Iter_equals_val<_Value>
__iter_key_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    using __iter_key_t = remove_const_t<$/;"	t	namespace:std	typeref:typename:remove_const_t<typename iterator_traits<_InputIterator>::value_type::first_type>
__iter_less_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^  __iter_less_iter()$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX14_CONSTEXPR _Iter_less_iter
__iter_less_val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^  __iter_less_val()$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX20_CONSTEXPR _Iter_less_val
__iter_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __iter_swap$/;"	s	namespace:std
__iter_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __iter_swap<true>$/;"	s	namespace:std
__iter_to_alloc_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    using __iter_to_alloc_t$/;"	t	namespace:std	typeref:typename:pair<const __iter_key_t<_InputIterator>,__iter_val_t<_InputIterator>>
__iter_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef iterator_traits<_BiIter>			__iter_traits;$/;"	t	class:std::sub_match	typeref:typename:iterator_traits<_BiIter>
__iter_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef std::iterator_traits<_Bi_iter>   	   	   __iter_traits;$/;"	t	class:std::match_results	typeref:typename:std::iterator_traits<_Bi_iter>
__iter_val_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    using __iter_val_t$/;"	t	namespace:std	typeref:typename:iterator_traits<_InputIterator>::value_type::second_type
__iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^    __iterator_category(const _Iter&)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR typename iterator_traits<_Iter>::iterator_category
__iterator_category_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^    using __iterator_category_t$/;"	t	namespace:std	typeref:typename:iterator_traits<_Iter>::iterator_category
__iterator_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^    struct __iterator_traits { };$/;"	s	namespace:std
__iterator_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^    struct __iterator_traits<_Iterator,$/;"	s	namespace:std
__itimerspec_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_itimerspec.h	/^#define __itimerspec_defined /;"	d
__jmp_buf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@setjmp.h	/^__extension__ typedef long long int __jmp_buf[8];$/;"	t	typeref:typename:long long int[8]
__jmp_buf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@setjmp.h	/^typedef int __jmp_buf[6];$/;"	t	typeref:typename:int[6]
__jmp_buf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@setjmp.h	/^typedef long int __jmp_buf[8];$/;"	t	typeref:typename:long int[8]
__jmp_buf_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct___jmp_buf_tag.h	/^struct __jmp_buf_tag$/;"	s
__jmp_buf_tag_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct___jmp_buf_tag.h	/^#define	__jmp_buf_tag_defined /;"	d
__jmpbuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct___jmp_buf_tag.h	/^    __jmp_buf __jmpbuf;		\/* Calling environment.  *\/$/;"	m	struct:__jmp_buf_tag	typeref:typename:__jmp_buf
__key_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __KEY_T_TYPE __key_t;	\/* Type of an IPC key.  *\/$/;"	v	typeref:typename:__STD_TYPE __KEY_T_TYPE
__key_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^# define __key_t_defined$/;"	d
__kind	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^  int __kind;$/;"	m	struct:__pthread_mutex_s	typeref:typename:int
__lc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	__lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2)$/;"	f	struct:std::__lexicographical_compare	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__lc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	__lc(const _Tp* __first1, const _Tp* __last1,$/;"	f	struct:std::__lexicographical_compare	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__lc_rai	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __lc_rai$/;"	s	namespace:std
__lc_rai	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __lc_rai<random_access_iterator_tag, random_access_iterator_tag>$/;"	s	namespace:std
__ldiv_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^# define __ldiv_t_defined	/;"	d
__lexicographical_compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __lexicographical_compare$/;"	s	namespace:std
__lexicographical_compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    struct __lexicographical_compare<true>$/;"	s	namespace:std
__lexicographical_compare_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __lexicographical_compare_aux(_II1 __first1, _II1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__lexicographical_compare_aux1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __lexicographical_compare_aux1(_II1 __first1, _II1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__lexicographical_compare_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __lexicographical_compare_impl(_II1 __first1, _II1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__lg	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __lg(_Tp __n)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR _Tp
__limits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  using __limits = __gnu_cxx::__int_traits<int>;$/;"	t	function:std::sub_match::__string_view::compare	typeref:typename:__gnu_cxx::__int_traits<int>
__list	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^    __pthread_slist_t __list;$/;"	m	union:__pthread_mutex_s::__anone4492d64010a	typeref:typename:__pthread_slist_t
__list	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^  __pthread_list_t __list;$/;"	m	struct:__pthread_mutex_s	typeref:typename:__pthread_list_t
__lldiv_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^# define __lldiv_t_defined	/;"	d
__locale_struct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__locale_t.h	/^struct __locale_struct$/;"	s
__locale_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__locale_t.h	/^typedef struct __locale_struct *__locale_t;$/;"	t	typeref:struct:__locale_struct *
__locales	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__locale_t.h	/^  struct __locale_data *__locales[13]; \/* 13 = __LC_LAST. *\/$/;"	m	struct:__locale_struct	typeref:struct:__locale_data * [13]
__lock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^  int __lock;$/;"	m	struct:__pthread_mutex_s	typeref:typename:int
__loff_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef __off64_t __loff_t;	\/* Type of file sizes and offsets (LFS).  *\/$/;"	t	typeref:typename:__off64_t
__low	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@atomic_wide_counter.h	/^    unsigned int __low;$/;"	m	struct:__anon4e7740d1010a::__anon4e7740d10208	typeref:typename:unsigned int
__lower_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __lower_bound(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__make_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    __make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__make_move_if_noexcept_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    __make_move_if_noexcept_iterator(_Iterator __i)$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR _ReturnType
__make_move_if_noexcept_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    __make_move_if_noexcept_iterator(_Tp* __i)$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR _ReturnType
__make_reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    __make_reverse_iterator(_Iterator __i)$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
__make_shared	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    __make_shared(_Args&&... __args)$/;"	f	namespace:std	typeref:typename:__shared_ptr<_Tp,_Lp>
__make_shared_arrN_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    __make_shared_arrN_tag(const _Alloc& __a = _Alloc()) noexcept$/;"	f	namespace:std	typeref:typename:auto
__make_shared_arr_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    __make_shared_arr_tag(size_t __n, const _Alloc& __a = _Alloc()) noexcept$/;"	f	namespace:std	typeref:typename:auto
__mask_was_saved	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct___jmp_buf_tag.h	/^    int __mask_was_saved;	\/* Saved the signal mask?  *\/$/;"	m	struct:__jmp_buf_tag	typeref:typename:int
__mask_was_saved	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  int __mask_was_saved;$/;"	m	struct:__cancel_jmp_buf_tag	typeref:typename:int
__masks	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    enum __masks$/;"	g	class:__cxxabiv1::__pbase_type_info
__max	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^      static const _Value __max = __is_signed$/;"	m	struct:__gnu_cxx::__numeric_traits_integer	typeref:typename:const _Value
__max	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    const _Value __numeric_traits_integer<_Value>::__max;$/;"	m	class:__gnu_cxx::__numeric_traits_integer<_Value>	typeref:typename:const _Value
__max_digits10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^      static const int __max_digits10 = 33;$/;"	m	struct:__gnu_cxx::__numeric_traits_floating	typeref:typename:const int
__max_digits10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^      static const int __max_digits10 = 36;$/;"	m	struct:__gnu_cxx::__numeric_traits_floating	typeref:typename:const int
__max_digits10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^      static const int __max_digits10 = __glibcxx_max_digits10(_Value);$/;"	m	struct:__gnu_cxx::__numeric_traits_floating	typeref:typename:const int
__max_digits10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    const int __numeric_traits_floating<_Value>::__max_digits10;$/;"	m	class:__gnu_cxx::__numeric_traits_floating<_Value>	typeref:typename:const int
__max_element	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __max_element(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR _ForwardIterator
__max_exponent10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^      static const int __max_exponent10 = 308;$/;"	m	struct:__gnu_cxx::__numeric_traits_floating	typeref:typename:const int
__max_exponent10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^      static const int __max_exponent10 = 4932;$/;"	m	struct:__gnu_cxx::__numeric_traits_floating	typeref:typename:const int
__max_exponent10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^      static const int __max_exponent10 = __glibcxx_max_exponent10(_Value);$/;"	m	struct:__gnu_cxx::__numeric_traits_floating	typeref:typename:const int
__max_exponent10	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    const int __numeric_traits_floating<_Value>::__max_exponent10;$/;"	m	class:__gnu_cxx::__numeric_traits_floating<_Value>	typeref:typename:const int
__maybe_has_padding	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __maybe_has_padding()$/;"	f	namespace:std::__atomic_impl	typeref:typename:bool
__maybe_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^      using __maybe_type$/;"	t	struct:std::_Mem_fn_traits_base	typeref:typename:_Maybe_unary_or_binary_function<_Res,_Class *,_ArgTypes...>
__mbstate_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__mbstate_t.h	/^} __mbstate_t;$/;"	t	typeref:struct:__anon7b04dba30108
__mbstate_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@mbstate_t.h	/^#define __mbstate_t_defined /;"	d
__memcmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION _GLIBCXX14_CONSTEXPR int
__memcmpable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __memcmpable$/;"	s	namespace:std
__memcmpable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __memcmpable<_Tp*, _Tp*>$/;"	s	namespace:std
__memcmpable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __memcmpable<_Tp*, const _Tp*>$/;"	s	namespace:std
__memcmpable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __memcmpable<const _Tp*, _Tp*>$/;"	s	namespace:std
__memcpyable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __memcpyable$/;"	s	namespace:std
__memcpyable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __memcpyable<_Tp*, _Tp*>$/;"	s	namespace:std
__memcpyable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __memcpyable<_Tp*, const _Tp*>$/;"	s	namespace:std
__memory_order_hle_acquire	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __memory_order_hle_acquire   = 0x10000,$/;"	e	enum:std::__memory_order_modifier
__memory_order_hle_release	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __memory_order_hle_release   = 0x20000$/;"	e	enum:std::__memory_order_modifier
__memory_order_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __memory_order_mask          = 0x0ffff,$/;"	e	enum:std::__memory_order_modifier
__memory_order_modifier	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  enum __memory_order_modifier$/;"	g	namespace:std
__memory_order_modifier_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __memory_order_modifier_mask = 0xffff0000,$/;"	e	enum:std::__memory_order_modifier
__merge	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __merge(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
__merge_adaptive	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __merge_adaptive(_BidirectionalIterator __first,$/;"	f	namespace:std	typeref:typename:void
__merge_adaptive_resize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __merge_adaptive_resize(_BidirectionalIterator __first,$/;"	f	namespace:std	typeref:typename:void
__merge_sort_loop	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __merge_sort_loop(_RandomAccessIterator1 __first,$/;"	f	namespace:std	typeref:typename:void
__merge_sort_with_buffer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __merge_sort_with_buffer(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:void
__merge_without_buffer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __merge_without_buffer(_BidirectionalIterator __first,$/;"	f	namespace:std	typeref:typename:void
__min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^      static const _Value __min = __is_signed ? -__max - 1 : (_Value)0;$/;"	m	struct:__gnu_cxx::__numeric_traits_integer	typeref:typename:const _Value
__min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    const _Value __numeric_traits_integer<_Value>::__min;$/;"	m	class:__gnu_cxx::__numeric_traits_integer<_Value>	typeref:typename:const _Value
__min_cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __min_cmp(_Tp __x, _Tp __y)$/;"	f	namespace:std	typeref:typename:auto
__min_element	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __min_element(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR _ForwardIterator
__minmax_element	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __minmax_element(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR pair<_ForwardIterator,_ForwardIterator>
__mismatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __mismatch(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR pair<_InputIterator1,_InputIterator2>
__miter_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    __miter_base(_Iterator __it)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _Iterator
__miter_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    __miter_base(move_iterator<_Iterator> __it)$/;"	f	namespace:std	typeref:typename:decltype(__miter_base (__it.base ()))
__miter_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    __miter_base(reverse_iterator<_Iterator> __it)$/;"	f	namespace:std	typeref:typename:decltype(__make_reverse_iterator (__miter_base (__it.base ())))
__mode_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __MODE_T_TYPE __mode_t;	\/* Type of file attribute bitmasks.  *\/$/;"	v	typeref:typename:__STD_TYPE __MODE_T_TYPE
__mode_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^# define __mode_t_defined$/;"	d
__moneypunct_cache	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      __moneypunct_cache(size_t __refs = 0) : facet(__refs),$/;"	f	struct:std::__moneypunct_cache
__moneypunct_cache	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    struct __moneypunct_cache : public locale::facet$/;"	s	namespace:std
__move_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	__move_get(pair<_Tp1, _Tp2>&& __pair) noexcept$/;"	f	struct:std::__pair_get	typeref:typename:_Tp1 &&
__move_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	__move_get(pair<_Tp1, _Tp2>&& __pair) noexcept$/;"	f	struct:std::__pair_get	typeref:typename:_Tp2 &&
__move_if_noexcept_cond	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@move.h	/^    struct __move_if_noexcept_cond$/;"	s	namespace:std
__move_iter_cat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      struct __move_iter_cat$/;"	s	namespace:std::__detail
__move_iter_cat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      struct __move_iter_cat<_Iterator>$/;"	s	namespace:std::__detail
__move_median_to_first	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __move_median_to_first(_Iterator __result,_Iterator __a, _Iterator __b,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION _GLIBCXX20_CONSTEXPR void
__move_merge	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __move_merge(_InputIterator __first1, _InputIterator __last1,$/;"	f	namespace:std	typeref:typename:_OutputIterator
__move_merge_adaptive	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __move_merge_adaptive(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std	typeref:typename:void
__move_merge_adaptive_backward	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __move_merge_adaptive_backward(_BidirectionalIterator1 __first1,$/;"	f	namespace:std	typeref:typename:void
__multiline	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr syntax_option_type __multiline = _S_multiline;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE syntax_option_type
__mutex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    __mutex() $/;"	f	class:__gnu_cxx::__mutex
__mutex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  class __mutex $/;"	c	namespace:__gnu_cxx
__mutex_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    typedef __mutex __mutex_type;$/;"	t	class:__gnu_cxx::__scoped_lock	typeref:typename:__mutex
__names	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__locale_t.h	/^  const char *__names[13];$/;"	m	struct:__locale_struct	typeref:typename:const char * [13]
__need_NULL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@libintl.h	/^# define __need_NULL$/;"	d
__need_NULL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^#define __need_NULL$/;"	d
__need_NULL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^#define __need_NULL$/;"	d
__need_NULL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define __need_NULL$/;"	d
__need_NULL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#define __need_NULL$/;"	d
__need_NULL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#define __need_NULL$/;"	d
__need_NULL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#define __need_NULL$/;"	d
__need_NULL	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^#define __need_NULL$/;"	d
__need_STDDEF_H_misc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^#define __need_STDDEF_H_misc$/;"	d
__need___va_list	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define __need___va_list$/;"	d
__need___va_list	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#define __need___va_list$/;"	d
__need_ptrdiff_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^#define __need_ptrdiff_t$/;"	d
__need_size_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@alloca.h	/^#define	__need_size_t$/;"	d
__need_size_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^#define __need_size_t$/;"	d
__need_size_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define __need_size_t$/;"	d
__need_size_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#define __need_size_t$/;"	d
__need_size_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^#define	__need_size_t$/;"	d
__need_size_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#define __need_size_t$/;"	d
__need_size_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#define __need_size_t$/;"	d
__need_size_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^#define __need_size_t$/;"	d
__need_wchar_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#define __need_wchar_t$/;"	d
__need_wchar_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#define __need_wchar_t$/;"	d
__need_wchar_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^#define __need_wchar_t$/;"	d
__negate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    __negate(_Iter_pred<_Predicate> __pred)$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX20_CONSTEXPR _Iter_negate<_Predicate>
__nest	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^      using __nest = __and_<is_class<_Up>, __bool_constant<!__is_final(_Up)>,$/;"	t	function:std::throw_with_nested
__new_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }$/;"	f	class:std::__new_allocator	typeref:typename:_GLIBCXX20_CONSTEXPR
__new_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }$/;"	f	class:std::__new_allocator	typeref:typename:_GLIBCXX20_CONSTEXPR
__new_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }$/;"	f	class:std::__new_allocator	typeref:typename:_GLIBCXX20_CONSTEXPR
__new_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^    class __new_allocator$/;"	c	namespace:std
__newlast1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	__newlast1(_II1, _II1 __last1, _II2, _II2)$/;"	f	struct:std::__lc_rai	typeref:typename:_GLIBCXX20_CONSTEXPR _II1
__newlast1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	__newlast1(_RAI1 __first1, _RAI1 __last1,$/;"	f	struct:std::__lc_rai	typeref:typename:_GLIBCXX20_CONSTEXPR _RAI1
__next	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^  struct __pthread_internal_list *__next;$/;"	m	struct:__pthread_internal_list	typeref:struct:__pthread_internal_list *
__next	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^  struct __pthread_internal_slist *__next;$/;"	m	struct:__pthread_internal_slist	typeref:struct:__pthread_internal_slist *
__next	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^      using __next = _Number_help<_Base,$/;"	t	struct:std::__parse_int::_Number_help	typeref:typename:_Number_help<_Base,__valid_digit::value?_Pow/_Base:_Pow,_Digs...>
__next	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^      using __next = typename _Power_help<_Base, _Digs...>::type;$/;"	t	struct:std::__parse_int::_Power_help	typeref:typename:_Power_help<_Base,_Digs...>::type
__next_permutation	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __next_permutation(_BidirectionalIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__niter_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __niter_base(_Iterator __it)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _Iterator
__niter_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION _GLIBCXX20_CONSTEXPR _Iterator
__niter_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    __niter_base(move_iterator<_Iterator> __it)$/;"	f	namespace:std	typeref:typename:decltype(make_move_iterator (__niter_base (__it.base ())))
__niter_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    __niter_base(reverse_iterator<_Iterator> __it)$/;"	f	namespace:std	typeref:typename:decltype(__make_reverse_iterator (__niter_base (__it.base ())))
__niter_wrap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __niter_wrap(_From __from, _To __res)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _From
__niter_wrap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __niter_wrap(const _Iterator&, _Iterator __res)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _Iterator
__nlink_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __NLINK_T_TYPE __nlink_t;	\/* Type of file link counts.  *\/$/;"	v	typeref:typename:__STD_TYPE __NLINK_T_TYPE
__nlink_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^# define __nlink_t_defined$/;"	d
__noexcept_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__noexcept_mask = 0x40$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__non_diamond_repeat_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__non_diamond_repeat_mask = 0x1, \/\/ Distinct instance of repeated base.$/;"	e	enum:__cxxabiv1::__vmi_class_type_info::__flags_masks
__nonnull	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __nonnull(/;"	d
__noreplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const openmode __noreplace =	_S_noreplace;$/;"	m	class:std::ios_base	typeref:typename:const openmode
__normal_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	__normal_iterator(const __normal_iterator<_Iter, _Container>& __i)$/;"	f	class:__gnu_cxx::__normal_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR
__normal_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT$/;"	f	class:__gnu_cxx::__normal_iterator	typeref:typename:_GLIBCXX_CONSTEXPR
__normal_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT$/;"	f	class:__gnu_cxx::__normal_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR
__normal_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    class __normal_iterator$/;"	c	namespace:__gnu_cxx
__not_alloc_shared_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	struct __not_alloc_shared_tag { using type = void; };$/;"	s	class:std::__shared_count
__not_alloc_shared_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	struct __not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>> { };$/;"	s	class:std::__shared_count
__not_alloc_shared_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	struct __not_alloc_shared_tag<_Sp_counted_array_base<_Alloc>> { };$/;"	s	class:std::__shared_count
__not_contained	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__not_contained,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__not_overloaded	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	struct __not_overloaded : __not_overloaded2<_Tp, _Up> { };$/;"	s	struct:std::greater
__not_overloaded	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	struct __not_overloaded : __not_overloaded2<_Tp, _Up> { };$/;"	s	struct:std::greater_equal
__not_overloaded	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	struct __not_overloaded : __not_overloaded2<_Tp, _Up> { };$/;"	s	struct:std::less
__not_overloaded	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	struct __not_overloaded : __not_overloaded2<_Tp, _Up> { };$/;"	s	struct:std::less_equal
__not_overloaded	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	struct __not_overloaded<_Tp, _Up, __void_t<$/;"	s	struct:std::greater
__not_overloaded	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	struct __not_overloaded<_Tp, _Up, __void_t<$/;"	s	struct:std::greater_equal
__not_overloaded	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	struct __not_overloaded<_Tp, _Up, __void_t<$/;"	s	struct:std::less
__not_overloaded	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	struct __not_overloaded<_Tp, _Up, __void_t<$/;"	s	struct:std::less_equal
__not_overloaded2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	struct __not_overloaded2 : true_type { };$/;"	s	struct:std::greater
__not_overloaded2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	struct __not_overloaded2 : true_type { };$/;"	s	struct:std::greater_equal
__not_overloaded2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	struct __not_overloaded2 : true_type { };$/;"	s	struct:std::less
__not_overloaded2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	struct __not_overloaded2 : true_type { };$/;"	s	struct:std::less_equal
__not_overloaded2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	struct __not_overloaded2<_Tp, _Up, __void_t<$/;"	s	struct:std::greater
__not_overloaded2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	struct __not_overloaded2<_Tp, _Up, __void_t<$/;"	s	struct:std::greater_equal
__not_overloaded2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	struct __not_overloaded2<_Tp, _Up, __void_t<$/;"	s	struct:std::less
__not_overloaded2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	struct __not_overloaded2<_Tp, _Up, __void_t<$/;"	s	struct:std::less_equal
__not_pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	struct __not_pair { using type = void; };$/;"	s	class:std::pmr::polymorphic_allocator
__not_pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	struct __not_pair<pair<_Up1, _Up2>> { };$/;"	s	class:std::pmr::polymorphic_allocator
__not_same	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^	using __not_same$/;"	t	class:std::reference_wrapper	typeref:typename:enable_if<!is_same<reference_wrapper,_Up2>::value>::type
__not_same	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^      using __not_same = __not_<is_same<__remove_cvref_t<_Tp>, thread>>;$/;"	t	class:std::thread	typeref:typename:__not_<is_same<__remove_cvref_t<_Tp>,thread>>
__num_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^  class __num_base$/;"	c	namespace:std
__num_get_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^						     __num_get_type;$/;"	t	class:std::basic_ios	typeref:typename:num_get<_CharT,istreambuf_iterator<_CharT,_Traits>>
__num_put_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^						     __num_put_type;$/;"	t	class:std::basic_ios	typeref:typename:num_put<_CharT,ostreambuf_iterator<_CharT,_Traits>>
__numeric_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    struct __numeric_traits$/;"	s	namespace:__gnu_cxx
__numeric_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    struct __numeric_traits<__ibm128>$/;"	s	namespace:__gnu_cxx
__numeric_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    struct __numeric_traits<__ieee128>$/;"	s	namespace:__gnu_cxx
__numeric_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    struct __numeric_traits<double>$/;"	s	namespace:__gnu_cxx
__numeric_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    struct __numeric_traits<float>$/;"	s	namespace:__gnu_cxx
__numeric_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    struct __numeric_traits<long double>$/;"	s	namespace:__gnu_cxx
__numeric_traits_floating	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    struct __numeric_traits_floating$/;"	s	namespace:__gnu_cxx
__numeric_traits_floating	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    struct __numeric_traits_floating<__ibm128>$/;"	s	namespace:__gnu_cxx
__numeric_traits_floating	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    struct __numeric_traits_floating<__ieee128>$/;"	s	namespace:__gnu_cxx
__numeric_traits_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^    struct __numeric_traits_integer$/;"	s	namespace:__gnu_cxx
__numpunct_cache	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      __numpunct_cache(size_t __refs = 0)$/;"	f	struct:std::__numpunct_cache
__numpunct_cache	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    struct __numpunct_cache : public locale::facet$/;"	s	namespace:std
__nusers	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^  unsigned int __nusers;$/;"	m	struct:__pthread_mutex_s	typeref:typename:unsigned int
__off64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __OFF64_T_TYPE __off64_t;	\/* Type of file sizes and offsets (LFS).  *\/$/;"	v	typeref:typename:__STD_TYPE __OFF64_T_TYPE
__off64_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^# define __off64_t_defined$/;"	d
__off64_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^# define __off64_t_defined$/;"	d
__off_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __OFF_T_TYPE __off_t;	\/* Type of file sizes and offsets.  *\/$/;"	v	typeref:typename:__STD_TYPE __OFF_T_TYPE
__off_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^# define __off_t_defined$/;"	d
__off_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^# define __off_t_defined$/;"	d
__offset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    __offset() const$/;"	f	class:__cxxabiv1::__base_class_type_info	typeref:typename:ptrdiff_t
__offset_flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    long 			__offset_flags;  \/\/ Offset and info.$/;"	m	class:__cxxabiv1::__base_class_type_info	typeref:typename:long
__offset_flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    long long			__offset_flags;  \/\/ Offset and info.$/;"	m	class:__cxxabiv1::__base_class_type_info	typeref:typename:long long
__offset_flags_masks	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    enum __offset_flags_masks$/;"	g	class:__cxxabiv1::__base_class_type_info
__offset_shift	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__offset_shift = 8          \/\/ Bits to shift offset.$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__old_x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    unsigned short int __old_x[3]; \/* Old state.  *\/$/;"	m	struct:drand48_data	typeref:typename:unsigned short int[3]
__once_flag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^} __once_flag;$/;"	t	typeref:struct:__anon5a8cba0b0108
__ops	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^namespace __ops$/;"	n	namespace:__gnu_cxx
__or_fetch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __or_fetch(_Tp* __ptr, _Val<_Tp> __i) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE _Tp
__ostream_fill	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ostream_insert.h	/^    __ostream_fill(basic_ostream<_CharT, _Traits>& __out, streamsize __n)$/;"	f	namespace:std	typeref:typename:void
__ostream_insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ostream_insert.h	/^    __ostream_insert(basic_ostream<_CharT, _Traits>& __out,$/;"	f	namespace:std	typeref:typename:basic_ostream<_CharT,_Traits> &
__ostream_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ostream_insert.h	/^      typedef basic_ostream<_CharT, _Traits>       __ostream_type;      $/;"	t	function:std::__ostream_fill	typeref:typename:basic_ostream<_CharT,_Traits>
__ostream_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ostream_insert.h	/^      typedef basic_ostream<_CharT, _Traits>       __ostream_type;      $/;"	t	function:std::__ostream_write	typeref:typename:basic_ostream<_CharT,_Traits>
__ostream_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ostream_insert.h	/^      typedef basic_ostream<_CharT, _Traits>       __ostream_type;$/;"	t	function:std::__ostream_insert	typeref:typename:basic_ostream<_CharT,_Traits>
__ostream_write	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ostream_insert.h	/^    __ostream_write(basic_ostream<_CharT, _Traits>& __out,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION void
__owner	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^  int __owner;$/;"	m	struct:__pthread_mutex_s	typeref:typename:int
__p_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      typedef typename __distr_type::param_type __p_type;$/;"	t	function:std::shuffle	typeref:typename:__distr_type::param_type
__pad	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    struct __pad$/;"	s	namespace:std
__pad	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  void *__pad[4];$/;"	m	struct:__anon9201e7230b08	typeref:typename:void * [4]
__pad1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^  unsigned char __pad1[3];$/;"	m	struct:__pthread_rwlock_arch_t	typeref:typename:unsigned char[3]
__pad1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^  unsigned char __pad1[7];$/;"	m	struct:__pthread_rwlock_arch_t	typeref:typename:unsigned char[7]
__pad2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^  unsigned char __pad2;$/;"	m	struct:__pthread_rwlock_arch_t	typeref:typename:unsigned char
__pad2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^  unsigned long int __pad2;$/;"	m	struct:__pthread_rwlock_arch_t	typeref:typename:unsigned long int
__pad3	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^  unsigned int __pad3;$/;"	m	struct:__pthread_rwlock_arch_t	typeref:typename:unsigned int
__pad4	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^  unsigned int __pad4;$/;"	m	struct:__pthread_rwlock_arch_t	typeref:typename:unsigned int
__pad5	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  size_t __pad5;$/;"	m	struct:_IO_FILE_complete	typeref:typename:size_t
__pair_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^  template<typename _U1, typename _U2> class __pair_base$/;"	c	namespace:std
__pair_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    struct __pair_get<0>$/;"	s	namespace:std
__pair_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    struct __pair_get<1>$/;"	s	namespace:std
__pair_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      typedef pair<__ds_type1, __ds_type2> 	      __pair_type;$/;"	t	function:std::make_pair	typeref:typename:pair<__ds_type1,__ds_type2>
__parallel	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^  inline namespace __parallel { }$/;"	n	namespace:std
__param_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      using __param_type = typename __distrib_type::param_type;$/;"	t	function:std::__sample	typeref:typename:__distrib_type::param_type
__parse_int	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^namespace __parse_int$/;"	n	namespace:std
__partial_sort	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __partial_sort(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__partial_sort_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __partial_sort_copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _RandomAccessIterator
__partition	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __partition(_BidirectionalIterator __first, _BidirectionalIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _BidirectionalIterator
__partition	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __partition(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__pbase_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    __pbase_type_info(const char* __n, int __quals,$/;"	f	class:__cxxabiv1::__pbase_type_info
__pbase_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^  class __pbase_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1
__pid_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __PID_T_TYPE __pid_t;	\/* Type of process identifications.  *\/$/;"	v	typeref:typename:__STD_TYPE __PID_T_TYPE
__pid_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^# define __pid_t_defined$/;"	d
__pid_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^# define __pid_t_defined$/;"	d
__pid_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#  define __pid_t_defined$/;"	d
__pocca	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using __pocca = typename _Tp::propagate_on_container_copy_assignment;$/;"	t	struct:std::__allocator_traits_base	typeref:typename:_Tp::propagate_on_container_copy_assignment
__pocca	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using __pocca =$/;"	t	function:std::__alloc_on_copy	typeref:typename:__traits::propagate_on_container_copy_assignment::type
__pocma	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using __pocma = typename _Tp::propagate_on_container_move_assignment;$/;"	t	struct:std::__allocator_traits_base	typeref:typename:_Tp::propagate_on_container_move_assignment
__pocma	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using __pocma$/;"	t	function:std::__alloc_on_move	typeref:typename:__traits::propagate_on_container_move_assignment::type
__pocs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using __pocs = typename _Tp::propagate_on_container_swap;$/;"	t	struct:std::__allocator_traits_base	typeref:typename:_Tp::propagate_on_container_swap
__pocs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using __pocs = typename __traits::propagate_on_container_swap::type;$/;"	t	function:std::__alloc_on_swap	typeref:typename:__traits::propagate_on_container_swap::type
__pointee	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    const std::type_info* 	__pointee; \/\/ Type of pointed to object.$/;"	m	class:__cxxabiv1::__pbase_type_info	typeref:typename:const std::type_info *
__pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using __pointer = typename _Tp::pointer;$/;"	t	struct:std::__allocator_traits_base	typeref:typename:_Tp::pointer
__pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^	using __pointer$/;"	t	class:std::_Node_handle	typeref:typename:__ptr_rebind<typename _AllocTraits::pointer,remove_reference_t<_Tp>>
__pointer_catch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^  __pointer_catch (const __pbase_type_info *thrown_type,$/;"	f	class:__cxxabiv1::__pbase_type_info	typeref:typename:bool
__pointer_to_member_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    __pointer_to_member_type_info(const char* __n, int __quals,$/;"	f	class:__cxxabiv1::__pointer_to_member_type_info
__pointer_to_member_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^  class __pointer_to_member_type_info : public __pbase_type_info$/;"	c	namespace:__cxxabiv1
__pointer_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      typedef _PTp* 	__pointer_type;$/;"	t	struct:std::__atomic_base	typeref:typename:_PTp *
__pointer_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    __pointer_type_info(const char* __n, int __quals,$/;"	f	class:__cxxabiv1::__pointer_type_info
__pointer_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^  class __pointer_type_info : public __pbase_type_info$/;"	c	namespace:__cxxabiv1
__poison_hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^    struct __poison_hash$/;"	s	namespace:std
__poison_hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^    struct __poison_hash<_Tp, __void_t<decltype(hash<_Tp>()(declval<_Tp>()))>>$/;"	s	namespace:std
__polynomial	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr syntax_option_type __polynomial = _S_polynomial;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE syntax_option_type
__pop_cat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      using __pop_cat = typename$/;"	t	function:std::sample	typeref:typename:std::iterator_traits<_PopulationIterator>::iterator_category
__pop_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    __pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__pos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__fpos64_t.h	/^  __off64_t __pos;$/;"	m	struct:_G_fpos64_t	typeref:typename:__off64_t
__pos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__fpos_t.h	/^  __off_t __pos;$/;"	m	struct:_G_fpos_t	typeref:typename:__off_t
__postfix_proxy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      __postfix_proxy(iter_reference_t<_It>&& __x)$/;"	f	class:std::common_iterator::__postfix_proxy
__postfix_proxy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    class __postfix_proxy$/;"	c	class:std::common_iterator
__pred_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    __pred_iter(_Predicate __pred)$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX20_CONSTEXPR _Iter_pred<_Predicate>
__prev	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^  struct __pthread_internal_list *__prev;$/;"	m	struct:__pthread_internal_list	typeref:struct:__pthread_internal_list *
__prev	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  struct _pthread_cleanup_buffer *__prev; \/* Chaining of cleanup functions.  *\/$/;"	m	struct:_pthread_cleanup_buffer	typeref:struct:_pthread_cleanup_buffer *
__prev_permutation	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __prev_permutation(_BidirectionalIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
__promote	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __promote$/;"	s	namespace:__gnu_cxx
__promote	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __promote<_Float128>$/;"	s	namespace:__gnu_cxx
__promote	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __promote<_Float16>$/;"	s	namespace:__gnu_cxx
__promote	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __promote<_Float32>$/;"	s	namespace:__gnu_cxx
__promote	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __promote<_Float64>$/;"	s	namespace:__gnu_cxx
__promote	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __promote<_Tp, false>$/;"	s	namespace:__gnu_cxx
__promote	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __promote<__gnu_cxx::__bfloat16_t>$/;"	s	namespace:__gnu_cxx
__promote	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __promote<double>$/;"	s	namespace:__gnu_cxx
__promote	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __promote<float>$/;"	s	namespace:__gnu_cxx
__promote	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __promote<long double>$/;"	s	namespace:__gnu_cxx
__promote_2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __promote_2$/;"	s	namespace:__gnu_cxx
__promote_2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    using __promote_2 = __promote<__promoted_t<_Tp, _Up>>;$/;"	t	namespace:__gnu_cxx	typeref:typename:__promote<__promoted_t<_Tp,_Up>>
__promote_3	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __promote_3$/;"	s	namespace:__gnu_cxx
__promote_3	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    using __promote_3 = __promote<__promoted_t<_Tp, _Up, _Vp>>;$/;"	t	namespace:__gnu_cxx	typeref:typename:__promote<__promoted_t<_Tp,_Up,_Vp>>
__promote_4	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __promote_4$/;"	s	namespace:__gnu_cxx
__promote_4	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    using __promote_4 = __promote<__promoted_t<_Tp, _Up, _Vp, _Wp>>;$/;"	t	namespace:__gnu_cxx	typeref:typename:__promote<__promoted_t<_Tp,_Up,_Vp,_Wp>>
__promoted_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    using __promoted_t = decltype((typename __promote<_Tp>::__type(0) + ...));$/;"	t	namespace:__gnu_cxx
__pstl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^namespace __pstl$/;"	n
__pthread_cleanup_class	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  __pthread_cleanup_class (void (*__fct) (void *), void *__arg)$/;"	f	class:__pthread_cleanup_class
__pthread_cleanup_class	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^class __pthread_cleanup_class$/;"	c
__pthread_cleanup_frame	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^struct __pthread_cleanup_frame$/;"	s
__pthread_cleanup_routine	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^__pthread_cleanup_routine (struct __pthread_cleanup_frame *__frame)$/;"	f	typeref:typename:__extern_inline void
__pthread_cond_s	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^struct __pthread_cond_s$/;"	s
__pthread_internal_list	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^typedef struct __pthread_internal_list$/;"	s
__pthread_internal_slist	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^typedef struct __pthread_internal_slist$/;"	s
__pthread_list_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^} __pthread_list_t;$/;"	t	typeref:struct:__pthread_internal_list
__pthread_mutex_s	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^struct __pthread_mutex_s$/;"	s
__pthread_rwlock_arch_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^struct __pthread_rwlock_arch_t$/;"	s
__pthread_slist_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^} __pthread_slist_t;$/;"	t	typeref:struct:__pthread_internal_slist
__pthread_unwind_buf_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^} __pthread_unwind_buf_t __attribute__ ((__aligned__));$/;"	t	typeref:struct:__anon9201e7230b08
__ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	struct __ptr$/;"	s	struct:std::iterator_traits
__ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	struct __ptr<_Iter>$/;"	s	struct:std::iterator_traits
__ptr_cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	using __ptr_cmp = __and_<__not_overloaded<_Tp, _Up>,$/;"	t	struct:std::greater	typeref:typename:__and_<__not_overloaded<_Tp,_Up>,is_convertible<_Tp,const volatile void * >,is_convertible<_Up,const volatile void * >>
__ptr_cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	using __ptr_cmp = __and_<__not_overloaded<_Tp, _Up>,$/;"	t	struct:std::greater_equal	typeref:typename:__and_<__not_overloaded<_Tp,_Up>,is_convertible<_Tp,const volatile void * >,is_convertible<_Up,const volatile void * >>
__ptr_cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	using __ptr_cmp = __and_<__not_overloaded<_Tp, _Up>,$/;"	t	struct:std::less	typeref:typename:__and_<__not_overloaded<_Tp,_Up>,is_convertible<_Tp,const volatile void * >,is_convertible<_Up,const volatile void * >>
__ptr_cmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	using __ptr_cmp = __and_<__not_overloaded<_Tp, _Up>,$/;"	t	struct:std::less_equal	typeref:typename:__and_<__not_overloaded<_Tp,_Up>,is_convertible<_Tp,const volatile void * >,is_convertible<_Up,const volatile void * >>
__ptr_rebind	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    using __ptr_rebind = typename pointer_traits<_Ptr>::template rebind<_Tp>;$/;"	t	namespace:std	typeref:typename:pointer_traits<_Ptr>::template rebind<_Tp>
__ptr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#define __ptr_t /;"	d
__ptr_traits_elem	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    struct __ptr_traits_elem : __get_first_arg<_Ptr>$/;"	s	namespace:std
__ptr_traits_elem	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    struct __ptr_traits_elem<_Ptr, __void_t<typename _Ptr::element_type>>$/;"	s	namespace:std
__ptr_traits_elem	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    struct __ptr_traits_elem<_Ptr, void>$/;"	s	namespace:std
__ptr_traits_elem_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    using __ptr_traits_elem_t = typename __ptr_traits_elem<_Ptr>::type;$/;"	t	namespace:std	typeref:typename:__ptr_traits_elem<_Ptr>::type
__ptr_traits_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    struct __ptr_traits_impl : __ptr_traits_ptr_to<_Ptr, _Elt>$/;"	s	namespace:std
__ptr_traits_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    struct __ptr_traits_impl<_Ptr, __undefined>$/;"	s	namespace:std
__ptr_traits_ptr_to	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    struct __ptr_traits_ptr_to$/;"	s	namespace:std
__ptr_traits_ptr_to	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    struct __ptr_traits_ptr_to<_Ptr, _Elt, true>$/;"	s	namespace:std
__ptr_traits_ptr_to	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    struct __ptr_traits_ptr_to<_Tp*, _Tp, false>$/;"	s	namespace:std
__public_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__public_mask = 0x2,$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__push_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    __push_heap(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__putc_unlocked_body	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^#define __putc_unlocked_body(/;"	d
__quad_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__extension__ typedef long long int __quad_t;$/;"	t	typeref:typename:long long int
__quad_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef long int __quad_t;$/;"	t	typeref:typename:long int
__r	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	rep __r;$/;"	m	class:std::chrono::duration	typeref:typename:rep
__r	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using __r = ratio<__gcd_num::value,$/;"	t	struct:std::__duration_common_type
__rai_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^      typedef std::__lc_rai<_Category1, _Category2> __rai_type;$/;"	t	function:std::__lexicographical_compare_impl	typeref:typename:std::__lc_rai<_Category1,_Category2>
__rb_verify	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    _Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::__rb_verify() const$/;"	f	class:std::_Rb_tree	typeref:typename:bool
__readers	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^  unsigned int __readers;$/;"	m	struct:__pthread_rwlock_arch_t	typeref:typename:unsigned int
__rebind	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      struct __rebind : __replace_first_arg<_Tp, _Up>$/;"	s	struct:std::__allocator_traits_base
__rebind	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      struct __rebind<_Tp, _Up,$/;"	s	struct:std::__allocator_traits_base
__rebind	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^	using __rebind = __type_identity<typename _Tp::template rebind<_Up>>;$/;"	t	struct:std::__ptr_traits_impl	typeref:typename:__type_identity<typename _Tp::template rebind<_Up>>
__recursive_mutex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    __recursive_mutex() $/;"	f	class:__gnu_cxx::__recursive_mutex
__recursive_mutex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  class __recursive_mutex $/;"	c	namespace:__gnu_cxx
__reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    using __reference = iter_const_reference_t<_It>;$/;"	t	class:std::basic_const_iterator	typeref:typename:iter_const_reference_t<_It>
__relocate_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __relocate_a(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__relocate_a_1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __relocate_a_1(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__relocate_a_1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __relocate_a_1(_Tp* __first, _Tp* __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR __enable_if_t<std::__is_bitwise_relocatable<_Tp>::value,_Tp * >
__relocate_object_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__remove_copy_if	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __remove_copy_if(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
__remove_if	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    __remove_if(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__remove_unsigned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __remove_unsigned$/;"	s	namespace:__gnu_cxx
__remove_unsigned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __remove_unsigned<char>$/;"	s	namespace:__gnu_cxx
__remove_unsigned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __remove_unsigned<unsigned char>$/;"	s	namespace:__gnu_cxx
__remove_unsigned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __remove_unsigned<unsigned int>$/;"	s	namespace:__gnu_cxx
__remove_unsigned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __remove_unsigned<unsigned long long>$/;"	s	namespace:__gnu_cxx
__remove_unsigned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __remove_unsigned<unsigned long>$/;"	s	namespace:__gnu_cxx
__remove_unsigned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    struct __remove_unsigned<unsigned short>$/;"	s	namespace:__gnu_cxx
__replace_copy_if	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __replace_copy_if(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
__replace_first_arg	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    struct __replace_first_arg$/;"	s	namespace:std
__replace_first_arg	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    struct __replace_first_arg<_SomeTemplate<_Tp, _Types...>, _Up>$/;"	s	namespace:std
__restore	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  void __restore () const { pthread_setcanceltype (__cancel_type, 0); }$/;"	f	class:__pthread_cleanup_class	typeref:typename:void
__restrict	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __restrict	/;"	d
__restrict_arr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#   define __restrict_arr	/;"	d
__restrict_arr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __restrict_arr	/;"	d
__restrict_arr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __restrict_arr	/;"	d
__restrict_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__restrict_mask = 0x4,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__result	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^      using __result = __invoke_result<_Callable, _Args...>;$/;"	t	function:std::__invoke	typeref:typename:__invoke_result<_Callable,_Args...>
__result	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^      using __result = __invoke_result<_Callable, _Args...>;$/;"	t	function:std::__invoke_r	typeref:typename:__invoke_result<_Callable,_Args...>
__result	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^	  struct __result<tuple<_Fn, _Args...>>$/;"	s	struct:std::thread::_Invoker
__result_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^      using __result_type = _Res;$/;"	t	struct:std::_Mem_fn_traits_base	typeref:typename:_Res
__rethrow_if_nested_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^    __rethrow_if_nested_impl(const _Ex* __ptr, true_type)$/;"	f	namespace:std	typeref:typename:void
__rethrow_if_nested_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^  __rethrow_if_nested_impl(const void*, false_type)$/;"	f	namespace:std	typeref:typename:void
__return_temporary_buffer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^      __return_temporary_buffer(_Tp* __p,$/;"	f	namespace:std::__detail	typeref:typename:void
__returns_nonnull	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __returns_nonnull __attribute__ ((__returns_nonnull_/;"	d
__returns_nonnull	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __returns_nonnull$/;"	d
__reverse	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __reverse(_BidirectionalIterator __first, _BidirectionalIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__reverse	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __reverse(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__rlim64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __RLIM64_T_TYPE __rlim64_t;	\/* Type for resource measurement (LFS).  *\/$/;"	v	typeref:typename:__STD_TYPE __RLIM64_T_TYPE
__rlim_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __RLIM_T_TYPE __rlim_t;	\/* Type for resource measurement.  *\/$/;"	v	typeref:typename:__STD_TYPE __RLIM_T_TYPE
__rotate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __rotate(_BidirectionalIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _BidirectionalIterator
__rotate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __rotate(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _RandomAccessIterator
__rotate_adaptive	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __rotate_adaptive(_BidirectionalIterator1 __first,$/;"	f	namespace:std	typeref:typename:_BidirectionalIterator1
__routine	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  void (*__routine) (void *);             \/* Function to call.  *\/$/;"	m	struct:_pthread_cleanup_buffer	typeref:typename:void (*)(void *)
__rvalue_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    using __rvalue_reference = __detail::__iter_const_rvalue_reference_t<_It>;$/;"	t	class:std::basic_const_iterator	typeref:typename:__detail::__iter_const_rvalue_reference_t<_It>
__rwelision	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^  signed char __rwelision;$/;"	m	struct:__pthread_rwlock_arch_t	typeref:typename:signed char
__safe_bool	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^      typedef void (exception_ptr::*__safe_bool)();$/;"	t	class:std::__exception_ptr::exception_ptr	typeref:typename:void (exception_ptr::*)()
__safe_conversion_raw	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^        using __safe_conversion_raw = __and_<$/;"	t	class:std::unique_ptr
__safe_conversion_up	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	using __safe_conversion_up = __and_<$/;"	t	class:std::unique_ptr
__safe_conversion_up	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	using __safe_conversion_up = __and_<$/;"	t	class:std::unique_ptr	typeref:typename:__and_<is_convertible<typename unique_ptr<_Up,_Ep>::pointer,pointer>,__not_<is_array<_Up>>>
__same_value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	using __same_value_type$/;"	t	class:std::_Rb_tree	typeref:typename:is_same<value_type,typename iterator_traits<_Iter>::value_type>
__samp_cat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      using __samp_cat = typename$/;"	t	function:std::sample	typeref:typename:std::iterator_traits<_SampleIterator>::iterator_category
__sample	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __sample(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_OutputIterator
__sample	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __sample(_InputIterator __first, _InputIterator __last, input_iterator_tag,$/;"	f	namespace:std	typeref:typename:_RandomAccessIterator
__saved_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct___jmp_buf_tag.h	/^    __sigset_t __saved_mask;	\/* Saved signal mask.  *\/$/;"	m	struct:__jmp_buf_tag	typeref:typename:__sigset_t
__sched_priority	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^#define __sched_priority /;"	d
__scoped_lock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    explicit __scoped_lock(__mutex_type& __name) : _M_device(__name)$/;"	f	class:__gnu_cxx::__scoped_lock
__scoped_lock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  class __scoped_lock$/;"	c	namespace:__gnu_cxx
__search	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator1
__search_mode	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^      using __search_mode = integral_constant<bool, __dfs_mode>;$/;"	t	class:std::__detail::_Executor	typeref:typename:integral_constant<bool,__dfs_mode>
__search_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __search_n(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__search_n_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __search_n_aux(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__search_n_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __search_n_aux(_RandomAccessIter __first, _RandomAccessIter __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _RandomAccessIter
__select_int	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^namespace __select_int$/;"	n	namespace:std
__set_difference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __set_difference(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
__set_intersection	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __set_intersection(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
__set_symmetric_difference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __set_symmetric_difference(_InputIterator1 __first1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
__set_union	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __set_union(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
__setdoit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  void __setdoit (int __newval) { __do_it = __newval; }$/;"	f	class:__pthread_cleanup_class	typeref:typename:void
__shared	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^  int __shared;$/;"	m	struct:__pthread_rwlock_arch_t	typeref:typename:int
__shared	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^  unsigned char __shared;$/;"	m	struct:__pthread_rwlock_arch_t	typeref:typename:unsigned char
__shared_base_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    typedef shared_ptr<_Impl_base>	__shared_base_type;$/;"	t	class:std::thread	typeref:typename:shared_ptr<_Impl_base>
__shared_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^    __shared_count<_Lp>::__shared_count(std::auto_ptr<_Tp>&& __r)$/;"	f	class:std::__shared_count
__shared_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_count(_Ptr __p) : _M_pi(0)$/;"	f	class:std::__shared_count
__shared_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_count(_Ptr __p, \/* is_array = *\/ false_type)$/;"	f	class:std::__shared_count
__shared_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_count(_Ptr __p, \/* is_array = *\/ true_type)$/;"	f	class:std::__shared_count
__shared_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_count(_Ptr __p, _Deleter __d)$/;"	f	class:std::__shared_count
__shared_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_count(_Ptr __p, _Deleter __d, _Alloc __a) : _M_pi(0)$/;"	f	class:std::__shared_count
__shared_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_count(_Tp*& __p, _Sp_alloc_shared_tag<_Alloc> __a,$/;"	f	class:std::__shared_count
__shared_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_count(_Tp*& __p, const _Sp_counted_array_base<_Alloc>& __a,$/;"	f	class:std::__shared_count
__shared_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_count(std::unique_ptr<_Tp, _Del>&& __r) : _M_pi(0)$/;"	f	class:std::__shared_count
__shared_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      __shared_count(const __shared_count& __r) noexcept$/;"	f	class:std::__shared_count
__shared_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      constexpr __shared_count() noexcept : _M_pi(0)$/;"	f	class:std::__shared_count
__shared_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    __shared_count(const __weak_count<_Lp>& __r, std::nothrow_t) noexcept$/;"	f	class:std::__shared_count
__shared_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    __shared_count<_Lp>::__shared_count(const __weak_count<_Lp>& __r)$/;"	f	class:std::__shared_count
__shared_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    class __shared_count$/;"	c	namespace:std
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^    __shared_ptr<_Tp, _Lp>::__shared_ptr(std::auto_ptr<_Tp1>&& __r)$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_ptr(_Sp_alloc_shared_tag<_Alloc> __tag, _Args&&... __args)$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_ptr(_Yp* __p)$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_ptr(_Yp* __p, _Deleter __d)$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_ptr(_Yp* __p, _Deleter __d, _Alloc __a)$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_ptr(__shared_ptr<_Yp, _Lp>&& __r) noexcept$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_ptr(__shared_ptr<_Yp, _Lp>&& __r,$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_ptr(const _Sp_counted_array_base<_Alloc>& __a,$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_ptr(const __shared_ptr<_Yp, _Lp>& __r) noexcept$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_ptr(const __shared_ptr<_Yp, _Lp>& __r,$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_ptr(nullptr_t __p, _Deleter __d)$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_ptr(unique_ptr<_Tp1, _Del>&& __r, __sp_array_delete)$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__shared_ptr(unique_ptr<_Yp, _Del>&& __r)$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	explicit __shared_ptr(const __weak_ptr<_Yp, _Lp>& __r)$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^        __shared_ptr(nullptr_t __p, _Deleter __d, _Alloc __a)$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      __shared_ptr(__shared_ptr&& __r) noexcept$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      __shared_ptr(const __weak_ptr<_Tp, _Lp>& __r, std::nothrow_t) noexcept$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      constexpr __shared_ptr() noexcept$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      constexpr __shared_ptr(nullptr_t) noexcept : __shared_ptr() { }$/;"	f	class:std::__shared_ptr
__shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    class __shared_ptr$/;"	c	namespace:std
__shared_ptr_access	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    class __shared_ptr_access$/;"	c	namespace:std
__shared_ptr_access	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    class __shared_ptr_access<_Tp, _Lp, false, true>$/;"	c	namespace:std
__shared_ptr_access	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    class __shared_ptr_access<_Tp, _Lp, true, false>$/;"	c	namespace:std
__shrink_to_fit_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    struct __shrink_to_fit_aux$/;"	s	namespace:std
__shrink_to_fit_aux	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    struct __shrink_to_fit_aux<_Tp, true>$/;"	s	namespace:std
__si_class_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    __si_class_type_info(const char *__n, const __class_type_info *__base)$/;"	f	class:__cxxabiv1::__si_class_type_info
__si_class_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^  class __si_class_type_info : public __class_type_info$/;"	c	namespace:__cxxabiv1
__sig_atomic_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef int __sig_atomic_t;$/;"	t	typeref:typename:int
__sigset_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__sigset_t.h	/^} __sigset_t;$/;"	t	typeref:struct:__anonaed0cf220108
__sigset_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@sigset_t.h	/^#define __sigset_t_defined /;"	d
__sigsetjmp_cancel	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^# define __sigsetjmp_cancel(/;"	d
__single_object	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    { typedef unique_ptr<_Tp> __single_object; };$/;"	t	struct:std::__detail::_MakeUniq	typeref:typename:unique_ptr<_Tp>
__size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_ATTR_T];$/;"	m	union:pthread_attr_t	typeref:typename:char[]
__size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_BARRIERATTR_T];$/;"	m	union:__anondcf6770a080a	typeref:typename:char[]
__size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_BARRIER_T];$/;"	m	union:__anondcf6770a070a	typeref:typename:char[]
__size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_CONDATTR_T];$/;"	m	union:__anondcf6770a020a	typeref:typename:char[]
__size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_COND_T];$/;"	m	union:__anondcf6770a040a	typeref:typename:char[]
__size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_MUTEXATTR_T];$/;"	m	union:__anondcf6770a010a	typeref:typename:char[]
__size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_MUTEX_T];$/;"	m	union:__anondcf6770a030a	typeref:typename:char[]
__size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_RWLOCKATTR_T];$/;"	m	union:__anondcf6770a060a	typeref:typename:char[]
__size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^  char __size[__SIZEOF_PTHREAD_RWLOCK_T];$/;"	m	union:__anondcf6770a050a	typeref:typename:char[]
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(__GLIBCXX_TYPE_INT_N_0 __n) { return __n; }$/;"	f	namespace:std	typeref:typename:__extension__ _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_0
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(__GLIBCXX_TYPE_INT_N_1 __n) { return __n; }$/;"	f	namespace:std	typeref:typename:__extension__ _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_1
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(__GLIBCXX_TYPE_INT_N_2 __n) { return __n; }$/;"	f	namespace:std	typeref:typename:__extension__ _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_2
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(__GLIBCXX_TYPE_INT_N_3 __n) { return __n; }$/;"	f	namespace:std	typeref:typename:__extension__ _GLIBCXX_CONSTEXPR unsigned __GLIBCXX_TYPE_INT_N_3
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(__float128 __n) { return (long long)__n; }$/;"	f	namespace:std	typeref:typename:__extension__ _GLIBCXX_CONSTEXPR long long
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(double __n) { return (long long)__n; }$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR long long
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(float __n) { return (long long)__n; }$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR long long
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(int __n) { return __n; }$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR int
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(long __n) { return __n; }$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR long
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(long double __n) { return (long long)__n; }$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR long long
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(long long __n) { return __n; }$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR long long
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(unsigned __GLIBCXX_TYPE_INT_N_0 __n) { return __n; }$/;"	f	namespace:std	typeref:typename:__extension__ _GLIBCXX_CONSTEXPR unsigned __GLIBCXX_TYPE_INT_N_0
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(unsigned __GLIBCXX_TYPE_INT_N_1 __n) { return __n; }$/;"	f	namespace:std	typeref:typename:__extension__ _GLIBCXX_CONSTEXPR unsigned __GLIBCXX_TYPE_INT_N_1
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(unsigned __GLIBCXX_TYPE_INT_N_2 __n) { return __n; }$/;"	f	namespace:std	typeref:typename:__extension__ _GLIBCXX_CONSTEXPR unsigned __GLIBCXX_TYPE_INT_N_2
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(unsigned __GLIBCXX_TYPE_INT_N_3 __n) { return __n; }$/;"	f	namespace:std	typeref:typename:__extension__ _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_3
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(unsigned __n) { return __n; }$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR unsigned
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(unsigned long __n) { return __n; }$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR unsigned long
__size_to_integer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^  __size_to_integer(unsigned long long __n) { return __n; }$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR unsigned long long
__socklen_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __U32_TYPE __socklen_t;$/;"	v	typeref:typename:__STD_TYPE __U32_TYPE
__sort	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __sort(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__sort_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    __sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__sp_array_delete	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^  struct __sp_array_delete$/;"	s	namespace:std
__sp_compatible_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct __sp_compatible_with$/;"	s	namespace:std
__sp_compatible_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct __sp_compatible_with<_Up(*)[_Nm], _Up(*)[]>$/;"	s	namespace:std
__sp_compatible_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct __sp_compatible_with<_Up(*)[_Nm], const _Up(*)[]>$/;"	s	namespace:std
__sp_compatible_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct __sp_compatible_with<_Up(*)[_Nm], const volatile _Up(*)[]>$/;"	s	namespace:std
__sp_compatible_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct __sp_compatible_with<_Up(*)[_Nm], volatile _Up(*)[]>$/;"	s	namespace:std
__sp_compatible_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct __sp_compatible_with<_Yp*, _Tp*>$/;"	s	namespace:std
__sp_is_constructible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct __sp_is_constructible$/;"	s	namespace:std
__sp_is_constructible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct __sp_is_constructible<_Up[], _Yp>$/;"	s	namespace:std
__sp_is_constructible	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct __sp_is_constructible<_Up[_Nm], _Yp>$/;"	s	namespace:std
__sp_is_constructible_arr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct __sp_is_constructible_arr$/;"	s	namespace:std
__sp_is_constructible_arr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct __sp_is_constructible_arr<_Up, _Yp, __void_t<_Yp[]>>$/;"	s	namespace:std
__sp_is_constructible_arrN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct __sp_is_constructible_arrN$/;"	s	namespace:std
__sp_is_constructible_arrN	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct __sp_is_constructible_arrN<_Up, _Nm, _Yp, __void_t<_Yp[_Nm]>>$/;"	s	namespace:std
__spins	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^  short __spins;$/;"	m	struct:__pthread_mutex_s	typeref:typename:short
__spins	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_mutex.h	/^# define __spins /;"	d
__ssize_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __SSIZE_T_TYPE __ssize_t; \/* Type of a byte count, or error.  *\/$/;"	v	typeref:typename:__STD_TYPE __SSIZE_T_TYPE
__ssize_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^# define __ssize_t_defined$/;"	d
__ssize_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^# define __ssize_t_defined$/;"	d
__stable_partition	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __stable_partition(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_ForwardIterator
__stable_partition_adaptive	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __stable_partition_adaptive(_ForwardIterator __first,$/;"	f	namespace:std	typeref:typename:_ForwardIterator
__stable_sort	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:void
__stable_sort_adaptive	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __stable_sort_adaptive(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:void
__stable_sort_adaptive_resize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __stable_sort_adaptive_resize(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:void
__state	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__fpos64_t.h	/^  __mbstate_t __state;$/;"	m	struct:_G_fpos64_t	typeref:typename:__mbstate_t
__state	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__fpos_t.h	/^  __mbstate_t __state;$/;"	m	struct:_G_fpos_t	typeref:typename:__mbstate_t
__stdint_join3	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define __stdint_join3(/;"	d
__stoa	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@string_conversions.h	/^    __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION _Ret
__stored_locally	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	static const bool __stored_locally =$/;"	m	class:std::_Function_base::_Base_manager	typeref:typename:const bool
__str_codecvt_in	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^    __str_codecvt_in(const char* __first, const char* __last,$/;"	f	namespace:std	typeref:typename:bool
__str_codecvt_in_all	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^    __str_codecvt_in_all(const char* __first, const char* __last,$/;"	f	namespace:std	typeref:typename:bool
__str_codecvt_out	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^    __str_codecvt_out(const _CharT* __first, const _CharT* __last,$/;"	f	namespace:std	typeref:typename:bool
__str_codecvt_out_all	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^    __str_codecvt_out_all(const _CharT* __first, const _CharT* __last,$/;"	f	namespace:std	typeref:typename:bool
__str_concat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    __str_concat(typename _Str::value_type const* __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_END_NAMESPACE_CXX11 _GLIBCXX20_CONSTEXPR _Str
__str_hash_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    struct __str_hash_base$/;"	s	namespace:std
__string_view	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	__string_view(const string_type& __s) noexcept$/;"	f	struct:std::sub_match::__string_view
__string_view	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	__string_view(const value_type* __s) noexcept$/;"	f	struct:std::sub_match::__string_view
__string_view	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	__string_view(const value_type* __s, size_t __n) noexcept$/;"	f	struct:std::sub_match::__string_view
__string_view	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      struct __string_view$/;"	s	class:std::sub_match
__struct_FILE_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^#define __struct_FILE_defined /;"	d
__struct_tm_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_tm.h	/^#define __struct_tm_defined /;"	d
__stub___compat_bdflush	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@gnu@stubs-64.h	/^#define __stub___compat_bdflush$/;"	d
__stub_chflags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@gnu@stubs-64.h	/^#define __stub_chflags$/;"	d
__stub_fchflags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@gnu@stubs-64.h	/^#define __stub_fchflags$/;"	d
__stub_gtty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@gnu@stubs-64.h	/^#define __stub_gtty$/;"	d
__stub_revoke	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@gnu@stubs-64.h	/^#define __stub_revoke$/;"	d
__stub_setlogin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@gnu@stubs-64.h	/^#define __stub_setlogin$/;"	d
__stub_sigreturn	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@gnu@stubs-64.h	/^#define __stub_sigreturn$/;"	d
__stub_stty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@gnu@stubs-64.h	/^#define __stub_stty$/;"	d
__sub_fetch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __sub_fetch(_Tp* __ptr, _Diff<_Tp> __i) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE _Tp
__sub_fetch_flt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __sub_fetch_flt(_Tp* __ptr, _Val<_Tp> __i) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_Tp
__sub_kind	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    enum __sub_kind$/;"	g	class:__cxxabiv1::__class_type_info
__sub_match_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    using __sub_match_string = basic_string<$/;"	t	namespace:std	typeref:typename:basic_string<typename iterator_traits<_Bi_iter>::value_type,_Ch_traits,_Ch_alloc>
__suseconds64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __SUSECONDS64_T_TYPE __suseconds64_t;$/;"	v	typeref:typename:__STD_TYPE __SUSECONDS64_T_TYPE
__suseconds_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __SUSECONDS_T_TYPE __suseconds_t; \/* Signed count of microseconds.  *\/$/;"	v	typeref:typename:__STD_TYPE __SUSECONDS_T_TYPE
__suseconds_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^# define __suseconds_t_defined$/;"	d
__suseconds_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^#  define __suseconds_t_defined$/;"	d
__sv_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef basic_string_view<_CharT, _Traits> __sv_type;$/;"	t	class:std::basic_string	typeref:typename:basic_string_view<_CharT,_Traits>
__sv_wrapper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	__sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }$/;"	f	struct:std::basic_string::__sv_wrapper	typeref:typename:_GLIBCXX20_CONSTEXPR
__sv_wrapper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      struct __sv_wrapper$/;"	s	class:std::basic_string
__sys_clock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using __sys_clock = chrono::system_clock;$/;"	t	struct:std::filesystem::__file_clock	typeref:typename:chrono::system_clock
__sys_time	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  using __sys_time = chrono::time_point<__sys_clock, _Dur>;$/;"	t	function:std::filesystem::__file_clock::_S_to_sys	typeref:typename:chrono::time_point<__sys_clock,_Dur>
__syscall_slong_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __SYSCALL_SLONG_TYPE __syscall_slong_t;$/;"	v	typeref:typename:__STD_TYPE __SYSCALL_SLONG_TYPE
__syscall_ulong_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __SYSCALL_ULONG_TYPE __syscall_ulong_t;$/;"	v	typeref:typename:__STD_TYPE __SYSCALL_ULONG_TYPE
__tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^      using __tag = typename __result::__invoke_type;$/;"	t	function:std::__invoke	typeref:typename:__result::__invoke_type
__tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^      using __tag = typename __result::__invoke_type;$/;"	t	function:std::__invoke_r	typeref:typename:__result::__invoke_type
__terminate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^  inline void __terminate() _GLIBCXX_USE_NOEXCEPT$/;"	f	namespace:std	typeref:typename:void
__thrd_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^typedef unsigned long int __thrd_t;$/;"	t	typeref:typename:unsigned long int
__throw_bad_weak_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^  __throw_bad_weak_ptr()$/;"	f	namespace:std	typeref:typename:void
__throw_concurrence_broadcast_error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  __throw_concurrence_broadcast_error()$/;"	f	namespace:__gnu_cxx	typeref:typename:void
__throw_concurrence_lock_error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  __throw_concurrence_lock_error()$/;"	f	namespace:__gnu_cxx	typeref:typename:void
__throw_concurrence_unlock_error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  __throw_concurrence_unlock_error()$/;"	f	namespace:__gnu_cxx	typeref:typename:void
__throw_concurrence_wait_error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^  __throw_concurrence_wait_error()$/;"	f	namespace:__gnu_cxx	typeref:typename:void
__throw_exception_again	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_defines.h	/^# define __throw_exception_again /;"	d
__throw_exception_again	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_defines.h	/^# define __throw_exception_again$/;"	d
__throw_regex_error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^    __throw_regex_error(error_type __ecode __attribute__((__unused__)),$/;"	f	namespace:std	typeref:typename:void
__throw_with_nested_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^    __throw_with_nested_impl(_Tp&& __t, false_type)$/;"	f	namespace:std	typeref:typename:void
__throw_with_nested_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^    __throw_with_nested_impl(_Tp&& __t, true_type)$/;"	f	namespace:std	typeref:typename:void
__time64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^# define __time64_t /;"	d
__time64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __TIME64_T_TYPE __time64_t;$/;"	v	typeref:typename:__STD_TYPE __TIME64_T_TYPE
__time_get_state	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^  struct __time_get_state$/;"	s	namespace:std
__time_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef time_point<_Clock, _ToDur>			__time_point;$/;"	t	function:std::chrono::time_point_cast	typeref:typename:time_point<_Clock,_ToDur>
__time_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef time_point<_Clock, __ct>			__time_point;$/;"	t	function:std::chrono::operator +	typeref:typename:time_point<_Clock,__ct>
__time_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef time_point<_Clock, __ct>			__time_point;$/;"	t	function:std::chrono::operator -	typeref:typename:time_point<_Clock,__ct>
__time_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __TIME_T_TYPE __time_t;	\/* Seconds since the Epoch.  *\/$/;"	v	typeref:typename:__STD_TYPE __TIME_T_TYPE
__time_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@time_t.h	/^#define __time_t_defined /;"	d
__timepoint_common_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    struct __timepoint_common_type$/;"	s	namespace:std
__timepoint_common_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    struct __timepoint_common_type<_CT, _Clock, __void_t<typename _CT::type>>$/;"	s	namespace:std
__timepunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    class __timepunct : public locale::facet$/;"	c	namespace:std
__timepunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@time_members.h	/^    __timepunct<_CharT>::__timepunct(__c_locale __cloc, const char* __s,$/;"	f	class:std::__timepunct
__timepunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@time_members.h	/^    __timepunct<_CharT>::__timepunct(__cache_type* __cache, size_t __refs)$/;"	f	class:std::__timepunct
__timepunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@time_members.h	/^    __timepunct<_CharT>::__timepunct(size_t __refs)$/;"	f	class:std::__timepunct	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION
__timepunct_cache	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      __timepunct_cache(size_t __refs = 0) : facet(__refs),$/;"	f	struct:std::__timepunct_cache
__timepunct_cache	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    struct __timepunct_cache : public locale::facet$/;"	s	namespace:std
__timer_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __TIMER_T_TYPE __timer_t;$/;"	v	typeref:typename:__STD_TYPE __TIMER_T_TYPE
__timer_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@timer_t.h	/^#define __timer_t_defined /;"	d
__timeval_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_timeval.h	/^#define __timeval_defined /;"	d
__tm_gmtoff	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_tm.h	/^  long int __tm_gmtoff;		\/* Seconds east of UTC.  *\/$/;"	m	struct:tm	typeref:typename:long int
__tm_zone	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_tm.h	/^  const char *__tm_zone;	\/* Timezone abbreviation.  *\/$/;"	m	struct:tm	typeref:typename:const char *
__tmp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	_Iterator __tmp = current;$/;"	m	class:std::reverse_iterator	typeref:typename:_Iterator
__to_address	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    __to_address(_Tp* __ptr) noexcept$/;"	f	namespace:std	typeref:typename:_Tp *
__to_address	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    __to_address(const _Ptr& __ptr) noexcept$/;"	f	namespace:std	typeref:typename:auto
__to_address	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    __to_address(const _Ptr& __ptr)$/;"	f	namespace:std	typeref:typename:std::pointer_traits<_Ptr>::element_type *
__to_address	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    __to_address(const _Ptr& __ptr, _None...) noexcept$/;"	f	namespace:std	typeref:typename:auto
__to_address	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    __to_address(const __gnu_cxx::__normal_iterator<_Iterator,$/;"	f	namespace:std	typeref:typename:auto
__to_chars_10_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@charconv.h	/^    __to_chars_10_impl(char* __first, unsigned __len, _Tp __val) noexcept$/;"	f	namespace:std::__detail	typeref:typename:_GLIBCXX23_CONSTEXPR void
__to_chars_len	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@charconv.h	/^    __to_chars_len(_Tp __value, int __base = 10) noexcept$/;"	f	namespace:std::__detail	typeref:typename:_GLIBCXX14_CONSTEXPR unsigned
__to_period	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  using __to_period = typename _ToDur::period;$/;"	t	function:std::chrono::duration_cast	typeref:typename:_ToDur::period
__to_rep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	    typedef typename _ToDur::rep			__to_rep;$/;"	t	function:std::chrono::__duration_cast_impl::__cast	typeref:typename:_ToDur::rep
__to_rep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  using __to_rep = typename _ToDur::rep;$/;"	t	function:std::chrono::duration_cast	typeref:typename:_ToDur::rep
__to_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_base.h	/^    typedef const int* 		__to_type;$/;"	t	struct:std::ctype_base	typeref:typename:const int *
__to_xstring	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@string_conversions.h	/^    __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,$/;"	f	namespace:__gnu_cxx	typeref:typename:_String
__toascii	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#define	__toascii(/;"	d
__toascii_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#   define __toascii_l(/;"	d
__tobody	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#define __tobody(/;"	d
__tolower_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define __tolower_l(/;"	d
__toupper_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define __toupper_l(/;"	d
__traitor	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __traitor$/;"	s	namespace:std
__traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      typedef allocator_traits<_Alloc> __traits;$/;"	t	function:std::__alloc_on_copy	typeref:typename:allocator_traits<_Alloc>
__traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using __traits = allocator_traits<_Alloc>;$/;"	t	function:std::__alloc_on_copy	typeref:typename:allocator_traits<_Alloc>
__traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using __traits = allocator_traits<_Alloc>;$/;"	t	function:std::__alloc_on_move	typeref:typename:allocator_traits<_Alloc>
__traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using __traits = allocator_traits<_Alloc>;$/;"	t	function:std::__alloc_on_swap	typeref:typename:allocator_traits<_Alloc>
__traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^      typedef std::allocator_traits<_Allocator> __traits;$/;"	t	function:std::__relocate_object_a	typeref:typename:std::allocator_traits<_Allocator>
__traits_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef iterator_traits<_Iterator>		__traits_type;$/;"	t	class:std::reverse_iterator	typeref:typename:iterator_traits<_Iterator>
__traits_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef std::iterator_traits<_Iterator>		__traits_type;$/;"	t	class:__gnu_cxx::__normal_iterator	typeref:typename:std::iterator_traits<_Iterator>
__traits_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using __traits_type = iterator_traits<_Iterator>;$/;"	t	class:std::move_iterator	typeref:typename:iterator_traits<_Iterator>
__transaction_safe_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__transaction_safe_mask = 0x20,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__true_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^  struct __true_type { };$/;"	s	namespace:std
__truth_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __truth_type$/;"	s	namespace:std
__truth_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    struct __truth_type<true>$/;"	s	namespace:std
__try	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_defines.h	/^# define __try /;"	d
__tss_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^typedef unsigned int __tss_t;$/;"	t	typeref:typename:unsigned int
__tuple_element_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    using __tuple_element_t = typename tuple_element<__i, _Tp>::type;$/;"	t	namespace:std	typeref:typename:tuple_element<__i,_Tp>::type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	{ typedef basic_string& __type; };$/;"	t	struct:std::basic_string::__enable_if_not_native_iterator	typeref:typename:basic_string &
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      typedef __false_type __type;$/;"	t	struct:std::__are_same	typeref:typename:__false_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      typedef __false_type __type;$/;"	t	struct:std::__is_byte	typeref:typename:__false_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      typedef __false_type __type;$/;"	t	struct:std::__is_char	typeref:typename:__false_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      typedef __false_type __type;$/;"	t	struct:std::__is_floating	typeref:typename:__false_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      typedef __false_type __type;$/;"	t	struct:std::__is_integer	typeref:typename:__false_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      typedef __false_type __type;$/;"	t	struct:std::__is_move_iterator	typeref:typename:__false_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      typedef __false_type __type;$/;"	t	struct:std::__is_pointer	typeref:typename:__false_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      typedef __false_type __type;$/;"	t	struct:std::__is_void	typeref:typename:__false_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      typedef __true_type __type;$/;"	t	struct:std::__are_same	typeref:typename:__true_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      typedef __true_type __type;$/;"	t	struct:std::__is_byte	typeref:typename:__true_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      typedef __true_type __type;$/;"	t	struct:std::__is_char	typeref:typename:__true_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      typedef __true_type __type;$/;"	t	struct:std::__is_floating	typeref:typename:__true_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      typedef __true_type __type;$/;"	t	struct:std::__is_integer	typeref:typename:__true_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      typedef __true_type __type;$/;"	t	struct:std::__is_pointer	typeref:typename:__true_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      typedef __true_type __type;$/;"	t	struct:std::__is_void	typeref:typename:__true_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      typedef typename __truth_type<__value>::__type __type;$/;"	t	struct:std::__traitor	typeref:typename:__truth_type<__value>::__type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    { typedef __false_type __type; };$/;"	t	struct:std::__truth_type	typeref:typename:__false_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    { typedef __true_type __type; };$/;"	t	struct:std::__truth_type	typeref:typename:__true_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^       using __type = typename underlying_type<_Tp>::type;$/;"	t	function:std::__hash_enum::operator ()	typeref:typename:underlying_type<_Tp>::type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^      using __type = typename __result::type;$/;"	t	function:std::__invoke	typeref:typename:__result::type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^      using __type = typename __result::type;$/;"	t	function:std::__invoke_r	typeref:typename:__result::type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef __true_type __type;$/;"	t	struct:std::__is_move_iterator	typeref:typename:__true_type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^      using __type = __make_integer_seq<_IdxTuple, size_t, _Num>;$/;"	t	struct:std::_Build_index_tuple	typeref:typename:__make_integer_seq<_IdxTuple,size_t,_Num>
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^      typedef __typeof__(_Tp2() + _Up2() + _Vp2() + _Wp2()) __type;$/;"	t	struct:__gnu_cxx::__promote_4
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^      typedef __typeof__(_Tp2() + _Up2() + _Vp2()) __type;$/;"	t	struct:__gnu_cxx::__promote_3
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^      typedef __typeof__(_Tp2() + _Up2()) __type;$/;"	t	struct:__gnu_cxx::__promote_2
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^      typedef typename __if_type::__type __type; $/;"	t	struct:__gnu_cxx::__add_unsigned	typeref:typename:__if_type::__type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^      typedef typename __if_type::__type __type; $/;"	t	struct:__gnu_cxx::__remove_unsigned	typeref:typename:__if_type::__type
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef _Float128 __type; };$/;"	t	struct:__gnu_cxx::__promote	typeref:typename:_Float128
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef _Float16 __type; };$/;"	t	struct:__gnu_cxx::__promote	typeref:typename:_Float16
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef _Float32 __type; };$/;"	t	struct:__gnu_cxx::__promote	typeref:typename:_Float32
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef _Float64 __type; };$/;"	t	struct:__gnu_cxx::__promote	typeref:typename:_Float64
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef _Iffalse __type; };$/;"	t	struct:__gnu_cxx::__conditional_type	typeref:typename:_Iffalse
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef _Iftrue __type; };$/;"	t	struct:__gnu_cxx::__conditional_type	typeref:typename:_Iftrue
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef _Tp __type; };$/;"	t	struct:__gnu_cxx::__enable_if	typeref:typename:_Tp
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef __gnu_cxx::__bfloat16_t __type; };$/;"	t	struct:__gnu_cxx::__promote	typeref:typename:__gnu_cxx::__bfloat16_t
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef double __type; };$/;"	t	struct:__gnu_cxx::__promote	typeref:typename:double
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef float __type; };$/;"	t	struct:__gnu_cxx::__promote	typeref:typename:float
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef int __type; };$/;"	t	struct:__gnu_cxx::__remove_unsigned	typeref:typename:int
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef long __type; };$/;"	t	struct:__gnu_cxx::__remove_unsigned	typeref:typename:long
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef long double __type; };$/;"	t	struct:__gnu_cxx::__promote	typeref:typename:long double
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef long long __type; };$/;"	t	struct:__gnu_cxx::__remove_unsigned	typeref:typename:long long
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef short __type; };$/;"	t	struct:__gnu_cxx::__remove_unsigned	typeref:typename:short
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef signed char __type; };$/;"	t	struct:__gnu_cxx::__remove_unsigned	typeref:typename:signed char
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef unsigned char __type; };$/;"	t	struct:__gnu_cxx::__add_unsigned	typeref:typename:unsigned char
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef unsigned int __type; };$/;"	t	struct:__gnu_cxx::__add_unsigned	typeref:typename:unsigned int
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef unsigned long __type; };$/;"	t	struct:__gnu_cxx::__add_unsigned	typeref:typename:unsigned long
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef unsigned long long __type; };$/;"	t	struct:__gnu_cxx::__add_unsigned	typeref:typename:unsigned long long
__type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@type_traits.h	/^    { typedef unsigned short __type; };$/;"	t	struct:__gnu_cxx::__add_unsigned	typeref:typename:unsigned short
__u_char	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef unsigned char __u_char;$/;"	t	typeref:typename:unsigned char
__u_char_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^#  define __u_char_defined$/;"	d
__u_int	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef unsigned int __u_int;$/;"	t	typeref:typename:unsigned int
__u_long	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef unsigned long int __u_long;$/;"	t	typeref:typename:unsigned long int
__u_quad_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__extension__ typedef unsigned long long int __u_quad_t;$/;"	t	typeref:typename:unsigned long long int
__u_quad_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef unsigned long int __u_quad_t;$/;"	t	typeref:typename:unsigned long int
__u_short	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef unsigned short int __u_short;$/;"	t	typeref:typename:unsigned short int
__uc_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^	__uc_type;$/;"	t	function:std::shuffle	typeref:typename:common_type<typename _Gen::result_type,__ud_type>::type
__uc_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      using __uc_type = common_type_t<typename _Gen::result_type, _USize>;$/;"	t	function:std::__sample	typeref:typename:common_type_t<typename _Gen::result_type,_USize>
__ucr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^        __ucr(_Pointer __first, _Pointer __last,$/;"	f	struct:std::__uninitialized_construct_buf_dispatch	typeref:typename:void
__ucr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^        __ucr(_Pointer, _Pointer, _ForwardIterator) { }$/;"	f	struct:std::__uninitialized_construct_buf_dispatch	typeref:typename:void
__uctype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	typedef typename common_type<_Gresult_type, __utype>::type __uctype;$/;"	t	function:std::uniform_int_distribution::__generate_impl	typeref:typename:common_type<_Gresult_type,__utype>::type
__uctype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	typedef typename common_type<_Gresult_type, __utype>::type __uctype;$/;"	t	function:std::uniform_int_distribution::operator ()	typeref:typename:common_type<_Gresult_type,__utype>::type
__ud_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^      typedef typename std::make_unsigned<_DistanceType>::type __ud_type;$/;"	t	function:std::shuffle	typeref:typename:std::make_unsigned<_DistanceType>::type
__uid_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __UID_T_TYPE __uid_t;	\/* Type of user identifications.  *\/$/;"	v	typeref:typename:__STD_TYPE __UID_T_TYPE
__uid_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^# define __uid_t_defined$/;"	d
__uint16_identity	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@uintn-identity.h	/^__uint16_identity (__uint16_t __x)$/;"	f	typeref:typename:__uint16_t
__uint16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef unsigned short int __uint16_t;$/;"	t	typeref:typename:unsigned short int
__uint32_identity	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@uintn-identity.h	/^__uint32_identity (__uint32_t __x)$/;"	f	typeref:typename:__uint32_t
__uint32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef unsigned int __uint32_t;$/;"	t	typeref:typename:unsigned int
__uint32_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __uint32_t_defined$/;"	d
__uint64_identity	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@uintn-identity.h	/^__uint64_identity (__uint64_t __x)$/;"	f	typeref:typename:__uint64_t
__uint64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__extension__ typedef unsigned long long int __uint64_t;$/;"	t	typeref:typename:unsigned long long int
__uint64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef unsigned long int __uint64_t;$/;"	t	typeref:typename:unsigned long int
__uint8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef unsigned char __uint8_t;$/;"	t	typeref:typename:unsigned char
__uint_c	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^#define __uint_c(/;"	d
__uint_least16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef __uint16_t __uint_least16_t;$/;"	t	typeref:typename:__uint16_t
__uint_least16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __uint_least16_t /;"	d
__uint_least32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef __uint32_t __uint_least32_t;$/;"	t	typeref:typename:__uint32_t
__uint_least32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __uint_least32_t /;"	d
__uint_least64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef __uint64_t __uint_least64_t;$/;"	t	typeref:typename:__uint64_t
__uint_least64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __uint_least64_t /;"	d
__uint_least8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef __uint8_t __uint_least8_t;$/;"	t	typeref:typename:__uint8_t
__uint_least8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^# define __uint_least8_t /;"	d
__uintmax_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__extension__ typedef unsigned long long int __uintmax_t;$/;"	t	typeref:typename:unsigned long long int
__uintmax_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^typedef unsigned long int __uintmax_t;$/;"	t	typeref:typename:unsigned long int
__ull_constant	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^    using __ull_constant = integral_constant<unsigned long long, _Val>;$/;"	t	namespace:std::__parse_int	typeref:typename:integral_constant<unsigned long long,_Val>
__unguarded_insertion_sort	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __unguarded_insertion_sort(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__unguarded_linear_insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __unguarded_linear_insert(_RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__unguarded_partition	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __unguarded_partition(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _RandomAccessIterator
__unguarded_partition_pivot	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __unguarded_partition_pivot(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _RandomAccessIterator
__uninit_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^        __uninit_copy(_InputIterator __first, _InputIterator __last,$/;"	f	struct:std::__uninitialized_copy	typeref:typename:_ForwardIterator
__uninit_default	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^        __uninit_default(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	struct:std::__uninitialized_default_1	typeref:typename:void
__uninit_default_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^        __uninit_default_n(_ForwardIterator __first, _Size __n)$/;"	f	struct:std::__uninitialized_default_n_1	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__uninit_default_novalue	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^	__uninit_default_novalue(_ForwardIterator __first,$/;"	f	struct:std::__uninitialized_default_novalue_1	typeref:typename:void
__uninit_default_novalue	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^        __uninit_default_novalue(_ForwardIterator __first,$/;"	f	struct:std::__uninitialized_default_novalue_1	typeref:typename:void
__uninit_default_novalue_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)$/;"	f	struct:std::__uninitialized_default_novalue_n_1	typeref:typename:_ForwardIterator
__uninit_fill	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^        __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	struct:std::__uninitialized_fill	typeref:typename:void
__uninit_fill_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^        __uninit_fill_n(_ForwardIterator __first, _Size __n,$/;"	f	struct:std::__uninitialized_fill_n	typeref:typename:_ForwardIterator
__uninitialized_construct_buf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^    __uninitialized_construct_buf(_Pointer __first, _Pointer __last,$/;"	f	namespace:std	typeref:typename:void
__uninitialized_construct_buf_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^    struct __uninitialized_construct_buf_dispatch$/;"	s	namespace:std
__uninitialized_construct_buf_dispatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^    struct __uninitialized_construct_buf_dispatch<true>$/;"	s	namespace:std
__uninitialized_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    struct __uninitialized_copy$/;"	s	namespace:std
__uninitialized_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    struct __uninitialized_copy<true>$/;"	s	namespace:std
__uninitialized_copy_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__uninitialized_copy_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_copy_move(_InputIterator1 __first1,$/;"	f	namespace:std	typeref:typename:_ForwardIterator
__uninitialized_copy_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_copy_n(_InputIterator __first, _Size __n,$/;"	f	namespace:std	typeref:typename:_ForwardIterator
__uninitialized_copy_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_copy_n(_RandomAccessIterator __first, _Size __n,$/;"	f	namespace:std	typeref:typename:_ForwardIterator
__uninitialized_copy_n_pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,$/;"	f	namespace:std	typeref:typename:pair<_InputIterator,_ForwardIterator>
__uninitialized_copy_n_pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_copy_n_pair(_RandomAccessIterator __first, _Size __n,$/;"	f	namespace:std	typeref:typename:pair<_RandomAccessIterator,_ForwardIterator>
__uninitialized_default	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_default(_ForwardIterator __first,$/;"	f	namespace:std	typeref:typename:void
__uninitialized_default_1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    struct __uninitialized_default_1$/;"	s	namespace:std
__uninitialized_default_1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    struct __uninitialized_default_1<true>$/;"	s	namespace:std
__uninitialized_default_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_default_a(_ForwardIterator __first,$/;"	f	namespace:std	typeref:typename:void
__uninitialized_default_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_default_n(_ForwardIterator __first, _Size __n)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__uninitialized_default_n_1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    struct __uninitialized_default_n_1$/;"	s	namespace:std
__uninitialized_default_n_1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    struct __uninitialized_default_n_1<true>$/;"	s	namespace:std
__uninitialized_default_n_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__uninitialized_default_novalue	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_default_novalue(_ForwardIterator __first,$/;"	f	namespace:std	typeref:typename:void
__uninitialized_default_novalue_1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    struct __uninitialized_default_novalue_1$/;"	s	namespace:std
__uninitialized_default_novalue_1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    struct __uninitialized_default_novalue_1<true>$/;"	s	namespace:std
__uninitialized_default_novalue_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_default_novalue_n(_ForwardIterator __first, _Size __n)$/;"	f	namespace:std	typeref:typename:_ForwardIterator
__uninitialized_default_novalue_n_1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    struct __uninitialized_default_novalue_n_1$/;"	s	namespace:std
__uninitialized_default_novalue_n_1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    struct __uninitialized_default_novalue_n_1<true>$/;"	s	namespace:std
__uninitialized_fill	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    struct __uninitialized_fill$/;"	s	namespace:std
__uninitialized_fill	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    struct __uninitialized_fill<true>$/;"	s	namespace:std
__uninitialized_fill_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
__uninitialized_fill_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid,$/;"	f	namespace:std	typeref:typename:_ForwardIterator
__uninitialized_fill_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    struct __uninitialized_fill_n$/;"	s	namespace:std
__uninitialized_fill_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    struct __uninitialized_fill_n<true>$/;"	s	namespace:std
__uninitialized_fill_n_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__uninitialized_move_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_move_a(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__uninitialized_move_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_move_copy(_InputIterator1 __first1,$/;"	f	namespace:std	typeref:typename:_ForwardIterator
__uninitialized_move_fill	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1,$/;"	f	namespace:std	typeref:typename:void
__uninitialized_move_if_noexcept_a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    __uninitialized_move_if_noexcept_a(_InputIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__uniq_ptr_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>$/;"	s	namespace:std
__uniq_ptr_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    struct __uniq_ptr_data<_Tp, _Dp, false, false> : __uniq_ptr_impl<_Tp, _Dp>$/;"	s	namespace:std
__uniq_ptr_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    struct __uniq_ptr_data<_Tp, _Dp, false, true> : __uniq_ptr_impl<_Tp, _Dp>$/;"	s	namespace:std
__uniq_ptr_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    struct __uniq_ptr_data<_Tp, _Dp, true, false> : __uniq_ptr_impl<_Tp, _Dp>$/;"	s	namespace:std
__uniq_ptr_hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    struct __uniq_ptr_hash$/;"	s	namespace:std
__uniq_ptr_hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    struct __uniq_ptr_hash<_Up, _Ptr, false>$/;"	s	namespace:std
__uniq_ptr_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	__uniq_ptr_impl(pointer __p, _Del&& __d)$/;"	f	class:std::__uniq_ptr_impl	typeref:typename:_GLIBCXX23_CONSTEXPR
__uniq_ptr_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      __uniq_ptr_impl(__uniq_ptr_impl&& __u) noexcept$/;"	f	class:std::__uniq_ptr_impl	typeref:typename:_GLIBCXX23_CONSTEXPR
__uniq_ptr_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }$/;"	f	class:std::__uniq_ptr_impl	typeref:typename:_GLIBCXX23_CONSTEXPR
__uniq_ptr_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    class __uniq_ptr_impl$/;"	c	namespace:std
__unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __unique(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__unique_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __unique_copy(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
__unique_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__unique_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
__unique_ptr_array_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    using __unique_ptr_array_t = typename _MakeUniq<_Tp>::__array;$/;"	t	namespace:std::__detail	typeref:typename:_MakeUniq<_Tp>::__array
__unique_ptr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    using __unique_ptr_t = typename _MakeUniq<_Tp>::__single_object;$/;"	t	namespace:std::__detail	typeref:typename:_MakeUniq<_Tp>::__single_object
__unknown	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__unknown = 0,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__upper_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    __upper_bound(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
__usable_key	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	static constexpr bool __usable_key$/;"	m	class:std::map	typeref:typename:bool
__use_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    __use_alloc(const _Alloc& __a)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR __uses_alloc_t<_Tp,_Alloc,_Args...>
__use_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	  using __use_tag$/;"	t	function:std::pmr::polymorphic_allocator::construct	typeref:typename:std::__uses_alloc_t<_Tp1,polymorphic_allocator,_Args...>
__useconds_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types.h	/^__STD_TYPE __USECONDS_T_TYPE __useconds_t; \/* Count of microseconds.  *\/$/;"	v	typeref:typename:__STD_TYPE __USECONDS_T_TYPE
__useconds_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^#  define __useconds_t_defined$/;"	d
__uses_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    struct __uses_alloc<false, _Tp, _Alloc, _Args...>$/;"	s	namespace:std
__uses_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    struct __uses_alloc<true, _Tp, _Alloc, _Args...>$/;"	s	namespace:std
__uses_alloc0	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^  struct __uses_alloc0 : __uses_alloc_base$/;"	s	namespace:std
__uses_alloc1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    struct __uses_alloc1 : __uses_alloc_base { const _Alloc* _M_a; };$/;"	s	namespace:std
__uses_alloc1_	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      using __uses_alloc1_ = __uses_alloc1<polymorphic_allocator>;$/;"	t	class:std::pmr::polymorphic_allocator	typeref:typename:__uses_alloc1<polymorphic_allocator>
__uses_alloc2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    struct __uses_alloc2 : __uses_alloc_base { const _Alloc* _M_a; };$/;"	s	namespace:std
__uses_alloc2_	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      using __uses_alloc2_ = __uses_alloc2<polymorphic_allocator>;$/;"	t	class:std::pmr::polymorphic_allocator	typeref:typename:__uses_alloc2<polymorphic_allocator>
__uses_alloc_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^  struct __uses_alloc_base { };$/;"	s	namespace:std
__uses_alloc_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    using __uses_alloc_t =$/;"	t	namespace:std	typeref:typename:__uses_alloc<uses_allocator<_Tp,_Alloc>::value,_Tp,_Alloc,_Args...>
__uses_allocator_construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    void __uses_allocator_construct(const _Alloc& __a, _Tp* __ptr,$/;"	f	namespace:std	typeref:typename:void
__uses_allocator_construct_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    void __uses_allocator_construct_impl(__uses_alloc0 __a, _Tp* __ptr,$/;"	f	namespace:std	typeref:typename:void
__uses_allocator_construct_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    void __uses_allocator_construct_impl(__uses_alloc1<_Alloc> __a, _Tp* __ptr,$/;"	f	namespace:std	typeref:typename:void
__uses_allocator_construct_impl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    void __uses_allocator_construct_impl(__uses_alloc2<_Alloc> __a, _Tp* __ptr,$/;"	f	namespace:std	typeref:typename:void
__uses_allocator_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    struct __uses_allocator_helper$/;"	s	namespace:std
__uses_allocator_helper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    struct __uses_allocator_helper<_Tp, _Alloc,$/;"	s	namespace:std
__utype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	typedef typename make_unsigned<result_type>::type __utype;$/;"	t	function:std::uniform_int_distribution::__generate_impl	typeref:typename:make_unsigned<result_type>::type
__utype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	typedef typename make_unsigned<result_type>::type __utype;$/;"	t	function:std::uniform_int_distribution::operator ()	typeref:typename:make_unsigned<result_type>::type
__v_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using __v_pointer = typename _Tp::void_pointer;$/;"	t	struct:std::__allocator_traits_base	typeref:typename:_Tp::void_pointer
__va_arg_pack	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __va_arg_pack(/;"	d
__va_arg_pack_len	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __va_arg_pack_len(/;"	d
__va_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdarg.h	/^#define __va_copy(/;"	d
__val	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__sigset_t.h	/^  unsigned long int __val[_SIGSET_NWORDS];$/;"	m	struct:__anonaed0cf220108	typeref:typename:unsigned long int[]
__val_comp_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    __val_comp_iter(_Compare __comp)$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX20_CONSTEXPR _Val_comp_iter<_Compare>
__val_comp_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^    __val_comp_iter(_Iter_comp_iter<_Compare> __comp)$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX20_CONSTEXPR _Val_comp_iter<_Compare>
__val_comp_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^  __val_comp_iter(_Iter_less_iter)$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX20_CONSTEXPR _Val_less_iter
__val_less_iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^  __val_less_iter()$/;"	f	namespace:__gnu_cxx::__ops	typeref:typename:_GLIBCXX20_CONSTEXPR _Val_less_iter
__valid	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^      using __valid = false_type;$/;"	t	struct:std::__parse_int::_Digit	typeref:typename:false_type
__valid	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^      using __valid = true_type;$/;"	t	struct:std::__parse_int::_Digit	typeref:typename:true_type
__valid	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^      using __valid = true_type;$/;"	t	struct:std::__parse_int::_Digit_impl	typeref:typename:true_type
__valid_digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^      using __valid_digit = typename _Digit<_Base, _Dig>::__valid;$/;"	t	struct:std::__parse_int::_Power_help	typeref:typename:_Digit<_Base,_Dig>::__valid
__valid_digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^      using __valid_digit = typename __digit::__valid;$/;"	t	struct:std::__parse_int::_Number_help	typeref:typename:__digit::__valid
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__mbstate_t.h	/^  } __value;		\/* Value so far.  *\/$/;"	m	struct:__anon7b04dba30108	typeref:union:__anon7b04dba30108::__anon7b04dba3020a
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	e	enum:std::__are_same::__anond1e051230203
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	e	enum:std::__is_byte::__anond1e051232503
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	e	enum:std::__is_char::__anond1e051232203
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	e	enum:std::__is_floating::__anond1e051231703
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	e	enum:std::__is_integer::__anond1e051230603
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	e	enum:std::__is_move_iterator::__anond1e051232f03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	e	enum:std::__is_nonvolatile_trivially_copyable::__anond1e051232c03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	e	enum:std::__is_pointer::__anond1e051232003
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	e	enum:std::__is_void::__anond1e051230403
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	e	enum:std::__memcmpable::__anond1e051232e03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 0 };$/;"	e	enum:std::__memcpyable::__anond1e051232d03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__are_same::__anond1e051230303
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_byte::__anond1e051232603
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_byte::__anond1e051232703
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_byte::__anond1e051232803
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_byte::__anond1e051232903
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_byte::__anond1e051232a03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_char::__anond1e051232303
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_char::__anond1e051232403
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_floating::__anond1e051231803
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_floating::__anond1e051231903
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_floating::__anond1e051231a03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_floating::__anond1e051231b03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_floating::__anond1e051231c03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_floating::__anond1e051231d03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_floating::__anond1e051231e03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_floating::__anond1e051231f03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_integer::__anond1e051230703
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_integer::__anond1e051230803
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_integer::__anond1e051230903
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_integer::__anond1e051230a03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_integer::__anond1e051230b03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_integer::__anond1e051230c03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_integer::__anond1e051230d03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_integer::__anond1e051230e03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_integer::__anond1e051230f03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_integer::__anond1e051231003
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_integer::__anond1e051231103
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_integer::__anond1e051231203
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_integer::__anond1e051231303
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_integer::__anond1e051231403
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_integer::__anond1e051231503
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_integer::__anond1e051231603
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_pointer::__anond1e051232103
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_void::__anond1e051230503
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = __is_trivially_copyable(_Tp) };$/;"	e	enum:std::__is_nonvolatile_trivially_copyable::__anond1e051232b03
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      enum { __value = bool(_Sp::__value) || bool(_Tp::__value) };$/;"	e	enum:std::__traitor::__anond1e051230103
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      static const bool __value = _Tp(-1) > _Tp(1); \/\/ is unsigned$/;"	m	struct:std::__is_memcmp_ordered	typeref:typename:const bool
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      static const bool __value = __is_memcmp_ordered<_Tp>::__value$/;"	m	struct:std::__is_memcmp_ordered_with	typeref:typename:const bool
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      static const bool __value = false;$/;"	m	struct:std::__is_memcmp_ordered	typeref:typename:const bool
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^      static const bool __value = false;$/;"	m	struct:std::__is_memcmp_ordered_with	typeref:typename:const bool
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    { static constexpr bool __value = false; };$/;"	m	struct:std::__is_memcmp_ordered_with	typeref:typename:bool
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    { static constexpr bool __value = true; };$/;"	m	struct:std::__is_memcmp_ordered	typeref:typename:bool
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^    { static constexpr bool __value = true; };$/;"	m	struct:std::__is_memcmp_ordered_with	typeref:typename:bool
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      enum { __value = 1 };$/;"	e	enum:std::__is_move_iterator::__anoncd57ede50203
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      enum { __value = _Base::value };$/;"	e	enum:std::__is_random_access_iter::__anon89c730530103
__value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^    { enum { __value = __is_base_of(random_access_iterator_tag, _Cat) }; };$/;"	e	enum:std::__is_random_access_iter::__anon89c730530203
__value32	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@atomic_wide_counter.h	/^  } __value32;$/;"	m	union:__anon4e7740d1010a	typeref:struct:__anon4e7740d1010a::__anon4e7740d10208
__value64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@atomic_wide_counter.h	/^  __extension__ unsigned long long int __value64;$/;"	m	union:__anon4e7740d1010a	typeref:typename:__extension__ unsigned long long int
__variant	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  namespace __detail::__variant$/;"	n	namespace:std::__detail
__variant	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^  namespace __detail::__variant$/;"	n	namespace:std::__detail
__variant	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^  namespace __detail::__variant$/;"	n	namespace:std::__detail
__variant	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^  namespace __detail::__variant$/;"	n	namespace:std::__detail
__variant	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^  namespace __detail::__variant$/;"	n	namespace:std::__detail
__virtual_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__virtual_mask = 0x1,$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__vmi_class_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^    __vmi_class_type_info(const char* __n, int ___flags)$/;"	f	class:__cxxabiv1::__vmi_class_type_info
__vmi_class_type_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^  class __vmi_class_type_info : public __class_type_info$/;"	c	namespace:__cxxabiv1
__volatile_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^	__volatile_mask = 0x2,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__warnattr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __warnattr(/;"	d
__wch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__mbstate_t.h	/^    __WINT_TYPE__ __wch;$/;"	m	union:__anon7b04dba30108::__anon7b04dba3020a	typeref:typename:__WINT_TYPE__
__wchb	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@__mbstate_t.h	/^    char __wchb[4];$/;"	m	union:__anon7b04dba30108::__anon7b04dba3020a	typeref:typename:char[4]
__weak_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      __weak_count(__weak_count&& __r) noexcept$/;"	f	class:std::__weak_count
__weak_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      __weak_count(const __shared_count<_Lp>& __r) noexcept$/;"	f	class:std::__weak_count
__weak_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      __weak_count(const __weak_count& __r) noexcept$/;"	f	class:std::__weak_count
__weak_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      constexpr __weak_count() noexcept : _M_pi(nullptr)$/;"	f	class:std::__weak_count
__weak_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    class __weak_count$/;"	c	namespace:std
__weak_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__weak_ptr(__weak_ptr<_Yp, _Lp>&& __r) noexcept$/;"	f	class:std::__weak_ptr
__weak_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__weak_ptr(const __shared_ptr<_Yp, _Lp>& __r) noexcept$/;"	f	class:std::__weak_ptr
__weak_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	__weak_ptr(const __weak_ptr<_Yp, _Lp>& __r) noexcept$/;"	f	class:std::__weak_ptr
__weak_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      __weak_ptr(__weak_ptr&& __r) noexcept$/;"	f	class:std::__weak_ptr
__weak_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      constexpr __weak_ptr() noexcept$/;"	f	class:std::__weak_ptr
__weak_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    class __weak_ptr$/;"	c	namespace:std
__width	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@numeric_traits.h	/^      enum { __width = __value ? sizeof(_Tp) * __CHAR_BIT__ : 0 };$/;"	e	enum:__gnu_cxx::__is_integer_nonstrict::__anon10c6f9110103
__wint_t_defined	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@wint_t.h	/^#define __wint_t_defined /;"	d
__wmask_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      typedef wctype_t		__wmask_type;$/;"	t	class:std::ctype	typeref:typename:wctype_t
__wrefs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^  unsigned int __wrefs;$/;"	m	struct:__pthread_cond_s	typeref:typename:unsigned int
__write	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    __write(_OutIter __s, const _CharT* __ws, int __len)$/;"	f	namespace:std	typeref:typename:_OutIter
__write	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)$/;"	f	namespace:std	typeref:typename:ostreambuf_iterator<_CharT>
__writers	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^  unsigned int __writers;$/;"	m	struct:__pthread_rwlock_arch_t	typeref:typename:unsigned int
__writers_futex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^  unsigned int __writers_futex;$/;"	m	struct:__pthread_rwlock_arch_t	typeref:typename:unsigned int
__wrphase_futex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@struct_rwlock.h	/^  unsigned int __wrphase_futex;$/;"	m	struct:__pthread_rwlock_arch_t	typeref:typename:unsigned int
__wseq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@thread-shared-types.h	/^  __atomic_wide_counter __wseq;$/;"	m	struct:__pthread_cond_s	typeref:typename:__atomic_wide_counter
__wur	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^#  define __wur /;"	d
__wur	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@cdefs.h	/^# define __wur /;"	d
__x	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    unsigned short int __x[3];	\/* Current state.  *\/$/;"	m	struct:drand48_data	typeref:typename:unsigned short int[3]
__xor_fetch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      __xor_fetch(_Tp* __ptr, _Val<_Tp> __i) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE _Tp
_chain	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  struct _IO_FILE *_chain;$/;"	m	struct:_IO_FILE	typeref:struct:_IO_FILE *
_codecvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  struct _IO_codecvt *_codecvt;$/;"	m	struct:_IO_FILE_complete	typeref:struct:_IO_codecvt *
_cur_column	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  unsigned short _cur_column;$/;"	m	struct:_IO_FILE	typeref:typename:unsigned short
_file	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  struct _IO_FILE _file;$/;"	m	struct:_IO_FILE_complete	typeref:struct:_IO_FILE
_fileno	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  int _fileno;$/;"	m	struct:_IO_FILE	typeref:typename:int
_flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  int _flags;		\/* High-order word is _IO_MAGIC; rest is flags. *\/$/;"	m	struct:_IO_FILE	typeref:typename:int
_flags2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  int _flags2;$/;"	m	struct:_IO_FILE	typeref:typename:int
_freeres_buf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  void *_freeres_buf;$/;"	m	struct:_IO_FILE_complete	typeref:typename:void *
_freeres_list	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  struct _IO_FILE *_freeres_list;$/;"	m	struct:_IO_FILE_complete	typeref:struct:_IO_FILE *
_lock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  _IO_lock_t *_lock;$/;"	m	struct:_IO_FILE	typeref:typename:_IO_lock_t *
_markers	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  struct _IO_marker *_markers;$/;"	m	struct:_IO_FILE	typeref:struct:_IO_marker *
_mode	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  int _mode;$/;"	m	struct:_IO_FILE_complete	typeref:typename:int
_objc_thread_attribs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^static pthread_attr_t _objc_thread_attribs;$/;"	v	typeref:typename:pthread_attr_t
_objc_thread_storage	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^static pthread_key_t _objc_thread_storage;$/;"	v	typeref:typename:pthread_key_t
_offset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  __off64_t _offset;$/;"	m	struct:_IO_FILE_complete	typeref:typename:__off64_t
_old_offset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  __off_t _old_offset; \/* This used to be _offset but it's too small.  *\/$/;"	m	struct:_IO_FILE	typeref:typename:__off_t
_pthread_cleanup_buffer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^struct _pthread_cleanup_buffer$/;"	s
_shortbuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  char _shortbuf[1];$/;"	m	struct:_IO_FILE	typeref:typename:char[1]
_tolower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define _tolower(c)	((int) (*__ctype_tolower_/;"	d
_toupper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define _toupper(c)	((int) (*__ctype_toupper_/;"	d
_unused2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];$/;"	m	struct:_IO_FILE_complete	typeref:typename:char[]
_vtable_offset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  signed char _vtable_offset;$/;"	m	struct:_IO_FILE	typeref:typename:signed char
_wide_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_FILE.h	/^  struct _IO_wide_data *_wide_data;$/;"	m	struct:_IO_FILE_complete	typeref:struct:_IO_wide_data *
a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	a() const$/;"	f	struct:std::uniform_int_distribution::param_type	typeref:typename:result_type
a	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      a() const$/;"	f	class:std::uniform_int_distribution	typeref:typename:result_type
abs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      abs(duration<_Rep, _Period> __d)$/;"	f	namespace:std::chrono	typeref:typename:enable_if_t<numeric_limits<_Rep>::is_signed,duration<_Rep,_Period>>
abs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^  abs(_Float128 __x)$/;"	f	namespace:std	typeref:typename:_Float128
abs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^  abs(_Float16 __x)$/;"	f	namespace:std	typeref:typename:_Float16
abs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^  abs(_Float32 __x)$/;"	f	namespace:std	typeref:typename:_Float32
abs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^  abs(_Float64 __x)$/;"	f	namespace:std	typeref:typename:_Float64
abs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^  abs(__GLIBCXX_TYPE_INT_N_0 __x) { return __x >= 0 ? __x : -__x; }$/;"	f	namespace:std	typeref:typename:__extension__ _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_0
abs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^  abs(__GLIBCXX_TYPE_INT_N_1 __x) { return __x >= 0 ? __x : -__x; }$/;"	f	namespace:std	typeref:typename:__extension__ _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_1
abs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^  abs(__GLIBCXX_TYPE_INT_N_2 __x) { return __x >= 0 ? __x : -__x; }$/;"	f	namespace:std	typeref:typename:__extension__ _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_2
abs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^  abs(__GLIBCXX_TYPE_INT_N_3 __x) { return __x >= 0 ? __x : -__x; }$/;"	f	namespace:std	typeref:typename:__extension__ _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_3
abs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^  abs(__float128 __x)$/;"	f	namespace:std	typeref:typename:__extension__ _GLIBCXX_CONSTEXPR __float128
abs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^  abs(__gnu_cxx::__bfloat16_t __x)$/;"	f	namespace:std	typeref:typename:__gnu_cxx::__bfloat16_t
abs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^  abs(double __x)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR double
abs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^  abs(float __x)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR float
abs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^  abs(long __i) { return __builtin_labs(__i); }$/;"	f	namespace:std	typeref:typename:long
abs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^  abs(long double __x)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR long double
abs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^  abs(long long __x) { return __builtin_llabs (__x); }$/;"	f	namespace:std	typeref:typename:long long
abstract_base	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@main.c++	/^class abstract_base : public SAK_DEFAULT_DERIVED( abstract_base )$/;"	c	file:
abstract_base	source/main.c++	/^class abstract_base : public SAK_DEFAULT_DERIVED( abstract_base )$/;"	c	file:
acq_rel	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      acq_rel,$/;"	e	enum:std::memory_order
acquire	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      acquire,$/;"	e	enum:std::memory_order
address	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      address(const_reference __x) const _GLIBCXX_NOEXCEPT$/;"	f	class:std::__new_allocator	typeref:typename:const_pointer
address	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      address(reference __x) const _GLIBCXX_NOEXCEPT$/;"	f	class:std::__new_allocator	typeref:typename:pointer
address_family_not_supported	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      address_family_not_supported = 		EAFNOSUPPORT,$/;"	e	enum:std::errc
address_in_use	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      address_in_use = 				EADDRINUSE,$/;"	e	enum:std::errc
address_not_available	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      address_not_available = 			EADDRNOTAVAIL,$/;"	e	enum:std::errc
addressof	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@move.h	/^    addressof(_Tp& __r) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR _Tp *
adjacent_find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    adjacent_find(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
adjacent_find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    adjacent_find(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
adjustfield	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags adjustfield = _S_adjustfield;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
advance	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_funcs.h	/^    advance(_InputIterator& __i, _Distance __n)$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR void
advance	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^    advance(istreambuf_iterator<_CharT>& __i, _Distance __n)$/;"	f	namespace:std	typeref:typename:__gnu_cxx::__enable_if<__is_char<_CharT>::__value,void>::__type
aisle	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^	unsigned int aisle, shelf;$/;"	m	struct:location	typeref:typename:unsigned int	file:
aisle	tests/sak/parser/test_serial_data.c++	/^	unsigned int aisle, shelf;$/;"	m	struct:location	typeref:typename:unsigned int	file:
align	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@align.h	/^align(size_t __align, size_t __size, void*& __ptr, size_t& __space) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION void *
all	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const category all		= (ctype | numeric | collate |$/;"	m	class:std::locale	typeref:typename:const category
all_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    all_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
alloca	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@alloca.h	/^# define alloca(size)	__builtin_alloca /;"	d
allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      allocate(_Alloc& __a, size_type __n)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR pointer
allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR pointer
allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      allocate(allocator_type& __a, size_type __n)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX20_CONSTEXPR pointer
allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX20_CONSTEXPR pointer
allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      allocate(size_t __n)$/;"	f	class:std::allocator	typeref:typename:_Tp *
allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      allocate(allocator_type& __a, size_type __n)$/;"	f	struct:std::allocator_traits	typeref:typename:pointer
allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      allocate(allocator_type& __a, size_type __n, const_void_pointer)$/;"	f	struct:std::allocator_traits	typeref:typename:pointer
allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      allocate(size_t __n)$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:_Tp *
allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^    allocate(size_t __bytes, size_t __alignment = _S_max_align)$/;"	f	class:std::pmr::memory_resource	typeref:typename:void *
allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      allocate(size_type __n, const void* = static_cast<const void*>(0))$/;"	f	class:std::__new_allocator	typeref:typename:_GLIBCXX_NODISCARD _Tp *
allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^      allocate(_Alloc& __a, size_type __n, _Hint __hint)$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:_GLIBCXX_NODISCARD pointer
allocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    allocate(_Alloc& __a, size_type __n)$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:_GLIBCXX_NODISCARD pointer
allocate_bytes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      allocate_bytes(size_t __nbytes,$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:void *
allocate_object	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	allocate_object(size_t __n = 1)$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:_Up *
allocate_shared	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    allocate_shared(const _Alloc& __a)$/;"	f	namespace:std	typeref:typename:shared_ptr<_BoundedArray<_Tp>>
allocate_shared	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    allocate_shared(const _Alloc& __a, _Args&&... __args)$/;"	f	namespace:std	typeref:typename:shared_ptr<_NonArray<_Tp>>
allocate_shared	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    allocate_shared(const _Alloc& __a, const remove_extent_t<_Tp>& __u)$/;"	f	namespace:std	typeref:typename:shared_ptr<_BoundedArray<_Tp>>
allocate_shared	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    allocate_shared(const _Alloc& __a, size_t __n)$/;"	f	namespace:std	typeref:typename:shared_ptr<_UnboundedArray<_Tp>>
allocate_shared	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    allocate_shared(const _Alloc& __a, size_t __n,$/;"	f	namespace:std	typeref:typename:shared_ptr<_UnboundedArray<_Tp>>
allocate_shared_for_overwrite	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    allocate_shared_for_overwrite(const _Alloc& __a)$/;"	f	namespace:std	typeref:typename:shared_ptr<_NotUnboundedArray<_Tp>>
allocate_shared_for_overwrite	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    allocate_shared_for_overwrite(const _Alloc& __a, size_t __n)$/;"	f	namespace:std	typeref:typename:shared_ptr<_UnboundedArray<_Tp>>
allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }$/;"	f	class:std::allocator	typeref:typename:_GLIBCXX20_CONSTEXPR
allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^	allocator(const allocator<_Up>&) noexcept { }$/;"	f	class:std::allocator
allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      allocator() _GLIBCXX_NOTHROW { }$/;"	f	class:std::allocator	typeref:typename:_GLIBCXX20_CONSTEXPR
allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      allocator(const allocator& __a) _GLIBCXX_NOTHROW$/;"	f	class:std::allocator	typeref:typename:_GLIBCXX20_CONSTEXPR
allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      template<typename _Up> allocator(const allocator<_Up>&) { }$/;"	f	class:std::allocator
allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^    class allocator : public __allocator_base<_Tp>$/;"	c	namespace:std
allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^    class allocator<const _Tp>$/;"	c	namespace:std
allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^    class allocator<const volatile _Tp>$/;"	c	namespace:std
allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^    class allocator<void>$/;"	c	namespace:std
allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^    class allocator<volatile _Tp>$/;"	c	namespace:std
allocator_arg	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^  _GLIBCXX17_INLINE constexpr allocator_arg_t allocator_arg =$/;"	v	namespace:std	typeref:typename:_GLIBCXX17_INLINE allocator_arg_t
allocator_arg_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^  struct allocator_arg_t { explicit allocator_arg_t() = default; };$/;"	s	namespace:std
allocator_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    struct allocator_traits : __allocator_traits_base$/;"	s	namespace:std
allocator_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    struct allocator_traits<allocator<_Tp>>$/;"	s	namespace:std
allocator_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^    struct allocator_traits<allocator<void>>$/;"	s	namespace:std
allocator_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^    struct allocator_traits<pmr::polymorphic_allocator<_Tp>>$/;"	s	namespace:std
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      typedef _Alloc allocator_type;$/;"	t	struct:std::allocator_traits	typeref:typename:_Alloc
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using allocator_type = allocator<_Tp>;$/;"	t	struct:std::allocator_traits	typeref:typename:allocator<_Tp>
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using allocator_type = allocator<void>;$/;"	t	struct:std::allocator_traits	typeref:typename:allocator<void>
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef _Char_alloc_type				allocator_type;$/;"	t	class:std::basic_string	typeref:typename:_Char_alloc_type
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef typename _Str::allocator_type allocator_type;$/;"	t	function:std::__str_concat	typeref:typename:_Str::allocator_type
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      using allocator_type = pmr::polymorphic_allocator<_Tp>;$/;"	t	struct:std::allocator_traits	typeref:typename:pmr::polymorphic_allocator<_Tp>
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      using allocator_type = __alloc_rebind<_NodeAlloc, _Val>;$/;"	t	class:std::_Node_handle_common	typeref:typename:__alloc_rebind<_NodeAlloc,_Val>
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef _Alloc					   allocator_type;$/;"	t	class:std::match_results	typeref:typename:_Alloc
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef _Alloc					allocator_type;$/;"	t	class:std::vector	typeref:typename:_Alloc
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef _Alloc allocator_type;$/;"	t	struct:std::_Bvector_base	typeref:typename:_Alloc
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef _Alloc					allocator_type;$/;"	t	class:std::deque	typeref:typename:_Alloc
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef _Alloc		  allocator_type;$/;"	t	class:std::_Deque_base	typeref:typename:_Alloc
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef _Alloc					allocator_type;$/;"	t	class:std::map	typeref:typename:_Alloc
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Alloc 				allocator_type;$/;"	t	class:std::_Rb_tree	typeref:typename:_Alloc
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      typedef _Alloc					allocator_type;$/;"	t	class:std::vector	typeref:typename:_Alloc
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      typedef _Alloc allocator_type;$/;"	t	struct:std::_Vector_base	typeref:typename:_Alloc
allocator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    typedef _Alloc allocator_type;$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:_Alloc
alnum	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_base.h	/^    static const mask alnum 	= _ISalpha | _ISdigit;$/;"	m	struct:std::ctype_base	typeref:typename:const mask
alpha	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_base.h	/^    static const mask alpha 	= _ISalpha;$/;"	m	struct:std::ctype_base	typeref:typename:const mask
already_connected	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      already_connected = 			EISCONN,$/;"	e	enum:std::errc
always_noconv	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      always_noconv() const throw()$/;"	f	class:std::__codecvt_abstract_base	typeref:typename:bool
amount	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^	unsigned int amount;$/;"	m	class:Fruit	typeref:typename:unsigned int	file:
amount	tests/sak/parser/test_serial_data.c++	/^	unsigned int amount;$/;"	m	class:Fruit	typeref:typename:unsigned int	file:
any_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    any_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
app	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const openmode app =		_S_app;$/;"	m	class:std::ios_base	typeref:typename:const openmode
append	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	append(const _Tp& __svt, size_type __pos, size_type __n = npos)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR _If_sv<_Tp,basic_string &>
append	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^        append(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
append	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^        append(const _Tp& __svt)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR _If_sv<_Tp,basic_string &>
append	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      append(const _CharT* __s)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
append	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      append(const _CharT* __s, size_type __n)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
append	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      append(const basic_string& __str)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
append	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      append(const basic_string& __str, size_type __pos, size_type __n = npos)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
append	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      append(initializer_list<_CharT> __l)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
append	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      append(size_type __n, _CharT __c)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
args_bundle	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serial_data.c++	/^	args_bundle($/;"	f	struct:args_bundle	file:
args_bundle	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serial_data.c++	/^struct args_bundle$/;"	s	file:
args_bundle	source/sak/stream/serial_data.c++	/^	args_bundle($/;"	f	struct:args_bundle	file:
args_bundle	source/sak/stream/serial_data.c++	/^struct args_bundle$/;"	s	file:
argument_list_too_long	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      argument_list_too_long = 			E2BIG,$/;"	e	enum:std::errc
argument_out_of_domain	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      argument_out_of_domain = 			EDOM,$/;"	e	enum:std::errc
argument_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^      typedef typename _Tp::argument_type argument_type;$/;"	t	struct:std::_Refwrap_base_arg1	typeref:typename:_Tp::argument_type
argument_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef _Arg 	argument_type;   $/;"	t	struct:std::unary_function	typeref:typename:_Arg
assert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@assert.h	/^#  define assert(/;"	d
assert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@assert.h	/^# define assert(/;"	d
assert_perror	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@assert.h	/^#  define assert_perror(/;"	d
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	assign(const _Tp& __svt)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR _If_sv<_Tp,basic_string &>
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR _If_sv<_Tp,basic_string &>
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^        assign(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      assign(basic_string&& __str)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      assign(const _CharT* __s)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      assign(const _CharT* __s, size_type __n)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      assign(const basic_string& __str)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      assign(const basic_string& __str, size_type __pos, size_type __n = npos)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      assign(initializer_list<_CharT> __l)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      assign(size_type __n, _CharT __c)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::char_traits	typeref:typename:_GLIBCXX17_CONSTEXPR void
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      assign(char_type& __c1, const char_type& __c2) noexcept$/;"	f	struct:std::char_traits	typeref:typename:_GLIBCXX17_CONSTEXPR void
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      assign(char_type& __c1, const char_type& __c2)$/;"	f	struct:__gnu_cxx::char_traits	typeref:typename:_GLIBCXX14_CONSTEXPR void
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      assign(char_type* __s, size_t __n, char_type __a)$/;"	f	struct:std::char_traits	typeref:typename:_GLIBCXX20_CONSTEXPR char_type *
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^    assign(char_type* __s, std::size_t __n, char_type __a)$/;"	f	class:__gnu_cxx::char_traits	typeref:typename:_GLIBCXX20_CONSTEXPR typename char_traits<_CharT>::char_type *
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	assign(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::basic_regex	typeref:typename:basic_regex &
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	assign(const basic_string<_Ch_type, _Ch_traits, _Alloc>& __s,$/;"	f	class:std::basic_regex	typeref:typename:basic_regex &
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      assign(basic_regex&& __rhs) noexcept$/;"	f	class:std::basic_regex	typeref:typename:basic_regex &
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      assign(const _Ch_type* __p, flag_type __flags = ECMAScript)$/;"	f	class:std::basic_regex	typeref:typename:basic_regex &
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      assign(const _Ch_type* __p, size_t __len, flag_type __flags = ECMAScript)$/;"	f	class:std::basic_regex	typeref:typename:basic_regex &
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      assign(const basic_regex& __rhs) noexcept$/;"	f	class:std::basic_regex	typeref:typename:basic_regex &
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      assign(initializer_list<_Ch_type> __l, flag_type __flags = ECMAScript)$/;"	f	class:std::basic_regex	typeref:typename:basic_regex &
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	assign(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	assign(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::vector	typeref:typename:void
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      assign(initializer_list<bool> __l)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      assign(size_type __n, const bool& __x)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	assign(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::deque	typeref:typename:void
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      assign(initializer_list<value_type> __l)$/;"	f	class:std::deque	typeref:typename:void
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      assign(size_type __n, const value_type& __val)$/;"	f	class:std::deque	typeref:typename:void
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	assign(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	assign(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::vector	typeref:typename:void
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      assign(initializer_list<value_type> __l)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      assign(size_type __n, const value_type& __val)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
assume_aligned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@align.h	/^    assume_aligned(_Tp* __ptr) noexcept$/;"	f	namespace:std	typeref:typename:_Tp *
at	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      at(size_type __n) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reference
at	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      at(size_type __n)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reference
at	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      at(size_type __n) const$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR const_reference
at	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      at(size_type __n)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR reference
at	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      at(size_type __n) const$/;"	f	class:std::deque	typeref:typename:const_reference
at	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      at(size_type __n)$/;"	f	class:std::deque	typeref:typename:reference
at	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      at(const key_type& __k) const$/;"	f	class:std::map	typeref:typename:const mapped_type &
at	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      at(const key_type& __k)$/;"	f	class:std::map	typeref:typename:mapped_type &
at	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      at(size_type __n) const$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR const_reference
at	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      at(size_type __n)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR reference
ate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const openmode ate =		_S_ate;$/;"	m	class:std::ios_base	typeref:typename:const openmode
atomic	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      atomic(shared_ptr<_Tp> __r) noexcept$/;"	f	class:std::atomic
atomic	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      atomic(weak_ptr<_Tp> __r) noexcept$/;"	f	class:std::atomic
atomic	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      constexpr atomic(nullptr_t) noexcept : atomic() { }$/;"	f	class:std::atomic
atomic	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    class atomic<shared_ptr<_Tp>>$/;"	c	namespace:std
atomic	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    class atomic<weak_ptr<_Tp>>$/;"	c	namespace:std
atomic_compare_exchange_strong	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_compare_exchange_strong(__shared_ptr<_Tp, _Lp>* __p,$/;"	f	namespace:std	typeref:typename:bool
atomic_compare_exchange_strong	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_compare_exchange_strong(shared_ptr<_Tp>* __p, shared_ptr<_Tp>* __v,$/;"	f	namespace:std	typeref:typename:bool
atomic_compare_exchange_strong_explicit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_compare_exchange_strong_explicit(__shared_ptr<_Tp, _Lp>* __p,$/;"	f	namespace:std	typeref:typename:bool
atomic_compare_exchange_strong_explicit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_compare_exchange_strong_explicit(shared_ptr<_Tp>* __p,$/;"	f	namespace:std	typeref:typename:bool
atomic_compare_exchange_weak	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_compare_exchange_weak(__shared_ptr<_Tp, _Lp>* __p,$/;"	f	namespace:std	typeref:typename:bool
atomic_compare_exchange_weak	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_compare_exchange_weak(shared_ptr<_Tp>* __p, shared_ptr<_Tp>* __v,$/;"	f	namespace:std	typeref:typename:bool
atomic_compare_exchange_weak_explicit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_compare_exchange_weak_explicit(__shared_ptr<_Tp, _Lp>* __p,$/;"	f	namespace:std	typeref:typename:bool
atomic_compare_exchange_weak_explicit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_compare_exchange_weak_explicit(shared_ptr<_Tp>* __p,$/;"	f	namespace:std	typeref:typename:bool
atomic_exchange	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_exchange(__shared_ptr<_Tp, _Lp>* __p, __shared_ptr<_Tp, _Lp> __r)$/;"	f	namespace:std	typeref:typename:__shared_ptr<_Tp,_Lp>
atomic_exchange	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_exchange(shared_ptr<_Tp>* __p, shared_ptr<_Tp> __r)$/;"	f	namespace:std	typeref:typename:shared_ptr<_Tp>
atomic_exchange_explicit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_exchange_explicit(__shared_ptr<_Tp, _Lp>* __p,$/;"	f	namespace:std	typeref:typename:__shared_ptr<_Tp,_Lp>
atomic_exchange_explicit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_exchange_explicit(shared_ptr<_Tp>* __p, shared_ptr<_Tp> __r,$/;"	f	namespace:std	typeref:typename:shared_ptr<_Tp>
atomic_flag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    constexpr atomic_flag(bool __i) noexcept$/;"	f	struct:std::atomic_flag
atomic_flag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  struct atomic_flag : public __atomic_flag_base$/;"	s	namespace:std
atomic_is_lock_free	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_is_lock_free(const __shared_ptr<_Tp, _Lp>* __p)$/;"	f	namespace:std	typeref:typename:bool
atomic_is_lock_free	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_is_lock_free(const shared_ptr<_Tp>* __p)$/;"	f	namespace:std	typeref:typename:bool
atomic_load	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_load(const __shared_ptr<_Tp, _Lp>* __p)$/;"	f	namespace:std	typeref:typename:__shared_ptr<_Tp,_Lp>
atomic_load	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_load(const shared_ptr<_Tp>* __p)$/;"	f	namespace:std	typeref:typename:shared_ptr<_Tp>
atomic_load_explicit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_load_explicit(const __shared_ptr<_Tp, _Lp>* __p, memory_order)$/;"	f	namespace:std	typeref:typename:__shared_ptr<_Tp,_Lp>
atomic_load_explicit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_load_explicit(const shared_ptr<_Tp>* __p, memory_order)$/;"	f	namespace:std	typeref:typename:shared_ptr<_Tp>
atomic_signal_fence	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  atomic_signal_fence(memory_order __m) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
atomic_store	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_store(__shared_ptr<_Tp, _Lp>* __p, __shared_ptr<_Tp, _Lp> __r)$/;"	f	namespace:std	typeref:typename:void
atomic_store	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_store(shared_ptr<_Tp>* __p, shared_ptr<_Tp> __r)$/;"	f	namespace:std	typeref:typename:void
atomic_store_explicit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_store_explicit(__shared_ptr<_Tp, _Lp>* __p,$/;"	f	namespace:std	typeref:typename:void
atomic_store_explicit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^    atomic_store_explicit(shared_ptr<_Tp>* __p, shared_ptr<_Tp> __r,$/;"	f	namespace:std	typeref:typename:void
atomic_thread_fence	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  atomic_thread_fence(memory_order __m) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
auto_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^        auto_ptr(auto_ptr<_Tp1>& __a) throw() : _M_ptr(__a.release()) { }$/;"	f	class:std::auto_ptr
auto_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^      auto_ptr(auto_ptr& __a) throw() : _M_ptr(__a.release()) { }$/;"	f	class:std::auto_ptr
auto_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^      auto_ptr(auto_ptr_ref<element_type> __ref) throw()$/;"	f	class:std::auto_ptr
auto_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^      auto_ptr(element_type* __p = 0) throw() : _M_ptr(__p) { }$/;"	f	class:std::auto_ptr
auto_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^    class auto_ptr$/;"	c	namespace:std
auto_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^    class auto_ptr<void>$/;"	c	namespace:std
auto_ptr_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^      auto_ptr_ref(_Tp1* __p): _M_ptr(__p) { }$/;"	f	struct:std::auto_ptr_ref
auto_ptr_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^    struct auto_ptr_ref$/;"	s	namespace:std
awk	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      static constexpr flag_type awk = regex_constants::awk;$/;"	m	class:std::basic_regex	typeref:typename:flag_type
awk	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    basic_regex<_Ch, _Tr>::awk;$/;"	m	class:std::basic_regex<_Ch, _Tr>	typeref:typename:regex_constants::syntax_option_type
awk	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr syntax_option_type awk = _S_awk;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE syntax_option_type
b	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	b() const$/;"	f	struct:std::uniform_int_distribution::param_type	typeref:typename:result_type
b	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      b() const$/;"	f	class:std::uniform_int_distribution	typeref:typename:result_type
back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      back() const noexcept$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reference
back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      back() noexcept$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reference
back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      back() const$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reference
back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      back()$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reference
back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      back() _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD reference
back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      back() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD const_reference
back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      back() _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reference
back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      back() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reference
back_insert_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      back_insert_iterator(_Container& __x)$/;"	f	class:std::back_insert_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR
back_insert_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    class back_insert_iterator$/;"	c	namespace:std
back_inserter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    back_inserter(_Container& __x)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR back_insert_iterator<_Container>
bad	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      bad() const$/;"	f	class:std::basic_ios	typeref:typename:bool
bad_address	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      bad_address = 				EFAULT,$/;"	e	enum:std::errc
bad_file_descriptor	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      bad_file_descriptor = 			EBADF,$/;"	e	enum:std::errc
bad_function_call	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^  class bad_function_call : public std::exception$/;"	c	namespace:std
bad_message	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      bad_message = 				EBADMSG,$/;"	e	enum:std::errc
bad_weak_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^  class bad_weak_ptr : public std::exception$/;"	c	namespace:std
badbit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const iostate badbit =	_S_badbit;$/;"	m	class:std::ios_base	typeref:typename:const iostate
base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      base() &&$/;"	f	class:std::counted_iterator	typeref:typename:_It
base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      base() &&$/;"	f	class:std::move_iterator	typeref:typename:iterator_type
base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      base() const & noexcept$/;"	f	class:std::counted_iterator	typeref:typename:const _It &
base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      base() const & noexcept$/;"	f	class:std::move_iterator	typeref:typename:const iterator_type &
base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      base() const _GLIBCXX_NOEXCEPT$/;"	f	class:__gnu_cxx::__normal_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR const _Iterator &
base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      base() const$/;"	f	class:std::move_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR iterator_type
base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      base() const$/;"	f	class:std::move_sentinel	typeref:typename:_Sent
base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      base() const$/;"	f	class:std::reverse_iterator	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR iterator_type
base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    base() &&$/;"	f	class:std::basic_const_iterator	typeref:typename:_It
base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    base() const & noexcept$/;"	f	class:std::basic_const_iterator	typeref:typename:const _It &
base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_raw_storage_iter.h	/^      _OutputIterator base() const { return _M_iter; }$/;"	f	class:std::raw_storage_iterator	typeref:typename:_OutputIterator
base	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@smart_ptr_polymorphism.c++	/^	shared_ptr< Base > base;$/;"	m	class:NeedBase	typeref:typename:shared_ptr<Base>	file:
base	tests/adhoc/smart_ptr_polymorphism.c++	/^	shared_ptr< Base > base;$/;"	m	class:NeedBase	typeref:typename:shared_ptr<Base>	file:
basefield	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags basefield =   _S_basefield;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
basic	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      static constexpr flag_type basic = regex_constants::basic;$/;"	m	class:std::basic_regex	typeref:typename:flag_type
basic	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    basic_regex<_Ch, _Tr>::basic;$/;"	m	class:std::basic_regex<_Ch, _Tr>	typeref:typename:regex_constants::syntax_option_type
basic	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr syntax_option_type basic = _S_basic;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE syntax_option_type
basic_common_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^  struct basic_common_reference<pair<_T1, _T2>, pair<_U1, _U2>, _TQual, _UQual>$/;"	s	namespace:std
basic_const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      basic_const_iterator(_Tp&& __current)$/;"	f	class:std::basic_const_iterator	typeref:typename:requires convertible_to<_Tp,_It> 
basic_const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      basic_const_iterator(basic_const_iterator<_It2> __current)$/;"	f	class:std::basic_const_iterator
basic_const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    basic_const_iterator(_It __current)$/;"	f	class:std::basic_const_iterator
basic_const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^  class basic_const_iterator$/;"	c	namespace:std
basic_ios	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      basic_ios()$/;"	f	class:std::basic_ios
basic_ios	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      basic_ios(basic_streambuf<_CharT, _Traits>* __sb)$/;"	f	class:std::basic_ios
basic_ios	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^    class basic_ios : public ios_base$/;"	c	namespace:std
basic_regex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	basic_regex(_FwdIter __first, _FwdIter __last,$/;"	f	class:std::basic_regex
basic_regex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	basic_regex(const std::basic_string<_Ch_type, _Ch_traits,$/;"	f	class:std::basic_regex
basic_regex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      basic_regex() noexcept$/;"	f	class:std::basic_regex
basic_regex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      basic_regex(const _Ch_type* __p, flag_type __f = ECMAScript)$/;"	f	class:std::basic_regex
basic_regex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      basic_regex(const _Ch_type* __p, std::size_t __len,$/;"	f	class:std::basic_regex
basic_regex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      basic_regex(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)$/;"	f	class:std::basic_regex
basic_regex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    class basic_regex$/;"	c	namespace:std
basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	basic_string(const _Tp& __t, size_type __pos, size_type __n,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^        basic_string(_InputIterator __beg, _InputIterator __end,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      basic_string()$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      basic_string(__sv_wrapper __svw, const _Alloc& __a)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      basic_string(basic_string&& __str) noexcept$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      basic_string(basic_string&& __str, const _Alloc& __a)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      basic_string(const _CharT* __s, size_type __n,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      basic_string(const basic_string& __str)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      basic_string(const basic_string& __str, const _Alloc& __a)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      basic_string(const basic_string& __str, size_type __pos,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    class basic_string$/;"	c	namespace:std
be16toh	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^#  define be16toh(/;"	d
be32toh	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^#  define be32toh(/;"	d
be64toh	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^#  define be64toh(/;"	d
beg	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const seekdir beg =		_S_beg;$/;"	m	class:std::ios_base	typeref:typename:const seekdir
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      begin() _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR iterator
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      begin() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_iterator
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    begin(_Container& __cont) -> decltype(__cont.begin())$/;"	f	namespace:std	typeref:typename:decltype(__cont.begin ())
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    begin(_Tp (&__arr)[_Nm]) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR _Tp *
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    begin(const _Container& __cont) -> decltype(__cont.begin())$/;"	f	namespace:std	typeref:typename:decltype(__cont.begin ())
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      begin() const noexcept$/;"	f	class:std::match_results	typeref:typename:const_iterator
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      begin() _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR iterator
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      begin() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_iterator
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      begin() _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD iterator
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      begin() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD const_iterator
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      begin() _GLIBCXX_NOEXCEPT$/;"	f	class:std::map	typeref:typename:iterator
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      begin() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::map	typeref:typename:const_iterator
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^      begin()$/;"	f	class:std::_Temporary_buffer	typeref:typename:iterator
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      begin() _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      begin() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:const_iterator
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      begin() _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR iterator
begin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      begin() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_iterator
bidirectional_iterator_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^  struct bidirectional_iterator_tag : public forward_iterator_tag { };$/;"	s	namespace:std
binary	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const openmode binary =	_S_bin;$/;"	m	class:std::ios_base	typeref:typename:const openmode
binary_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct binary_function$/;"	s	namespace:std
binary_negate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      binary_negate(const _Predicate& __x) : _M_pred(__x) { }$/;"	f	class:std::binary_negate	typeref:typename:_GLIBCXX14_CONSTEXPR
binary_negate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    class _GLIBCXX17_DEPRECATED binary_negate$/;"	c	namespace:std
binary_search	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    binary_search(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
bind1st	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^    bind1st(const _Operation& __fn, const _Tp& __x)$/;"	f	namespace:std
bind2nd	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^    bind2nd(const _Operation& __fn, const _Tp& __x)$/;"	f	namespace:std
binder1st	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^      binder1st(const _Operation& __x,$/;"	f	class:std::binder1st
binder1st	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^    class binder1st$/;"	c	namespace:std
binder2nd	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^      binder2nd(const _Operation& __x,$/;"	f	class:std::binder2nd
binder2nd	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^    class binder2nd$/;"	c	namespace:std
bit_and	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct bit_and : public binary_function<_Tp, _Tp, _Tp>$/;"	s	namespace:std
bit_and	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct bit_and<void>$/;"	s	namespace:std
bit_not	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct bit_not : public unary_function<_Tp, _Tp>$/;"	s	namespace:std
bit_not	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct bit_not<void>$/;"	s	namespace:std
bit_or	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct bit_or : public binary_function<_Tp, _Tp, _Tp>$/;"	s	namespace:std
bit_or	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct bit_or<void>$/;"	s	namespace:std
bit_xor	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct bit_xor : public binary_function<_Tp, _Tp, _Tp>$/;"	s	namespace:std
bit_xor	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct bit_xor<void>$/;"	s	namespace:std
blank	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_base.h	/^    static const mask blank	= _ISblank;$/;"	m	struct:std::ctype_base	typeref:typename:const mask
blkcnt64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __blkcnt64_t blkcnt64_t;     \/* Type to count number of disk blocks. *\/$/;"	t	typeref:typename:__blkcnt64_t
blkcnt_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __blkcnt64_t blkcnt_t;	   \/* Type to count number of disk blocks.  *\/$/;"	t	typeref:typename:__blkcnt64_t
blkcnt_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __blkcnt_t blkcnt_t;	 \/* Type to count number of disk blocks.  *\/$/;"	t	typeref:typename:__blkcnt_t
blksize_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __blksize_t blksize_t;$/;"	t	typeref:typename:__blksize_t
boolalpha	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags boolalpha =   _S_boolalpha;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
boolalpha	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  boolalpha(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
broadcast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    void broadcast()$/;"	f	class:__gnu_cxx::__cond	typeref:typename:void
broken_pipe	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      broken_pipe = 				EPIPE,$/;"	e	enum:std::errc
build_cpp_file	build-project	/^function build_cpp_file$/;"	f
build_project	build-project	/^function build_project$/;"	f
byte_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      typedef basic_string<char, char_traits<char>, _Byte_alloc>   byte_string;$/;"	t	class:std::wstring_convert	typeref:typename:basic_string<char,char_traits<char>,_Byte_alloc>
c	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^      _Sequence c;$/;"	m	class:std::stack	typeref:typename:_Sequence
c_str	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      c_str() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const _CharT *
caddr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __caddr_t caddr_t;$/;"	t	typeref:typename:__caddr_t
calcnt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  long long calcnt;            \/* calibration intervals (ro) *\/$/;"	m	struct:timex	typeref:typename:long long
capacity	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      capacity() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
capacity	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      capacity() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
capacity	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      capacity() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
catalog	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    typedef int catalog;$/;"	t	struct:std::messages_base	typeref:typename:int
category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    typedef int	category;$/;"	t	class:std::locale	typeref:typename:int
cbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      cbegin() const noexcept$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_iterator
cbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    cbegin(const _Container& __cont) noexcept(noexcept(std::begin(__cont)))$/;"	f	namespace:std	typeref:typename:auto
cbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      cbegin() const noexcept$/;"	f	class:std::match_results	typeref:typename:const_iterator
cbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      cbegin() const noexcept$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR const_iterator
cbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      cbegin() const noexcept$/;"	f	class:std::deque	typeref:typename:const_iterator
cbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      cbegin() const noexcept$/;"	f	class:std::map	typeref:typename:const_iterator
cbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      cbegin() const noexcept$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR const_iterator
ceil	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	ceil(const duration<_Rep, _Period>& __d)$/;"	f	namespace:std::chrono::__detail	typeref:typename:_ToDur
ceil	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      ceil(const duration<_Rep, _Period>& __d)$/;"	f	namespace:std::chrono	typeref:typename:__enable_if_is_duration<_ToDur>
ceil	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      ceil(const time_point<_Clock, _Dur>& __tp)$/;"	f	namespace:std::chrono	typeref:typename:enable_if_t<__is_duration_v<_ToDur>,time_point<_Clock,_ToDur>>
cend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      cend() const noexcept$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_iterator
cend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    cend(const _Container& __cont) noexcept(noexcept(std::end(__cont)))$/;"	f	namespace:std	typeref:typename:auto
cend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      cend() const noexcept$/;"	f	class:std::match_results	typeref:typename:const_iterator
cend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      cend() const noexcept$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR const_iterator
cend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      cend() const noexcept$/;"	f	class:std::deque	typeref:typename:const_iterator
cend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      cend() const noexcept$/;"	f	class:std::map	typeref:typename:const_iterator
cend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      cend() const noexcept$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR const_iterator
char_class_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef _RegexMask char_class_type;$/;"	t	class:std::regex_traits	typeref:typename:_RegexMask
char_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^    struct char_traits : public __gnu_cxx::char_traits<_CharT>$/;"	s	namespace:std
char_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^    struct char_traits$/;"	s	namespace:__gnu_cxx
char_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^    struct char_traits<char16_t>$/;"	s	namespace:std
char_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^    struct char_traits<char32_t>$/;"	s	namespace:std
char_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^    struct char_traits<char8_t>$/;"	s	namespace:std
char_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^    struct char_traits<char>$/;"	s	namespace:std
char_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^    struct char_traits<wchar_t> : public __gnu_cxx::char_traits<wchar_t>$/;"	s	namespace:std
char_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^    struct char_traits<wchar_t>$/;"	s	namespace:std
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      typedef _CharT                                 char_type;$/;"	t	class:std::basic_ios	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef _CharT                                    char_type;$/;"	t	struct:__gnu_cxx::char_traits	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef char              char_type;$/;"	t	struct:std::char_traits	typeref:typename:char
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef char16_t          char_type;$/;"	t	struct:std::char_traits	typeref:typename:char16_t
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef char32_t          char_type;$/;"	t	struct:std::char_traits	typeref:typename:char32_t
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef char8_t           char_type;$/;"	t	struct:std::char_traits	typeref:typename:char8_t
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef wchar_t           char_type;$/;"	t	struct:std::char_traits	typeref:typename:wchar_t
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      typedef _CharT			char_type;$/;"	t	class:std::collate	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      typedef _CharT               char_type;$/;"	t	class:std::collate_byname	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::ctype	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::num_get	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::numpunct	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::numpunct_byname	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      typedef _CharT		char_type;$/;"	t	class:std::num_put	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      typedef _CharT char_type;$/;"	t	class:std::__ctype_abstract_base	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      typedef char		char_type;$/;"	t	class:std::ctype	typeref:typename:char
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      typedef wchar_t		char_type;$/;"	t	class:std::ctype	typeref:typename:wchar_t
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _CharT			char_type;$/;"	t	class:std::messages	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _CharT			char_type;$/;"	t	class:std::messages_byname	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _CharT			char_type;$/;"	t	class:std::money_get	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _CharT			char_type;$/;"	t	class:std::money_put	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _CharT			char_type;$/;"	t	class:std::moneypunct	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _CharT			char_type;$/;"	t	class:std::moneypunct_byname	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _CharT			char_type;$/;"	t	class:std::time_get	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _CharT			char_type;$/;"	t	class:std::time_get_byname	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _CharT			char_type;$/;"	t	class:std::time_put	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _CharT			char_type;$/;"	t	class:std::time_put_byname	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef _Ch_type				char_type;$/;"	t	class:std::regex_traits	typeref:typename:_Ch_type
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef typename __iter_traits::value_type 	   char_type;$/;"	t	class:std::match_results	typeref:typename:__iter_traits::value_type
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef _CharT					char_type;$/;"	t	class:std::istreambuf_iterator	typeref:typename:_CharT
char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef _CharT			       char_type;$/;"	t	class:std::ostreambuf_iterator	typeref:typename:_CharT
chrono	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^  namespace chrono$/;"	n	namespace:std
chrono_literals	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^  inline namespace chrono_literals$/;"	n	namespace:std::literals
chrono_literals	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^    inline namespace chrono_literals { }$/;"	n	namespace:std::literals
clamp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    clamp(const _Tp& __val, const _Tp& __lo, const _Tp& __hi)$/;"	f	namespace:std	typeref:typename:const _Tp &
clamp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    clamp(const _Tp& __val, const _Tp& __lo, const _Tp& __hi, _Compare __comp)$/;"	f	namespace:std	typeref:typename:const _Tp &
clear	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    clear(memory_order __m = memory_order_seq_cst) noexcept$/;"	f	struct:std::atomic_flag	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
clear	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    clear(memory_order __m = memory_order_seq_cst) volatile noexcept$/;"	f	struct:std::atomic_flag	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
clear	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      clear() _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
clear	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      clear() _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
clear	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      clear() _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:void
clear	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      clear() _GLIBCXX_NOEXCEPT$/;"	f	class:std::map	typeref:typename:void
clear	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      clear() _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:void
clear	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      clear() _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
clock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef _Clock						clock;$/;"	t	class:std::chrono::time_point	typeref:typename:_Clock
clock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typename _Tp::time_point::clock;$/;"	m	class:std::chrono::_Tp::time_point	typeref:meta:typename
clock_adjtime	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@time.h	/^# define clock_adjtime __clock_adjtime6/;"	d
clock_getres	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#   define clock_getres __clock_getres6/;"	d
clock_gettime	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#   define clock_gettime __clock_gettime6/;"	d
clock_nanosleep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#    define clock_nanosleep __clock_nanosleep_/;"	d
clock_settime	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#   define clock_settime __clock_settime6/;"	d
clock_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@clock_t.h	/^typedef __clock_t clock_t;$/;"	t	typeref:typename:__clock_t
clockid_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@clockid_t.h	/^typedef __clockid_t clockid_t;$/;"	t	typeref:typename:__clockid_t
close	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@cookie_io_functions_t.h	/^  cookie_close_function_t *close;	\/* Close file.  *\/$/;"	m	struct:_IO_cookie_io_functions_t	typeref:typename:cookie_close_function_t *
close	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      close(catalog __c) const$/;"	f	class:std::messages	typeref:typename:void
cmatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef match_results<const char*>		 cmatch;$/;"	t	namespace:std	typeref:typename:match_results<const char * >
cntrl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_base.h	/^    static const mask cntrl 	= _IScntrl;$/;"	m	struct:std::ctype_base	typeref:typename:const mask
cod_product	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^	unsigned int cod_product;$/;"	m	class:Product	typeref:typename:unsigned int	file:
cod_product	tests/sak/parser/test_serial_data.c++	/^	unsigned int cod_product;$/;"	m	class:Product	typeref:typename:unsigned int	file:
code	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^    code() const noexcept$/;"	f	class:std::regex_error	typeref:typename:regex_constants::error_type
codecvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      codecvt(size_t __refs = 0)$/;"	f	class:std::codecvt
codecvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^    class codecvt$/;"	c	namespace:std
codecvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^    class codecvt<char, char, mbstate_t>$/;"	c	namespace:std
codecvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^    class codecvt<char16_t, char, mbstate_t>$/;"	c	namespace:std
codecvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^    class codecvt<char16_t, char8_t, mbstate_t>$/;"	c	namespace:std
codecvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^    class codecvt<char32_t, char, mbstate_t>$/;"	c	namespace:std
codecvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^    class codecvt<char32_t, char8_t, mbstate_t>$/;"	c	namespace:std
codecvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^    class codecvt<wchar_t, char, mbstate_t>$/;"	c	namespace:std
codecvt_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^  class codecvt_base$/;"	c	namespace:std
codecvt_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      codecvt_byname(const char* __s, size_t __refs = 0)$/;"	f	class:std::codecvt_byname
codecvt_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      codecvt_byname(const char*, size_t __refs = 0)$/;"	f	class:std::codecvt_byname
codecvt_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      codecvt_byname(const string& __s, size_t __refs = 0)$/;"	f	class:std::codecvt_byname
codecvt_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^    class codecvt_byname : public codecvt<_InternT, _ExternT, _StateT>$/;"	c	namespace:std
codecvt_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^    class codecvt_byname<char16_t, char, mbstate_t>$/;"	c	namespace:std
codecvt_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^    class codecvt_byname<char16_t, char8_t, mbstate_t>$/;"	c	namespace:std
codecvt_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^    class codecvt_byname<char32_t, char, mbstate_t>$/;"	c	namespace:std
codecvt_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^    class codecvt_byname<char32_t, char8_t, mbstate_t>$/;"	c	namespace:std
collate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      collate(__c_locale __cloc, size_t __refs = 0)$/;"	f	class:std::collate
collate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      collate(size_t __refs = 0)$/;"	f	class:std::collate
collate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    class _GLIBCXX_NAMESPACE_CXX11 collate : public locale::facet$/;"	c	namespace:std
collate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const category collate	= 1L << 2;$/;"	m	class:std::locale	typeref:typename:const category
collate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      static constexpr flag_type collate = regex_constants::collate;$/;"	m	class:std::basic_regex	typeref:typename:flag_type
collate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    basic_regex<_Ch, _Tr>::collate;$/;"	m	class:std::basic_regex<_Ch, _Tr>	typeref:typename:regex_constants::syntax_option_type
collate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr syntax_option_type collate = _S_collate;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE syntax_option_type
collate_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      collate_byname(const char* __s, size_t __refs = 0)$/;"	f	class:std::collate_byname
collate_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      collate_byname(const string& __s, size_t __refs = 0)$/;"	f	class:std::collate_byname
collate_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    class _GLIBCXX_NAMESPACE_CXX11 collate_byname : public collate<_CharT>$/;"	c	namespace:std
common_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      common_iterator(const common_iterator<_It2, _Sent2>& __x)$/;"	f	class:std::common_iterator	typeref:typename:requires convertible_to<const _It2 &,_It> && convertible_to<const _Sent2 &,_Sent> 
common_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    common_iterator()$/;"	f	class:std::common_iterator
common_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    common_iterator(_It __i)$/;"	f	class:std::common_iterator
common_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    common_iterator(_Sent __s)$/;"	f	class:std::common_iterator
common_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    common_iterator(common_iterator&& __x)$/;"	f	class:std::common_iterator
common_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    common_iterator(const common_iterator& __x)$/;"	f	class:std::common_iterator
common_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^  class common_iterator$/;"	c	namespace:std
common_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    struct common_type<chrono::duration<_Rep, _Period>,$/;"	s	namespace:std
common_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    struct common_type<chrono::duration<_Rep, _Period>>$/;"	s	namespace:std
common_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    struct common_type<chrono::duration<_Rep1, _Period1>,$/;"	s	namespace:std
common_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    struct common_type<chrono::time_point<_Clock, _Duration1>,$/;"	s	namespace:std
common_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    struct common_type<chrono::time_point<_Clock, _Duration>,$/;"	s	namespace:std
common_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    struct common_type<chrono::time_point<_Clock, _Duration>>$/;"	s	namespace:std
common_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    struct common_type<_Up, basic_const_iterator<_Tp>>$/;"	s	namespace:std
common_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    struct common_type<basic_const_iterator<_Tp>, _Up>$/;"	s	namespace:std
common_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    struct common_type<basic_const_iterator<_Tp>, basic_const_iterator<_Up>>$/;"	s	namespace:std
common_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^  struct common_type<pair<_T1, _T2>, pair<_U1, _U2>>$/;"	s	namespace:std
comp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	_Compare comp;$/;"	m	class:std::map::value_compare	typeref:typename:_Compare
compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	compare(const _Tp& __svt) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR _If_sv<_Tp,int>
compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	compare(size_type __pos, size_type __n, const _Tp& __svt) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR _If_sv<_Tp,int>
compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	compare(size_type __pos1, size_type __n1, const _Tp& __svt,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR _If_sv<_Tp,int>
compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR int
compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      compare(const basic_string& __str) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR int
compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      compare(size_type __pos, size_type __n, const basic_string& __str) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR int
compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      compare(size_type __pos, size_type __n1, const _CharT* __s) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR int
compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      compare(size_type __pos, size_type __n1, const _CharT* __s,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR int
compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      compare(size_type __pos1, size_type __n1, const basic_string& __str,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR int
compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      compare(const char_type* __s1, const char_type* __s2, size_t __n)$/;"	f	struct:std::char_traits	typeref:typename:_GLIBCXX17_CONSTEXPR int
compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^    compare(const char_type* __s1, const char_type* __s2, std::size_t __n)$/;"	f	class:__gnu_cxx::char_traits	typeref:typename:_GLIBCXX14_CONSTEXPR int
compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      compare(const _CharT* __lo1, const _CharT* __hi1,$/;"	f	class:std::collate	typeref:typename:int
compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	compare(__string_view __s) const noexcept$/;"	f	struct:std::sub_match::__string_view	typeref:typename:int
compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      compare(const string_type& __s) const$/;"	f	class:std::sub_match	typeref:typename:int
compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      compare(const sub_match& __s) const$/;"	f	class:std::sub_match	typeref:typename:int
compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      compare(const value_type* __s) const$/;"	f	class:std::sub_match	typeref:typename:int
compare_exchange_strong	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      compare_exchange_strong(_Fp& __expected, _Fp __desired,$/;"	f	struct:std::__atomic_float	typeref:typename:bool
compare_exchange_strong	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      compare_exchange_strong(_Fp& __expected, _Fp __desired,$/;"	f	struct:std::__atomic_ref	typeref:typename:bool
compare_exchange_strong	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      compare_exchange_strong(_Tp& __expected, _Tp __desired,$/;"	f	struct:std::__atomic_ref	typeref:typename:bool
compare_exchange_strong	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      compare_exchange_strong(_Tp* __ptr, _Val<_Tp>& __expected,$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE bool
compare_exchange_strong	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      compare_exchange_strong(_Tp*& __expected, _Tp* __desired,$/;"	f	struct:std::__atomic_ref	typeref:typename:bool
compare_exchange_strong	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      compare_exchange_strong(__int_type& __i1, __int_type __i2,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE bool
compare_exchange_strong	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      compare_exchange_strong(__pointer_type& __p1, __pointer_type __p2,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE bool
compare_exchange_strong	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      compare_exchange_strong(shared_ptr<_Tp>& __expected,$/;"	f	class:std::atomic	typeref:typename:bool
compare_exchange_strong	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      compare_exchange_strong(value_type& __expected, value_type __desired,$/;"	f	class:std::_Sp_atomic	typeref:typename:bool
compare_exchange_strong	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      compare_exchange_strong(value_type& __expected, value_type __desired,$/;"	f	class:std::atomic	typeref:typename:bool
compare_exchange_strong	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      compare_exchange_strong(weak_ptr<_Tp>& __expected,$/;"	f	class:std::atomic	typeref:typename:bool
compare_exchange_weak	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      compare_exchange_weak(_Fp& __expected, _Fp __desired,$/;"	f	struct:std::__atomic_float	typeref:typename:bool
compare_exchange_weak	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      compare_exchange_weak(_Fp& __expected, _Fp __desired,$/;"	f	struct:std::__atomic_ref	typeref:typename:bool
compare_exchange_weak	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      compare_exchange_weak(_Tp& __expected, _Tp __desired,$/;"	f	struct:std::__atomic_ref	typeref:typename:bool
compare_exchange_weak	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      compare_exchange_weak(_Tp* __ptr, _Val<_Tp>& __expected,$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE bool
compare_exchange_weak	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      compare_exchange_weak(_Tp*& __expected, _Tp* __desired,$/;"	f	struct:std::__atomic_ref	typeref:typename:bool
compare_exchange_weak	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      compare_exchange_weak(__int_type& __i1, __int_type __i2,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE bool
compare_exchange_weak	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      compare_exchange_weak(__pointer_type& __p1, __pointer_type __p2,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE bool
compare_exchange_weak	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      compare_exchange_weak(value_type& __expected, value_type __desired,$/;"	f	class:std::atomic	typeref:typename:bool
comparison_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      using comparison_category = std::strong_ordering;$/;"	t	struct:__gnu_cxx::char_traits	typeref:typename:std::strong_ordering
comparison_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      using comparison_category = strong_ordering;$/;"	t	struct:std::char_traits	typeref:typename:strong_ordering
comparison_fn_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^typedef __compar_fn_t comparison_fn_t;$/;"	t	typeref:typename:__compar_fn_t
complex_literals	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^    inline namespace complex_literals { }$/;"	n	namespace:std::literals
connection_aborted	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      connection_aborted = 			ECONNABORTED,$/;"	e	enum:std::errc
connection_already_in_progress	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      connection_already_in_progress = 		EALREADY,$/;"	e	enum:std::errc
connection_refused	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      connection_refused = 			ECONNREFUSED,$/;"	e	enum:std::errc
connection_reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      connection_reset = 			ECONNRESET,$/;"	e	enum:std::errc
const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^							const_iterator;$/;"	t	class:std::basic_string	typeref:typename:__gnu_cxx::__normal_iterator<const_pointer,basic_string>
const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef typename _Base_type::const_iterator	   const_iterator;$/;"	t	class:std::match_results	typeref:typename:_Base_type::const_iterator
const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef _Bit_const_iterator			const_iterator;$/;"	t	class:std::vector	typeref:typename:_Bit_const_iterator
const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    typedef _Bit_const_iterator  const_iterator;$/;"	t	struct:std::_Bit_const_iterator	typeref:typename:_Bit_const_iterator
const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef _Deque_iterator<_Tp, const _Tp&, _Ptr_const>   const_iterator;$/;"	t	class:std::_Deque_base	typeref:typename:_Deque_iterator<_Tp,const _Tp &,_Ptr_const>
const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef _Deque_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;$/;"	t	struct:std::_Deque_iterator	typeref:typename:_Deque_iterator<_Tp,const _Tp &,const _Tp * >
const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef typename _Base::const_iterator		const_iterator;$/;"	t	class:std::deque	typeref:typename:_Base::const_iterator
const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    using const_iterator$/;"	t	namespace:std	typeref:typename:__conditional_t<__detail::__constant_iterator<_It>,_It,basic_const_iterator<_It>>
const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef typename _Rep_type::const_iterator	 const_iterator;$/;"	t	class:std::map	typeref:typename:_Rep_type::const_iterator
const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Rb_tree_const_iterator<value_type> const_iterator;$/;"	t	class:std::_Rb_tree	typeref:typename:_Rb_tree_const_iterator<value_type>
const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      const_iterator;$/;"	t	class:std::vector	typeref:typename:__gnu_cxx::__normal_iterator<const_pointer,vector>
const_mem_fun1_ref_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      const_mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg) const)$/;"	f	class:std::const_mem_fun1_ref_t
const_mem_fun1_ref_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    class const_mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret>$/;"	c	namespace:std
const_mem_fun1_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      const_mem_fun1_t(_Ret (_Tp::*__pf)(_Arg) const)$/;"	f	class:std::const_mem_fun1_t
const_mem_fun1_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    class const_mem_fun1_t : public binary_function<const _Tp*, _Arg, _Ret>$/;"	c	namespace:std
const_mem_fun_ref_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      const_mem_fun_ref_t(_Ret (_Tp::*__pf)() const)$/;"	f	class:std::const_mem_fun_ref_t
const_mem_fun_ref_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    class const_mem_fun_ref_t : public unary_function<_Tp, _Ret>$/;"	c	namespace:std
const_mem_fun_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      const_mem_fun_t(_Ret (_Tp::*__pf)() const)$/;"	f	class:std::const_mem_fun_t
const_mem_fun_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    class const_mem_fun_t : public unary_function<const _Tp*, _Ret>$/;"	c	namespace:std
const_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using const_pointer = const _Tp*;$/;"	t	struct:std::allocator_traits	typeref:typename:const _Tp *
const_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using const_pointer = const void*;$/;"	t	struct:std::allocator_traits	typeref:typename:const void *
const_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;$/;"	t	struct:std::allocator_traits	typeref:typename:_Ptr<__c_pointer,const value_type>::type
const_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      typedef const _Tp* const_pointer;$/;"	t	class:std::allocator	typeref:typename:const _Tp *
const_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      typedef const void* const_pointer;$/;"	t	class:std::allocator	typeref:typename:const void *
const_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef typename _Alloc_traits::const_pointer	const_pointer;$/;"	t	class:std::basic_string	typeref:typename:_Alloc_traits::const_pointer
const_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      using const_pointer = const _Tp*;$/;"	t	struct:std::allocator_traits	typeref:typename:const _Tp *
const_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      typedef const _Tp* const_pointer;$/;"	t	class:std::__new_allocator	typeref:typename:const _Tp *
const_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef const bool*				const_pointer;$/;"	t	class:std::vector	typeref:typename:const bool *
const_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef typename _Alloc_traits::const_pointer	const_pointer;$/;"	t	class:std::deque	typeref:typename:_Alloc_traits::const_pointer
const_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef typename _Alloc_traits::const_pointer	 const_pointer;$/;"	t	class:std::map	typeref:typename:_Alloc_traits::const_pointer
const_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef const value_type* 		const_pointer;$/;"	t	class:std::_Rb_tree	typeref:typename:const value_type *
const_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      typedef typename _Alloc_traits::const_pointer	const_pointer;$/;"	t	class:std::vector	typeref:typename:_Alloc_traits::const_pointer
const_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    typedef typename _Alloc::const_pointer          const_pointer;$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:_Alloc::const_pointer
const_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    typedef typename _Base_type::const_pointer      const_pointer;$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:_Base_type::const_pointer
const_pointer_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    const_pointer_cast(const shared_ptr<_Up>& __r) noexcept$/;"	f	namespace:std	typeref:typename:shared_ptr<_Tp>
const_pointer_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    const_pointer_cast(shared_ptr<_Up>&& __r) noexcept$/;"	f	namespace:std	typeref:typename:shared_ptr<_Tp>
const_pointer_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    const_pointer_cast(const __shared_ptr<_Tp1, _Lp>& __r) noexcept$/;"	f	namespace:std	typeref:typename:__shared_ptr<_Tp,_Lp>
const_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      typedef const _Tp& const_reference;$/;"	t	class:std::allocator	typeref:typename:const _Tp &
const_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef typename _Alloc_traits::const_reference	const_reference;$/;"	t	class:std::basic_string	typeref:typename:_Alloc_traits::const_reference
const_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      typedef const _Tp& const_reference;$/;"	t	class:std::__new_allocator	typeref:typename:const _Tp &
const_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef const value_type&				   const_reference;$/;"	t	class:std::match_results	typeref:typename:const value_type &
const_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef bool					const_reference;$/;"	t	class:std::vector	typeref:typename:bool
const_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    typedef bool                 const_reference;$/;"	t	struct:std::_Bit_const_iterator	typeref:typename:bool
const_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef typename _Alloc_traits::const_reference	const_reference;$/;"	t	class:std::deque	typeref:typename:_Alloc_traits::const_reference
const_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef typename _Alloc_traits::const_reference	 const_reference;$/;"	t	class:std::map	typeref:typename:_Alloc_traits::const_reference
const_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^      typedef typename _Sequence::const_reference	const_reference;$/;"	t	class:std::stack	typeref:typename:_Sequence::const_reference
const_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef const value_type& 		const_reference;$/;"	t	class:std::_Rb_tree	typeref:typename:const value_type &
const_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      typedef typename _Alloc_traits::const_reference	const_reference;$/;"	t	class:std::vector	typeref:typename:_Alloc_traits::const_reference
const_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    typedef const value_type&                       const_reference;$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:const value_type &
const_reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    typedef typename _Alloc::const_reference        const_reference;$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:_Alloc::const_reference
const_reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;$/;"	t	class:std::basic_string	typeref:typename:std::reverse_iterator<const_iterator>
const_reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;$/;"	t	class:std::vector	typeref:typename:std::reverse_iterator<const_iterator>
const_reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;$/;"	t	class:std::deque	typeref:typename:std::reverse_iterator<const_iterator>
const_reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;$/;"	t	class:std::map	typeref:typename:_Rep_type::const_reverse_iterator
const_reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;$/;"	t	class:std::_Rb_tree	typeref:typename:std::reverse_iterator<const_iterator>
const_reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;$/;"	t	class:std::vector	typeref:typename:std::reverse_iterator<const_iterator>
const_sentinel	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    using const_sentinel = typename __detail::__const_sentinel<_Sent>::type;$/;"	t	namespace:std	typeref:typename:__detail::__const_sentinel<_Sent>::type
const_void_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using const_void_pointer = const void*;$/;"	t	struct:std::allocator_traits	typeref:typename:const void *
const_void_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;$/;"	t	struct:std::allocator_traits	typeref:typename:_Ptr<__cv_pointer,const void>::type
const_void_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      using const_void_pointer = const void*;$/;"	t	struct:std::allocator_traits	typeref:typename:const void *
constant	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  long long constant;          \/* pll time constant *\/$/;"	m	struct:timex	typeref:typename:long long
construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX20_CONSTEXPR auto
construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX20_CONSTEXPR void
construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	construct(allocator_type&, _Up* __p, _Args&&... __args)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX20_CONSTEXPR void
construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	construct(_Tp1* __p, _Args&&... __args)$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:__not_pair<_Tp1>::type
construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	construct(_Tp1* __p, _Args&&... __args)$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:void
construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	construct(allocator_type& __a, _Up* __p, _Args&&... __args)$/;"	f	struct:std::allocator_traits	typeref:typename:void
construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	construct(pair<_Tp1, _Tp2>* __p)$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:void
construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	construct(pair<_Tp1, _Tp2>* __p, _Up&& __x, _Vp&& __y)$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:void
construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	construct(pair<_Tp1, _Tp2>* __p, const std::pair<_Up, _Vp>& __pr)$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:void
construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	construct(pair<_Tp1, _Tp2>* __p, pair<_Up, _Vp>&& __pr)$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:void
construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	construct(pair<_Tp1, _Tp2>* __p, piecewise_construct_t,$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:void
construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^	construct(_Up* __p, _Args&&... __args)$/;"	f	class:std::__new_allocator	typeref:typename:void
construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      construct(pointer __p, const _Tp& __val)$/;"	f	class:std::__new_allocator	typeref:typename:void
construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^      construct(_Alloc& __a, _Ptr __p, _Args&&... __args)$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:_GLIBCXX14_CONSTEXPR std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^      static void construct(_Alloc& __a, pointer __p, const _Tp& __arg)$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:void
construct_at	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^    construct_at(_Tp* __location, _Args&&... __args)$/;"	f	namespace:std	typeref:typename:auto
consume	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      consume,$/;"	e	enum:std::memory_order
container	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _Container* container;$/;"	m	class:std::back_insert_iterator	typeref:typename:_Container *
container	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _Container* container;$/;"	m	class:std::front_insert_iterator	typeref:typename:_Container *
container	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _Container* container;$/;"	m	class:std::insert_iterator	typeref:typename:_Container *
container_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef _Container          container_type;$/;"	t	class:std::back_insert_iterator	typeref:typename:_Container
container_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef _Container          container_type;$/;"	t	class:std::front_insert_iterator	typeref:typename:_Container
container_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef _Container          container_type;$/;"	t	class:std::insert_iterator	typeref:typename:_Container
container_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^      typedef	       _Sequence			container_type;$/;"	t	class:std::stack	typeref:typename:_Sequence
contains	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      contains(_CharT __x) const noexcept$/;"	f	class:std::basic_string	typeref:typename:bool
contains	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      contains(basic_string_view<_CharT, _Traits> __x) const noexcept$/;"	f	class:std::basic_string	typeref:typename:bool
contains	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      contains(const _CharT* __x) const noexcept$/;"	f	class:std::basic_string	typeref:typename:bool
contains	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	contains(const _Kt& __x) const$/;"	f	class:std::map	typeref:typename:decltype(_M_t._M_find_tr (__x),void (),true)
contains	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      contains(const key_type& __x) const$/;"	f	class:std::map	typeref:typename:bool
contiguous_iterator_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^  struct contiguous_iterator_tag : public random_access_iterator_tag { };$/;"	s	namespace:std
converted	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      size_t converted() const noexcept { return _M_count; }$/;"	f	class:std::wstring_convert	typeref:typename:size_t
cookie_close_function_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@cookie_io_functions_t.h	/^typedef int cookie_close_function_t (void *__cookie);$/;"	t	typeref:typename:int ()(void * __cookie)
cookie_io_functions_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@cookie_io_functions_t.h	/^} cookie_io_functions_t;$/;"	t	typeref:struct:_IO_cookie_io_functions_t
cookie_read_function_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@cookie_io_functions_t.h	/^typedef __ssize_t cookie_read_function_t (void *__cookie, char *__buf,$/;"	t	typeref:typename:__ssize_t ()(void * __cookie,char * __buf,size_t __nbytes)
cookie_seek_function_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@cookie_io_functions_t.h	/^typedef int cookie_seek_function_t (void *__cookie, __off64_t *__pos, int __w);$/;"	t	typeref:typename:int ()(void * __cookie,__off64_t * __pos,int __w)
cookie_write_function_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@cookie_io_functions_t.h	/^typedef __ssize_t cookie_write_function_t (void *__cookie, const char *__buf,$/;"	t	typeref:typename:__ssize_t ()(void * __cookie,const char * __buf,size_t __nbytes)
copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      copy(char_type* __s1, const char_type* __s2, size_t __n)$/;"	f	struct:std::char_traits	typeref:typename:_GLIBCXX20_CONSTEXPR char_type *
copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^    copy(char_type* __s1, const char_type* __s2, std::size_t __n)$/;"	f	class:__gnu_cxx::char_traits	typeref:typename:_GLIBCXX20_CONSTEXPR typename char_traits<_CharT>::char_type *
copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    copy(_II __first, _II __last, _OI __result)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OI
copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^    copy(istreambuf_iterator<_CharT> __first,$/;"	f	namespace:std	typeref:typename:__gnu_cxx::__enable_if<__is_char<_CharT>::__value,ostreambuf_iterator<_CharT>>::__type
copy_backward	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _BI2
copy_if	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    copy_if(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
copy_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    copy_n(_InputIterator __first, _Size __n, _OutputIterator __result)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
copyfmt_event	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      copyfmt_event$/;"	e	enum:std::ios_base::event
count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	count() const$/;"	f	class:std::chrono::duration	typeref:typename:rep
count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    count(_InputIterator __first, _InputIterator __last, const _Tp& __value)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR typename iterator_traits<_InputIterator>::difference_type
count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      count() const noexcept { return _M_length; }$/;"	f	class:std::counted_iterator	typeref:typename:iter_difference_t<_It>
count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	count(const _Kt& __x) const -> decltype(_M_t._M_count_tr(__x))$/;"	f	class:std::map	typeref:typename:decltype(_M_t._M_count_tr (__x))
count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      count(const key_type& __x) const$/;"	f	class:std::map	typeref:typename:size_type
count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    count(const _Key& __k) const$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::size_type
count_if	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR typename iterator_traits<_InputIterator>::difference_type
counted_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	counted_iterator(const counted_iterator<_It2>& __x)$/;"	f	class:std::counted_iterator	typeref:typename:requires convertible_to<const _It2 &,_It> 
counted_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      counted_iterator(_It __i, iter_difference_t<_It> __n)$/;"	f	class:std::counted_iterator
counted_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    class counted_iterator$/;"	c	namespace:std
cpu_set_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@cpu-set.h	/^} cpu_set_t;$/;"	t	typeref:struct:__anon8cc412ae0108
crbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      crbegin() const noexcept$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reverse_iterator
crbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    crbegin(const _Container& __cont) -> decltype(std::rbegin(__cont))$/;"	f	namespace:std	typeref:typename:decltype(std::rbegin (__cont))
crbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      crbegin() const noexcept$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR const_reverse_iterator
crbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      crbegin() const noexcept$/;"	f	class:std::deque	typeref:typename:const_reverse_iterator
crbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      crbegin() const noexcept$/;"	f	class:std::map	typeref:typename:const_reverse_iterator
crbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      crbegin() const noexcept$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR const_reverse_iterator
cref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    cref(const _Tp& __t) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR reference_wrapper<const _Tp>
cref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    cref(reference_wrapper<_Tp> __t) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR reference_wrapper<const _Tp>
cregex_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef regex_iterator<const char*>			cregex_iterator;$/;"	t	namespace:std	typeref:typename:regex_iterator<const char * >
cregex_token_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef regex_token_iterator<const char*>		cregex_token_iterator;$/;"	t	namespace:std	typeref:typename:regex_token_iterator<const char * >
crend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      crend() const noexcept$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reverse_iterator
crend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    crend(const _Container& __cont) -> decltype(std::rend(__cont))$/;"	f	namespace:std	typeref:typename:decltype(std::rend (__cont))
crend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      crend() const noexcept$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR const_reverse_iterator
crend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      crend() const noexcept$/;"	f	class:std::deque	typeref:typename:const_reverse_iterator
crend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      crend() const noexcept$/;"	f	class:std::map	typeref:typename:const_reverse_iterator
crend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      crend() const noexcept$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR const_reverse_iterator
cross_device_link	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      cross_device_link = 			EXDEV,$/;"	e	enum:std::errc
csub_match	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef sub_match<const char*>	     csub_match;$/;"	t	namespace:std	typeref:typename:sub_match<const char * >
ctime	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#  define ctime __ctime6/;"	d
ctime_r	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#  define ctime_r /;"	d
ctype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const category ctype		= 1L << 0;$/;"	m	class:std::locale	typeref:typename:const category
ctype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }$/;"	f	class:std::ctype
ctype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    class ctype : public __ctype_abstract_base<_CharT>$/;"	c	namespace:std
ctype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    class ctype<char> : public locale::facet, public ctype_base$/;"	c	namespace:std
ctype	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    class ctype<wchar_t> : public __ctype_abstract_base<wchar_t>$/;"	c	namespace:std
ctype_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_base.h	/^  struct ctype_base$/;"	s	namespace:std
ctype_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      ctype_byname(const string& __s, size_t __refs = 0)$/;"	f	class:std::ctype_byname
ctype_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    class ctype_byname : public ctype<_CharT>$/;"	c	namespace:std
ctype_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    class ctype_byname<char> : public ctype<char>$/;"	c	namespace:std
ctype_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    class ctype_byname<wchar_t> : public ctype<wchar_t>$/;"	c	namespace:std
cur	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const seekdir cur =		_S_cur;$/;"	m	class:std::ios_base	typeref:typename:const seekdir
curr_symbol	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      curr_symbol() const$/;"	f	class:std::moneypunct	typeref:typename:string_type
currency_symbol	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char *currency_symbol;	\/* Local currency symbol.  *\/$/;"	m	struct:lconv	typeref:typename:char *
current	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _Iterator current;$/;"	m	class:std::reverse_iterator	typeref:typename:_Iterator
daddr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __daddr_t daddr_t;$/;"	t	typeref:typename:__daddr_t
data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      data() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const _CharT *
data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      data() noexcept$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR _CharT *
data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    data(_Container& __cont) noexcept(noexcept(__cont.data()))$/;"	f	namespace:std	typeref:typename:auto
data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    data(_Tp (&__array)[_Nm]) noexcept$/;"	f	namespace:std	typeref:typename:_Tp *
data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    data(const _Container& __cont) noexcept(noexcept(__cont.data()))$/;"	f	namespace:std	typeref:typename:auto
data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    data(initializer_list<_Tp> __il) noexcept$/;"	f	namespace:std	typeref:typename:const _Tp *
data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      data() _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR _Tp *
data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      data() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const _Tp *
date_order	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      date_order()  const$/;"	f	class:std::time_get	typeref:typename:dateorder
dateorder	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	g	class:std::time_base
days	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    using days		= duration<_GLIBCXX_CHRONO_INT64_T, ratio<86400>>;$/;"	t	namespace:std::chrono	typeref:typename:duration<_GLIBCXX_CHRONO_INT64_T,ratio<86400>>
deallocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      deallocate(_Alloc& __a, pointer __p, size_type __n)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX20_CONSTEXPR void
deallocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      deallocate(allocator_type& __a, pointer __p, size_type __n)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX20_CONSTEXPR void
deallocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      deallocate(_Tp* __p, size_t __n)$/;"	f	class:std::allocator	typeref:typename:void
deallocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      deallocate(_Tp* __p, size_t __n) noexcept$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:void
deallocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      deallocate(allocator_type& __a, pointer __p, size_type __n)$/;"	f	struct:std::allocator_traits	typeref:typename:void
deallocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^    deallocate(void* __p, size_t __bytes, size_t __alignment = _S_max_align)$/;"	f	class:std::pmr::memory_resource	typeref:typename:void
deallocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))$/;"	f	class:std::__new_allocator	typeref:typename:void
deallocate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    static void deallocate(_Alloc& __a, pointer __p, size_type __n)$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:void
deallocate_bytes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      deallocate_bytes(void* __p, size_t __nbytes,$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:void
deallocate_object	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	deallocate_object(_Up* __p, size_t __n = 1)$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:void
debug	include/sak/debug/debug.hpp	/^namespace debug$/;"	n	namespace:sak
debug	include/sak/debug/instance_counter/instance_counter.hpp	/^namespace debug$/;"	n	namespace:sak
debug	include/sak/debug/instance_counter/local_instance_counter/local_instance_counter.hpp	/^namespace debug$/;"	n	namespace:sak
debug	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^namespace debug$/;"	n	namespace:sak
debug	include/sak/debug/test_handler/test_handler.hpp	/^namespace debug$/;"	n	namespace:sak
dec	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags dec =         _S_dec;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
dec	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  dec(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
decimal_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      decimal_point() const$/;"	f	class:std::numpunct	typeref:typename:char_type
decimal_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      decimal_point() const$/;"	f	class:std::moneypunct	typeref:typename:char_type
decimal_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char *decimal_point;		\/* Decimal point character.  *\/$/;"	m	struct:lconv	typeref:typename:char *
default_delete	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^        default_delete(const default_delete<_Up>&) noexcept { }$/;"	f	struct:std::default_delete	typeref:typename:_GLIBCXX23_CONSTEXPR
default_delete	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^        default_delete(const default_delete<_Up[]>&) noexcept { }$/;"	f	struct:std::default_delete	typeref:typename:_GLIBCXX23_CONSTEXPR
default_delete	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    struct default_delete$/;"	s	namespace:std
default_delete	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    struct default_delete<_Tp[]>$/;"	s	namespace:std
default_derived	include/sak/pattern/default_derived.hpp	/^class default_derived$/;"	c	namespace:sak::pattern
default_instance_counter	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@debug@instance_counter@instance_counter.c++	/^instance_counter& ::sak::debug::instance_counter::default_instance_counter(	const shared_ptr< in/;"	f	class:sak::debug::instance_counter	typeref:typename:instance_counter &::
default_instance_counter	source/sak/debug/instance_counter/instance_counter.c++	/^instance_counter& ::sak::debug::instance_counter::default_instance_counter(	const shared_ptr< in/;"	f	class:sak::debug::instance_counter	typeref:typename:instance_counter &::
defaultfloat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  defaultfloat(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
delete_object	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	delete_object(_Up* __p)$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:void
deleter_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      using deleter_type  = _Dp;$/;"	t	class:std::unique_ptr	typeref:typename:_Dp
deque	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	deque(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::deque
deque	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      deque(const allocator_type& __a)$/;"	f	class:std::deque
deque	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      deque(const deque& __x)$/;"	f	class:std::deque
deque	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      deque(const deque& __x, const __type_identity_t<allocator_type>& __a)$/;"	f	class:std::deque
deque	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      deque(deque&& __x, const __type_identity_t<allocator_type>& __a)$/;"	f	class:std::deque
deque	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      deque(deque&& __x, const allocator_type& __a, false_type)$/;"	f	class:std::deque
deque	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      deque(deque&& __x, const allocator_type& __a, true_type)$/;"	f	class:std::deque
deque	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      deque(initializer_list<value_type> __l,$/;"	f	class:std::deque
deque	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      deque(size_type __n, const allocator_type& __a = allocator_type())$/;"	f	class:std::deque
deque	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      deque(size_type __n, const value_type& __value = value_type(),$/;"	f	class:std::deque
deque	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      deque(size_type __n, const value_type& __value,$/;"	f	class:std::deque
deque	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^    class deque : protected _Deque_base<_Tp, _Alloc>$/;"	c	namespace:std
derived_one	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@main.c++	/^class derived_one : public abstract_base$/;"	c	file:
derived_one	source/main.c++	/^class derived_one : public abstract_base$/;"	c	file:
derived_two	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@main.c++	/^class derived_two : public abstract_base$/;"	c	file:
derived_two	source/main.c++	/^class derived_two : public abstract_base$/;"	c	file:
derived_type	include/sak/pattern/default_derived.hpp	/^	typedef _T1 derived_type;$/;"	t	class:sak::pattern::default_derived	typeref:typename:_T1
deserializable	include/sak/stream/deserializable.hpp	/^	deserializable( ){ };$/;"	f	class:sak::stream::deserializable
deserializable	include/sak/stream/deserializable.hpp	/^class deserializable$/;"	c	namespace:sak::stream
destination_address_required	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      destination_address_required = 		EDESTADDRREQ,$/;"	e	enum:std::errc
destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	destroy(_Alloc& __a, _Tp* __p)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX20_CONSTEXPR void
destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX20_CONSTEXPR void
destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	destroy(allocator_type&, _Up* __p)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX20_CONSTEXPR void
destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	destroy(_Up* __p)$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:_GLIBCXX20_DEPRECATED_SUGGEST ("allocator_traits::destroy")void
destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	destroy(allocator_type&, _Up* __p)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX20_CONSTEXPR void
destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^	destroy(_Up* __p)$/;"	f	class:std::__new_allocator	typeref:typename:void
destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      destroy(pointer __p) { __p->~_Tp(); }$/;"	f	class:std::__new_allocator	typeref:typename:void
destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^    destroy(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^      destroy(_Alloc& __a, _Ptr __p)$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:_GLIBCXX14_CONSTEXPR std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
destroy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    static void destroy(_Alloc& __a, pointer __p)$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:void
destroy_at	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^    destroy_at(_Tp* __location)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION _GLIBCXX20_CONSTEXPR void
destroy_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^    destroy_n(_ForwardIterator __first, _Size __count)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
detach	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^  inline void thread::detach() { std::__throw_system_error(EINVAL); }$/;"	f	class:std::thread	typeref:typename:void
dev_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __dev_t dev_t;$/;"	t	typeref:typename:__dev_t
device_or_resource_busy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      device_or_resource_busy = 		EBUSY,$/;"	e	enum:std::errc
dgettext	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@libintl.h	/^# define dgettext(/;"	d
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using difference_type = std::ptrdiff_t;$/;"	t	struct:std::allocator_traits	typeref:typename:std::ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using difference_type = typename _Diff<_Alloc, pointer>::type;$/;"	t	struct:std::allocator_traits	typeref:typename:_Diff<_Alloc,pointer>::type
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      typedef ptrdiff_t   difference_type;$/;"	t	class:std::allocator	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      typedef ptrdiff_t  difference_type;$/;"	t	class:std::allocator	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      using difference_type = ptrdiff_t;$/;"	t	struct:std::__atomic_ref	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      using difference_type = value_type;$/;"	t	struct:std::__atomic_base	typeref:typename:value_type
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      using difference_type = value_type;$/;"	t	struct:std::__atomic_float	typeref:typename:value_type
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      using difference_type = value_type;$/;"	t	struct:std::__atomic_ref	typeref:typename:value_type
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef typename _Alloc_traits::difference_type	difference_type;$/;"	t	class:std::basic_string	typeref:typename:_Alloc_traits::difference_type
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      using difference_type = std::ptrdiff_t;$/;"	t	struct:std::allocator_traits	typeref:typename:std::ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      typedef std::ptrdiff_t  difference_type;$/;"	t	class:std::__new_allocator	typeref:typename:std::ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^      typedef ptrdiff_t difference_type;$/;"	t	struct:std::pointer_traits	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^      using difference_type = __detected_or_t<ptrdiff_t, __diff_t, _Ptr>;$/;"	t	struct:std::__ptr_traits_impl	typeref:typename:__detected_or_t<ptrdiff_t,__diff_t,_Ptr>
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef std::ptrdiff_t			difference_type;$/;"	t	class:std::regex_token_iterator	typeref:typename:std::ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef std::ptrdiff_t		     difference_type;$/;"	t	class:std::regex_iterator	typeref:typename:std::ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef typename __iter_traits::difference_type	   difference_type;$/;"	t	class:std::match_results	typeref:typename:__iter_traits::difference_type
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef typename __iter_traits::difference_type 	difference_type;$/;"	t	class:std::sub_match	typeref:typename:__iter_traits::difference_type
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^		using difference_type = ptrdiff_t;$/;"	t	struct:std::_Sp_counted_array_base::_M_init::_Iter	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef ptrdiff_t					difference_type;$/;"	t	class:std::vector	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef ptrdiff_t					difference_type;$/;"	t	class:std::deque	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef ptrdiff_t				difference_type;$/;"	t	struct:std::_Deque_iterator	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef typename __traits_type::difference_type	difference_type;$/;"	t	class:std::move_iterator	typeref:typename:__traits_type::difference_type
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef typename __traits_type::difference_type	difference_type;$/;"	t	class:std::reverse_iterator	typeref:typename:__traits_type::difference_type
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef typename __traits_type::difference_type 	difference_type;$/;"	t	class:__gnu_cxx::__normal_iterator	typeref:typename:__traits_type::difference_type
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using difference_type = iter_difference_t<_It>;$/;"	t	class:std::counted_iterator	typeref:typename:iter_difference_t<_It>
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using difference_type = iter_difference_t<_It>;$/;"	t	struct:std::incrementable_traits	typeref:typename:iter_difference_t<_It>
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using difference_type = iter_difference_t<_It>;$/;"	t	struct:std::iterator_traits	typeref:typename:iter_difference_t<_It>
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using difference_type = iter_difference_t<_Iterator>;$/;"	t	class:std::move_iterator	typeref:typename:iter_difference_t<_Iterator>
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using difference_type = iter_difference_t<_Iterator>;$/;"	t	class:std::reverse_iterator	typeref:typename:iter_difference_t<_Iterator>
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using difference_type = ptrdiff_t;$/;"	t	class:std::back_insert_iterator	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using difference_type = ptrdiff_t;$/;"	t	class:std::front_insert_iterator	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using difference_type = ptrdiff_t;$/;"	t	class:std::insert_iterator	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    using difference_type = iter_difference_t<_It>;$/;"	t	class:std::basic_const_iterator	typeref:typename:iter_difference_t<_It>
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef _Distance  difference_type;$/;"	t	struct:std::iterator	typeref:typename:_Distance
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef ptrdiff_t                   difference_type;$/;"	t	struct:std::iterator_traits	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef typename _Iterator::difference_type   difference_type;$/;"	t	struct:std::__iterator_traits	typeref:typename:_Iterator::difference_type
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef typename _Iterator::difference_type   difference_type;$/;"	t	struct:std::iterator_traits	typeref:typename:_Iterator::difference_type
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      using difference_type   = ptrdiff_t;$/;"	t	struct:std::iterator_traits	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef typename _Rep_type::difference_type	 difference_type;$/;"	t	class:std::map	typeref:typename:_Rep_type::difference_type
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef ptrdiff_t			 difference_type;$/;"	t	struct:std::_Rb_tree_const_iterator	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef ptrdiff_t			 difference_type;$/;"	t	struct:std::_Rb_tree_iterator	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef ptrdiff_t 			difference_type;$/;"	t	class:std::_Rb_tree	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      typedef ptrdiff_t					difference_type;$/;"	t	class:std::vector	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      using difference_type = ptrdiff_t;$/;"	t	class:std::ostreambuf_iterator	typeref:typename:ptrdiff_t
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    typedef typename _Alloc::difference_type        difference_type;$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:_Alloc::difference_type
difference_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    typedef typename _Base_type::difference_type    difference_type;$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:_Base_type::difference_type
difftime	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#  define difftime __difftime6/;"	d
digit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_base.h	/^    static const mask digit 	= _ISdigit;$/;"	m	struct:std::ctype_base	typeref:typename:const mask
directory_not_empty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      directory_not_empty = 			ENOTEMPTY,$/;"	e	enum:std::errc
distance	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_funcs.h	/^    distance(_InputIterator __first, _InputIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR typename iterator_traits<_InputIterator>::difference_type
distribution_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	typedef uniform_int_distribution<_IntType> distribution_type;$/;"	t	struct:std::uniform_int_distribution::param_type	typeref:typename:uniform_int_distribution<_IntType>
div_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^  } div_t;$/;"	t	typeref:struct:__anond6b8f37d0108
divides	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct divides : public binary_function<_Tp, _Tp, _Tp>$/;"	s	namespace:std
divides	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct divides<void>$/;"	s	namespace:std
dmy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	enum:std::time_base::dateorder
dngettext	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@libintl.h	/^# define dngettext(/;"	d
do_close	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@messages_members.h	/^    messages<_CharT>::do_close(catalog) const$/;"	f	class:std::messages	typeref:typename:void
do_curr_symbol	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      do_curr_symbol()   const$/;"	f	class:std::moneypunct	typeref:typename:string_type
do_decimal_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      do_decimal_point() const$/;"	f	class:std::numpunct	typeref:typename:char_type
do_decimal_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      do_decimal_point() const$/;"	f	class:std::moneypunct	typeref:typename:char_type
do_falsename	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      do_falsename() const$/;"	f	class:std::numpunct	typeref:typename:string_type
do_frac_digits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      do_frac_digits() const$/;"	f	class:std::moneypunct	typeref:typename:int
do_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      do_get(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	class:std::num_get	typeref:typename:iter_type
do_grouping	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      do_grouping() const$/;"	f	class:std::numpunct	typeref:typename:string
do_grouping	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      do_grouping() const$/;"	f	class:std::moneypunct	typeref:typename:string
do_narrow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      do_narrow(char_type __c, char __dfault __attribute__((__unused__))) const$/;"	f	class:std::ctype	typeref:typename:char
do_narrow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      do_narrow(const char_type* __lo, const char_type* __hi,$/;"	f	class:std::ctype	typeref:typename:const char_type *
do_neg_format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      do_neg_format() const$/;"	f	class:std::moneypunct	typeref:typename:pattern
do_negative_sign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      do_negative_sign() const$/;"	f	class:std::moneypunct	typeref:typename:string_type
do_open	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@messages_members.h	/^    messages<_CharT>::do_open(const basic_string<char>& __s,$/;"	f	class:std::messages	typeref:typename:messages<_CharT>::catalog
do_pos_format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      do_pos_format() const$/;"	f	class:std::moneypunct	typeref:typename:pattern
do_positive_sign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      do_positive_sign() const$/;"	f	class:std::moneypunct	typeref:typename:string_type
do_put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      do_put(iter_type __s, ios_base& __io, char_type __fill, long __v) const$/;"	f	class:std::num_put	typeref:typename:iter_type
do_put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      do_put(iter_type __s, ios_base& __io, char_type __fill,$/;"	f	class:std::num_put	typeref:typename:iter_type
do_thousands_sep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      do_thousands_sep() const$/;"	f	class:std::numpunct	typeref:typename:char_type
do_thousands_sep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      do_thousands_sep() const$/;"	f	class:std::moneypunct	typeref:typename:char_type
do_truename	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      do_truename() const$/;"	f	class:std::numpunct	typeref:typename:string_type
do_widen	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      do_widen(char __c) const$/;"	f	class:std::ctype	typeref:typename:char_type
do_widen	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      do_widen(const char* __lo, const char* __hi, char_type* __to) const$/;"	f	class:std::ctype	typeref:typename:const char *
drand48_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^struct drand48_data$/;"	s
duration	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  constexpr duration(const duration<_Rep2, _Period2>& __d)$/;"	f	class:std::chrono::duration
duration	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  constexpr explicit duration(const _Rep2& __rep)$/;"	f	class:std::chrono::duration
duration	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef _Dur						duration;$/;"	t	class:std::chrono::time_point	typeref:typename:_Dur
duration	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typename _Tp::duration;$/;"	m	class:std::chrono::_Tp	typeref:meta:typename
duration	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typename _Tp::time_point::duration;$/;"	m	class:std::chrono::_Tp::time_point	typeref:meta:typename
duration	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      class duration$/;"	c	namespace:std::chrono
duration	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      typedef chrono::nanoseconds				duration;$/;"	t	struct:std::chrono::steady_clock	typeref:typename:chrono::nanoseconds
duration	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      typedef chrono::nanoseconds				duration;$/;"	t	struct:std::chrono::system_clock	typeref:typename:chrono::nanoseconds
duration	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using duration                  = chrono::nanoseconds;$/;"	t	struct:std::filesystem::__file_clock	typeref:typename:chrono::nanoseconds
duration_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      duration_cast(const duration<_Rep, _Period>& __d)$/;"	f	namespace:std::chrono	typeref:typename:_GLIBCXX_NODISCARD __enable_if_is_duration<_ToDur>
duration_values	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      struct duration_values$/;"	s	namespace:std::chrono
dynamic_pointer_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    dynamic_pointer_cast(const shared_ptr<_Up>& __r) noexcept$/;"	f	namespace:std	typeref:typename:shared_ptr<_Tp>
dynamic_pointer_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    dynamic_pointer_cast(shared_ptr<_Up>&& __r) noexcept$/;"	f	namespace:std	typeref:typename:shared_ptr<_Tp>
dynamic_pointer_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    dynamic_pointer_cast(const __shared_ptr<_Tp1, _Lp>& __r) noexcept$/;"	f	namespace:std	typeref:typename:__shared_ptr<_Tp,_Lp>
egrep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      static constexpr flag_type egrep = regex_constants::egrep;$/;"	m	class:std::basic_regex	typeref:typename:flag_type
egrep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    basic_regex<_Ch, _Tr>::egrep;$/;"	m	class:std::basic_regex<_Ch, _Tr>	typeref:typename:regex_constants::syntax_option_type
egrep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr syntax_option_type egrep = _S_egrep;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE syntax_option_type
element_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^      typedef _Tp element_type;$/;"	t	class:std::auto_ptr	typeref:typename:_Tp
element_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^      typedef void element_type;$/;"	t	class:std::auto_ptr	typeref:typename:void
element_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^      typedef _Tp  element_type;$/;"	t	struct:std::pointer_traits	typeref:typename:_Tp
element_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^      using element_type = _Elt;$/;"	t	struct:std::__ptr_traits_impl	typeref:typename:_Elt
element_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^      using element_type = _Elt;$/;"	t	struct:std::__ptr_traits_ptr_to	typeref:typename:_Elt
element_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^      using element_type = _Tp;$/;"	t	struct:std::__ptr_traits_ptr_to	typeref:typename:_Tp
element_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^  template<typename _Ptr> requires requires { typename _Ptr::element_type; }$/;"	m	class:std::_Ptr	typeref:meta:typename
element_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      using element_type = typename __shared_ptr<_Tp>::element_type;$/;"	t	class:std::shared_ptr	typeref:typename:__shared_ptr<_Tp>::element_type
element_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using element_type = _Tp;$/;"	t	class:std::__shared_ptr_access	typeref:typename:_Tp
element_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using element_type = typename remove_extent<_Tp>::type;$/;"	t	class:std::__shared_ptr	typeref:typename:remove_extent<_Tp>::type
element_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using element_type = typename remove_extent<_Tp>::type;$/;"	t	class:std::__shared_ptr_access	typeref:typename:remove_extent<_Tp>::type
element_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using element_type = typename remove_extent<_Tp>::type;$/;"	t	class:std::__weak_ptr	typeref:typename:remove_extent<_Tp>::type
element_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      using element_type  = _Tp;$/;"	t	class:std::unique_ptr	typeref:typename:_Tp
elements	include/sak/stream/serial_data.hpp	/^	serial_data_map& elements	=	( *elementsPointer );$/;"	m	class:sak::stream::serial_data	typeref:typename:serial_data_map &
elementsPointer	include/sak/stream/serial_data.hpp	/^	unique_ptr< serial_data_map >	elementsPointer	=	make_unique< serial_data_map >( );$/;"	m	class:sak::stream::serial_data	typeref:typename:unique_ptr<serial_data_map>
emplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	emplace(const_iterator __pos, _Args&&... __args)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
emplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	emplace(_Args&&... __args)$/;"	f	class:std::map	typeref:typename:std::pair<iterator,bool>
emplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^	emplace(_Args&&... __args)$/;"	f	class:std::stack	typeref:typename:decltype(auto)
emplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^	emplace(_Args&&... __args)$/;"	f	class:std::stack	typeref:typename:void
emplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	emplace(const_iterator __position, _Args&&... __args)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
emplace_back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	emplace_back(_Args&&... __args)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR reference
emplace_hint	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	emplace_hint(const_iterator __pos, _Args&&... __args)$/;"	f	class:std::map	typeref:typename:iterator
empty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      empty() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR bool
empty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      [[nodiscard]] bool empty() const noexcept { return _M_ptr == nullptr; }$/;"	f	class:std::_Node_handle_common	typeref:typename:bool
empty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    empty(const _Container& __cont) noexcept(noexcept(__cont.empty()))$/;"	f	namespace:std	typeref:typename:auto
empty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    empty(const _Tp (&)[_Nm]) noexcept$/;"	f	namespace:std	typeref:typename:bool
empty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    empty(initializer_list<_Tp> __il) noexcept$/;"	f	namespace:std	typeref:typename:bool
empty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      empty() const noexcept$/;"	f	class:std::match_results	typeref:typename:_GLIBCXX_NODISCARD bool
empty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      empty() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR bool
empty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      empty() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD bool
empty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      empty() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::map	typeref:typename:_GLIBCXX_NODISCARD bool
empty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^      empty() const$/;"	f	class:std::stack	typeref:typename:_GLIBCXX_NODISCARD bool
empty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      empty() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:_GLIBCXX_NODISCARD bool
empty	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      empty() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR bool
enable_instance_counter	include/sak/debug/instance_counter/instance_counter.hpp	/^	enable_instance_counter( const type_info& info )$/;"	f	class:sak::debug::instance_counter::enable_instance_counter
enable_instance_counter	include/sak/debug/instance_counter/instance_counter.hpp	/^class enable_instance_counter$/;"	c	namespace:sak::debug::instance_counter
enable_shared_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      constexpr enable_shared_from_this() noexcept { }$/;"	f	class:std::enable_shared_from_this
enable_shared_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      enable_shared_from_this(const enable_shared_from_this&) noexcept { }$/;"	f	class:std::enable_shared_from_this
enable_shared_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    class enable_shared_from_this$/;"	c	namespace:std
encoding	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      encoding() const throw()$/;"	f	class:std::__codecvt_abstract_base	typeref:typename:int
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      end() _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR iterator
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      end() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_iterator
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const seekdir end =		_S_end;$/;"	m	class:std::ios_base	typeref:typename:const seekdir
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    end(_Container& __cont) -> decltype(__cont.end())$/;"	f	namespace:std	typeref:typename:decltype(__cont.end ())
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    end(_Tp (&__arr)[_Nm]) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR _Tp *
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    end(const _Container& __cont) -> decltype(__cont.end())$/;"	f	namespace:std	typeref:typename:decltype(__cont.end ())
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      end() const noexcept$/;"	f	class:std::match_results	typeref:typename:const_iterator
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      end() _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR iterator
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      end() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_iterator
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      end() _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD iterator
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      end() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD const_iterator
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      end() _GLIBCXX_NOEXCEPT$/;"	f	class:std::map	typeref:typename:iterator
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      end() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::map	typeref:typename:const_iterator
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^      end()$/;"	f	class:std::_Temporary_buffer	typeref:typename:iterator
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      end() _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      end() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:const_iterator
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      end() _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR iterator
end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      end() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_iterator
end_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    int32_t *end_ptr;		\/* Pointer behind state table.  *\/$/;"	m	struct:random_data	typeref:typename:int32_t *
ends_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      ends_with(_CharT __x) const noexcept$/;"	f	class:std::basic_string	typeref:typename:bool
ends_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept$/;"	f	class:std::basic_string	typeref:typename:bool
ends_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      ends_with(const _CharT* __x) const noexcept$/;"	f	class:std::basic_string	typeref:typename:bool
eof	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      eof() const$/;"	f	class:std::basic_ios	typeref:typename:bool
eof	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      eof() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::char_traits	typeref:typename:_GLIBCXX_CONSTEXPR int_type
eof	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      eof() noexcept$/;"	f	struct:std::char_traits	typeref:typename:int_type
eof	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      eof()$/;"	f	struct:__gnu_cxx::char_traits	typeref:typename:_GLIBCXX_CONSTEXPR int_type
eofbit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const iostate eofbit =	_S_eofbit;$/;"	m	class:std::ios_base	typeref:typename:const iostate
eq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::char_traits	typeref:typename:_GLIBCXX_CONSTEXPR bool
eq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      eq(const char_type& __c1, const char_type& __c2) noexcept$/;"	f	struct:std::char_traits	typeref:typename:bool
eq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      eq(const char_type& __c1, const char_type& __c2)$/;"	f	struct:__gnu_cxx::char_traits	typeref:typename:_GLIBCXX_CONSTEXPR bool
eq_int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      eq_int_type(const int_type& __c1, const int_type& __c2) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::char_traits	typeref:typename:_GLIBCXX_CONSTEXPR bool
eq_int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      eq_int_type(const int_type& __c1, const int_type& __c2) noexcept$/;"	f	struct:std::char_traits	typeref:typename:bool
eq_int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      eq_int_type(const int_type& __c1, const int_type& __c2)$/;"	f	struct:__gnu_cxx::char_traits	typeref:typename:_GLIBCXX_CONSTEXPR bool
equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	equal(_II1 __first1, _II1 __last1, _II2 __first2)$/;"	f	struct:std::__equal	typeref:typename:_GLIBCXX20_CONSTEXPR bool
equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	equal(const _Tp* __first1, const _Tp* __last1, const _Tp* __first2)$/;"	f	struct:std::__equal	typeref:typename:_GLIBCXX20_CONSTEXPR bool
equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    equal(_II1 __first1, _II1 __last1, _II2 __first2)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_ALGO _GLIBCXX20_CONSTEXPR bool
equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    equal(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    equal(_IIter1 __first1, _IIter1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      equal(const istreambuf_iterator& __b) const$/;"	f	class:std::istreambuf_iterator	typeref:typename:_GLIBCXX_NODISCARD bool
equal_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    equal_range(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR pair<_ForwardIterator,_ForwardIterator>
equal_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	equal_range(const _Kt& __x) const$/;"	f	class:std::map	typeref:typename:decltype(pair<const_iterator,const_iterator> (_M_t._M_equal_range_tr (__x)))
equal_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	equal_range(const _Kt& __x)$/;"	f	class:std::map	typeref:typename:decltype(pair<iterator,iterator> (_M_t._M_equal_range_tr (__x)))
equal_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      equal_range(const key_type& __x) const$/;"	f	class:std::map	typeref:typename:std::pair<const_iterator,const_iterator>
equal_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      equal_range(const key_type& __x)$/;"	f	class:std::map	typeref:typename:std::pair<iterator,iterator>
equal_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    equal_range(const _Key& __k) const$/;"	f	class:std::_Rb_tree
equal_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    equal_range(const _Key& __k)$/;"	f	class:std::_Rb_tree
equal_to	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct equal_to : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
equal_to	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct equal_to<void>$/;"	s	namespace:std
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      erase(__const_iterator __first, __const_iterator __last)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      erase(__const_iterator __position)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      erase(size_type __pos = 0, size_type __n = npos)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      erase(const_iterator __first, const_iterator __last)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      erase(const_iterator __position)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      erase(const_iterator __first, const_iterator __last)$/;"	f	class:std::deque	typeref:typename:iterator
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      erase(const_iterator __position)$/;"	f	class:std::deque	typeref:typename:iterator
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      erase(const key_type& __x)$/;"	f	class:std::map	typeref:typename:size_type
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      erase(const_iterator __first, const_iterator __last)$/;"	f	class:std::map	typeref:typename:iterator
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      erase(const_iterator __position)$/;"	f	class:std::map	typeref:typename:iterator
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      erase(iterator __first, iterator __last)$/;"	f	class:std::map	typeref:typename:void
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      erase(iterator __position)$/;"	f	class:std::map	typeref:typename:_GLIBCXX_ABI_TAG_CXX11 iterator
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      erase(iterator __position)$/;"	f	class:std::map	typeref:typename:void
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      erase(const_iterator __first, const_iterator __last)$/;"	f	class:std::_Rb_tree	typeref:typename:_GLIBCXX_ABI_TAG_CXX11 iterator
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      erase(const_iterator __first, const_iterator __last)$/;"	f	class:std::_Rb_tree	typeref:typename:void
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      erase(const_iterator __position)$/;"	f	class:std::_Rb_tree	typeref:typename:_GLIBCXX_ABI_TAG_CXX11 iterator
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      erase(iterator __first, iterator __last)$/;"	f	class:std::_Rb_tree	typeref:typename:void
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      erase(iterator __position)$/;"	f	class:std::_Rb_tree	typeref:typename:_GLIBCXX_ABI_TAG_CXX11 iterator
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    erase(const _Key& __x)$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::size_type
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      erase(const_iterator __first, const_iterator __last)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
erase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      erase(const_iterator __position)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
erase_event	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      erase_event,$/;"	e	enum:std::ios_base::event
errc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^  enum class errc$/;"	g	namespace:std
errcnt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  long long errcnt;            \/* calibration errors (ro) *\/$/;"	m	struct:timex	typeref:typename:long long
errno	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@errno.h	/^# define errno (*__errno_/;"	d
error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      error,$/;"	e	enum:std::codecvt_base::result
error_code	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^	error_code() { }$/;"	f	struct:std::ios_base::system_error::error_code
error_code	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      struct error_code$/;"	s	struct:std::ios_base::system_error
error_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@error_t.h	/^typedef int error_t;$/;"	t	typeref:typename:int
error_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^    using error_type = regex_constants::error_type;$/;"	t	class:std::regex_error	typeref:typename:regex_constants::error_type
error_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^  enum error_type$/;"	g	namespace:std::regex_constants
esterror	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  long long esterror;          \/* estimated error (usec) *\/$/;"	m	struct:timex	typeref:typename:long long
event	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    enum event$/;"	g	class:std::ios_base
event_callback	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    typedef void (*event_callback) (event __e, ios_base& __b, int __i);$/;"	t	class:std::ios_base	typeref:typename:void (*)(event __e,ios_base & __b,int __i)
exception	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception.h	/^    exception() _GLIBCXX_NOTHROW { }$/;"	f	class:std::exception
exception	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception.h	/^  class exception$/;"	c	namespace:std
exception_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^      exception_ptr(exception_ptr&& __o) noexcept$/;"	f	class:std::__exception_ptr::exception_ptr
exception_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^      exception_ptr(nullptr_t) noexcept$/;"	f	class:std::__exception_ptr::exception_ptr
exception_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^    class exception_ptr$/;"	c	namespace:std::__exception_ptr
exception_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^    exception_ptr::exception_ptr() _GLIBCXX_USE_NOEXCEPT$/;"	f	class:std::__exception_ptr::exception_ptr	typeref:typename:_GLIBCXX_EH_PTR_USED
exception_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^    exception_ptr::exception_ptr(const exception_ptr& __other)$/;"	f	class:std::__exception_ptr::exception_ptr	typeref:typename:_GLIBCXX_EH_PTR_USED
exceptions	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      exceptions() const$/;"	f	class:std::basic_ios	typeref:typename:iostate
exceptions	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      exceptions(iostate __except)$/;"	f	class:std::basic_ios	typeref:typename:void
exchange	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      exchange(_Fp __desired,$/;"	f	struct:std::__atomic_float	typeref:typename:_Fp
exchange	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      exchange(_Fp __desired,$/;"	f	struct:std::__atomic_ref	typeref:typename:_Fp
exchange	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      exchange(_Tp __desired, memory_order __m = memory_order_seq_cst)$/;"	f	struct:std::__atomic_ref	typeref:typename:_Tp
exchange	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      exchange(_Tp __desired,$/;"	f	struct:std::__atomic_ref	typeref:typename:_Tp
exchange	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      exchange(_Tp* __desired,$/;"	f	struct:std::__atomic_ref	typeref:typename:_Tp *
exchange	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      exchange(_Tp* __ptr, _Val<_Tp> __desired, memory_order __m) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE _Val<_Tp>
exchange	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      exchange(__int_type __i,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE __int_type
exchange	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      exchange(__pointer_type __p,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE __pointer_type
exchange	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      exchange(shared_ptr<_Tp> __desired,$/;"	f	class:std::atomic	typeref:typename:shared_ptr<_Tp>
exchange	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      exchange(weak_ptr<_Tp> __desired,$/;"	f	class:std::atomic	typeref:typename:weak_ptr<_Tp>
executable_format_error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      executable_format_error = 		ENOEXEC,$/;"	e	enum:std::errc
execution	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^namespace execution$/;"	n	namespace:__pstl
expired	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      expired() const noexcept$/;"	f	class:std::__weak_ptr	typeref:typename:bool
extended	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      static constexpr flag_type extended = regex_constants::extended;$/;"	m	class:std::basic_regex	typeref:typename:flag_type
extended	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    basic_regex<_Ch, _Tr>::extended;$/;"	m	class:std::basic_regex<_Ch, _Tr>	typeref:typename:regex_constants::syntax_option_type
extended	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr syntax_option_type extended = _S_extended;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE syntax_option_type
extern_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      typedef _ExternT			extern_type;$/;"	t	class:std::__codecvt_abstract_base	typeref:typename:_ExternT
extern_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      typedef _ExternT			extern_type;$/;"	t	class:std::codecvt	typeref:typename:_ExternT
extern_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      typedef char			extern_type;$/;"	t	class:std::codecvt	typeref:typename:char
extern_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      typedef char8_t			extern_type;$/;"	t	class:std::codecvt	typeref:typename:char8_t
extract	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      extract(const key_type& __x)$/;"	f	class:std::map	typeref:typename:node_type
extract	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      extract(const_iterator __pos)$/;"	f	class:std::map	typeref:typename:node_type
extract	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      extract(const key_type& __k)$/;"	f	class:std::_Rb_tree	typeref:typename:node_type
extract	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      extract(const_iterator __pos)$/;"	f	class:std::_Rb_tree	typeref:typename:node_type
facet	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    facet(size_t __refs = 0) throw() : _M_refcount(__refs ? 1 : 0)$/;"	f	class:std::locale::facet
facet	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^  class locale::facet$/;"	c	class:std::locale
fail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      fail() const$/;"	f	class:std::basic_ios	typeref:typename:bool
fail	include/sak/debug/test_handler/test_handler.hpp	/^	inline	void fail( const string& message ){ validate( false, message ); };$/;"	f	class:sak::debug::test_handler::test_interface	typeref:typename:void
failbit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const iostate failbit =	_S_failbit;$/;"	m	class:std::ios_base	typeref:typename:const iostate
failed	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      failed() const _GLIBCXX_USE_NOEXCEPT$/;"	f	class:std::ostreambuf_iterator	typeref:typename:_GLIBCXX_NODISCARD bool
failure	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    class _GLIBCXX_ABI_TAG_CXX11 failure : public system_error$/;"	c	class:std::ios_base
falsename	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      falsename() const$/;"	f	class:std::numpunct	typeref:typename:string_type
fd_mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^typedef __fd_mask fd_mask;$/;"	t	typeref:typename:__fd_mask
fd_set	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^  } fd_set;$/;"	t	typeref:struct:__anon2cfddada0108
fds_bits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^    __fd_mask fds_bits[__FD_SETSIZE \/ __NFDBITS];$/;"	m	struct:__anon2cfddada0108	typeref:typename:__fd_mask[]
fetch_add	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_add(_Tp* __ptr, _Diff<_Tp> __i, memory_order __m) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE _Tp
fetch_add	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_add(__int_type __i,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE __int_type
fetch_add	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_add(difference_type __d,$/;"	f	struct:std::__atomic_ref	typeref:typename:_GLIBCXX_ALWAYS_INLINE value_type
fetch_add	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_add(ptrdiff_t __d,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE __pointer_type
fetch_add	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_add(value_type __i,$/;"	f	struct:std::__atomic_float	typeref:typename:value_type
fetch_add	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_add(value_type __i,$/;"	f	struct:std::__atomic_ref	typeref:typename:value_type
fetch_and	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_and(_Tp* __ptr, _Val<_Tp> __i, memory_order __m) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE _Tp
fetch_and	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_and(__int_type __i,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE __int_type
fetch_and	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_and(value_type __i,$/;"	f	struct:std::__atomic_ref	typeref:typename:value_type
fetch_or	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_or(_Tp* __ptr, _Val<_Tp> __i, memory_order __m) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE _Tp
fetch_or	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_or(__int_type __i,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE __int_type
fetch_or	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_or(value_type __i,$/;"	f	struct:std::__atomic_ref	typeref:typename:value_type
fetch_sub	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_sub(_Tp* __ptr, _Diff<_Tp> __i, memory_order __m) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE _Tp
fetch_sub	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_sub(__int_type __i,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE __int_type
fetch_sub	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_sub(difference_type __d,$/;"	f	struct:std::__atomic_ref	typeref:typename:_GLIBCXX_ALWAYS_INLINE value_type
fetch_sub	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_sub(ptrdiff_t __d,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE __pointer_type
fetch_sub	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_sub(value_type __i,$/;"	f	struct:std::__atomic_float	typeref:typename:value_type
fetch_sub	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_sub(value_type __i,$/;"	f	struct:std::__atomic_ref	typeref:typename:value_type
fetch_xor	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_xor(_Tp* __ptr, _Val<_Tp> __i, memory_order __m) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE _Tp
fetch_xor	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_xor(__int_type __i,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE __int_type
fetch_xor	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      fetch_xor(value_type __i,$/;"	f	struct:std::__atomic_ref	typeref:typename:value_type
fgetpos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#  define fgetpos fgetpos6/;"	d
field	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    struct pattern { char field[4]; };$/;"	m	struct:std::money_base::pattern	typeref:typename:char[4]
file_clock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    using file_clock = ::std::filesystem::__file_clock;$/;"	t	namespace:std::chrono	typeref:typename:::std::filesystem::__file_clock
file_exists	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      file_exists = 	       			EEXIST,$/;"	e	enum:std::errc
file_time	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using file_time = time_point<file_clock, _Duration>;$/;"	t	namespace:std::chrono	typeref:typename:time_point<file_clock,_Duration>
file_too_large	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      file_too_large = 				EFBIG,$/;"	e	enum:std::errc
filename_too_long	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      filename_too_long = 			ENAMETOOLONG,$/;"	e	enum:std::errc
filesystem	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^  namespace filesystem { struct __file_clock; };$/;"	n	namespace:std
filesystem	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^  namespace filesystem$/;"	n	namespace:std
fill	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      fill() const$/;"	f	class:std::basic_ios	typeref:typename:char_type
fill	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      fill(char_type __ch)$/;"	f	class:std::basic_ios	typeref:typename:char_type
fill	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
fill_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    fill_n(_OI __first, _Size __n, const _Tp& __value)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OI
find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	find(const _Tp& __svt, size_type __pos = 0) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR _If_sv<_Tp,size_type>
find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      find(const basic_string& __str, size_type __pos = 0) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      find(const char_type* __s, size_t __n, const char_type& __a)$/;"	f	struct:std::char_traits	typeref:typename:_GLIBCXX17_CONSTEXPR const char_type *
find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^    find(const char_type* __s, std::size_t __n, const char_type& __a)$/;"	f	class:__gnu_cxx::char_traits	typeref:typename:_GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type *
find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    find(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _InputIterator
find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	find(const _Kt& __x) -> decltype(_M_t._M_find_tr(__x))$/;"	f	class:std::map	typeref:typename:decltype(_M_t._M_find_tr (__x))
find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	find(const _Kt& __x) const -> decltype(_M_t._M_find_tr(__x))$/;"	f	class:std::map	typeref:typename:decltype(_M_t._M_find_tr (__x))
find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      find(const key_type& __x) const$/;"	f	class:std::map	typeref:typename:const_iterator
find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      find(const key_type& __x)$/;"	f	class:std::map	typeref:typename:iterator
find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    find(const _Key& __k) const$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::const_iterator
find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    find(const _Key& __k)$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::iterator
find	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^    find(istreambuf_iterator<_CharT> __first,$/;"	f	namespace:std	typeref:typename:__gnu_cxx::__enable_if<__is_char<_CharT>::__value,istreambuf_iterator<_CharT>>::__type
find_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator1
find_first_not_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR _If_sv<_Tp,size_type>
find_first_not_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      find_first_not_of(const _CharT* __s, size_type __pos = 0) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
find_first_not_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      find_first_not_of(const basic_string& __str, size_type __pos = 0) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
find_first_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	find_first_of(const _Tp& __svt, size_type __pos = 0) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR _If_sv<_Tp,size_type>
find_first_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
find_first_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      find_first_of(const _CharT* __s, size_type __pos = 0) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
find_first_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      find_first_of(const basic_string& __str, size_type __pos = 0) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
find_first_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    find_first_of(_InputIterator __first1, _InputIterator __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _InputIterator
find_if	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    find_if(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _InputIterator
find_if_not	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    find_if_not(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _InputIterator
find_last_not_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR _If_sv<_Tp,size_type>
find_last_not_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      find_last_not_of(const _CharT* __s, size_type __pos = npos) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
find_last_not_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      find_last_not_of(const basic_string& __str, size_type __pos = npos) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
find_last_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	find_last_of(const _Tp& __svt, size_type __pos = npos) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR _If_sv<_Tp,size_type>
find_last_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
find_last_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      find_last_of(const _CharT* __s, size_type __pos = npos) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
find_last_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      find_last_of(const basic_string& __str, size_type __pos = npos) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
finish_test	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@debug@test_handler@netbeans_cpp_simple_test.c++	/^void netbeans_cpp_simple_test::finish_test( )$/;"	f	class:netbeans_cpp_simple_test	typeref:typename:void
finish_test	source/sak/debug/test_handler/netbeans_cpp_simple_test.c++	/^void netbeans_cpp_simple_test::finish_test( )$/;"	f	class:netbeans_cpp_simple_test	typeref:typename:void
first	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      _T1 first;                 \/\/\/< The first member$/;"	m	struct:std::pair	typeref:typename:_T1
first	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^	vector< _T1 > first;$/;"	m	struct:pair_vector	typeref:typename:vector<_T1>	file:
first	tests/sak/parser/test_serial_data.c++	/^	vector< _T1 > first;$/;"	m	struct:pair_vector	typeref:typename:vector<_T1>	file:
first_argument_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^      typedef typename _Tp::first_argument_type first_argument_type;$/;"	t	struct:std::_Refwrap_base_arg2	typeref:typename:_Tp::first_argument_type
first_argument_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef _Arg1 	first_argument_type; $/;"	t	struct:std::binary_function	typeref:typename:_Arg1
first_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      typedef _T1 first_type;    \/\/\/< The type of the `first` member$/;"	t	struct:std::pair	typeref:typename:_T1
fixed	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags fixed =       _S_fixed;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
fixed	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  fixed(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
flag_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef regex_constants::syntax_option_type flag_type;$/;"	t	class:std::basic_regex	typeref:typename:regex_constants::syntax_option_type
flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    flags() const$/;"	f	class:std::ios_base	typeref:typename:fmtflags
flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    flags(fmtflags __fmtfl)$/;"	f	class:std::ios_base	typeref:typename:fmtflags
flags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      flags() const noexcept$/;"	f	class:std::basic_regex	typeref:typename:flag_type
flip	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      flip() _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
flip	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    flip() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Bit_reference	typeref:typename:_GLIBCXX20_CONSTEXPR void
floatfield	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags floatfield =  _S_floatfield;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
floor	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      floor(const duration<_Rep, _Period>& __d)$/;"	f	namespace:std::chrono	typeref:typename:__enable_if_is_duration<_ToDur>
floor	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      floor(const time_point<_Clock, _Dur>& __tp)$/;"	f	namespace:std::chrono	typeref:typename:enable_if_t<__is_duration_v<_ToDur>,time_point<_Clock,_ToDur>>
fmtflags	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    typedef _Ios_Fmtflags fmtflags;$/;"	t	class:std::ios_base	typeref:typename:_Ios_Fmtflags
fopen	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#  define fopen fopen6/;"	d
for_each	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    for_each(_InputIterator __first, _InputIterator __last, _Function __f)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_ALGO _GLIBCXX20_CONSTEXPR _Function
for_each_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    for_each_n(_InputIterator __first, _Size __n, _Function __f)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _InputIterator
format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	format(_Out_iter __out, const basic_string<char_type, _St, _Sa>& __fmt,$/;"	f	class:std::match_results	typeref:typename:_Out_iter
format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	format(const basic_string<char_type, _St, _Sa>& __fmt,$/;"	f	class:std::match_results	typeref:typename:basic_string<char_type,_St,_Sa>
format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      format(const char_type* __fmt,$/;"	f	class:std::match_results	typeref:typename:string_type
format_default	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr match_flag_type format_default = _S_default;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE match_flag_type
format_first_only	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr match_flag_type format_first_only = _S_first_only;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE match_flag_type
format_no_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr match_flag_type format_no_copy = _S_no_copy;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE match_flag_type
format_sed	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr match_flag_type format_sed = _S_sed;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE match_flag_type
forward	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@move.h	/^    forward(typename std::remove_reference<_Tp>::type& __t) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _Tp &&
forward	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@move.h	/^    forward(typename std::remove_reference<_Tp>::type&& __t) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _Tp &&
forward_iterator_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^  struct forward_iterator_tag : public input_iterator_tag { };$/;"	s	namespace:std
fpos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^      fpos()$/;"	f	class:std::fpos
fpos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^      fpos(streamoff __off)$/;"	f	class:std::fpos
fpos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^    class fpos$/;"	c	namespace:std
fpos64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^typedef __fpos64_t fpos64_t;$/;"	t	typeref:typename:__fpos64_t
fpos_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^typedef __fpos64_t fpos_t;$/;"	t	typeref:typename:__fpos64_t
fpos_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^typedef __fpos_t fpos_t;$/;"	t	typeref:typename:__fpos_t
fptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    int32_t *fptr;		\/* Front pointer.  *\/$/;"	m	struct:random_data	typeref:typename:int32_t *
frac_digits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      frac_digits() const$/;"	f	class:std::moneypunct	typeref:typename:int
frac_digits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char frac_digits;		\/* Local fractional digits.  *\/$/;"	m	struct:lconv	typeref:typename:char
freopen	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#  define freopen freopen6/;"	d
freq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  long long freq;              \/* frequency offset (scaled ppm) *\/$/;"	m	struct:timex	typeref:typename:long long
from_bytes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      from_bytes(char __byte)$/;"	f	class:std::wstring_convert	typeref:typename:wide_string
from_bytes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      from_bytes(const byte_string& __str)$/;"	f	class:std::wstring_convert	typeref:typename:wide_string
from_bytes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      from_bytes(const char* __first, const char* __last)$/;"	f	class:std::wstring_convert	typeref:typename:wide_string
from_bytes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      from_bytes(const char* __ptr)$/;"	f	class:std::wstring_convert	typeref:typename:wide_string
from_string	include/sak/string.hpp	/^	from_string( const from_string& orig ) : from_string( orig.value ) { };$/;"	f	class:sak::from_string
from_string	include/sak/string.hpp	/^	from_string( const string& __value ) : value( __value ) { };$/;"	f	class:sak::from_string
from_string	include/sak/string.hpp	/^class from_string$/;"	c	namespace:sak
from_sys	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	from_sys(const chrono::sys_time<_Dur>& __t) noexcept$/;"	f	struct:std::filesystem::__file_clock	typeref:typename:chrono::file_time<_Dur>
from_time_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      from_time_t(std::time_t __t) noexcept$/;"	f	struct:std::chrono::system_clock	typeref:typename:time_point
front	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      front() const noexcept$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reference
front	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      front() noexcept$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reference
front	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      front() const$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reference
front	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      front()$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reference
front	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      front() _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD reference
front	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      front() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD const_reference
front	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      front() _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reference
front	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      front() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reference
front_insert_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      front_insert_iterator(_Container& __x)$/;"	f	class:std::front_insert_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR
front_insert_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    class front_insert_iterator$/;"	c	namespace:std
front_inserter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    front_inserter(_Container& __x)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR front_insert_iterator<_Container>
fsblkcnt64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __fsblkcnt64_t fsblkcnt64_t; \/* Type to count file system blocks.  *\/$/;"	t	typeref:typename:__fsblkcnt64_t
fsblkcnt_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __fsblkcnt64_t fsblkcnt_t; \/* Type to count file system blocks.  *\/$/;"	t	typeref:typename:__fsblkcnt64_t
fsblkcnt_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __fsblkcnt_t fsblkcnt_t; \/* Type to count file system blocks.  *\/$/;"	t	typeref:typename:__fsblkcnt_t
fscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#   define fscanf __isoc23_fscanf$/;"	d
fscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#   define fscanf __isoc99_fscanf$/;"	d
fseeko	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#   define fseeko fseeko6/;"	d
fsetpos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#  define fsetpos fsetpos6/;"	d
fsfilcnt64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __fsfilcnt64_t fsfilcnt64_t; \/* Type to count file system inodes.  *\/$/;"	t	typeref:typename:__fsfilcnt64_t
fsfilcnt_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __fsfilcnt64_t fsfilcnt_t; \/* Type to count file system inodes.  *\/$/;"	t	typeref:typename:__fsfilcnt64_t
fsfilcnt_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __fsfilcnt_t fsfilcnt_t; \/* Type to count file system inodes.  *\/$/;"	t	typeref:typename:__fsfilcnt_t
fsid_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __fsid_t fsid_t;$/;"	t	typeref:typename:__fsid_t
ftello	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#   define ftello ftello6/;"	d
function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	function(_Functor&& __f)$/;"	f	class:std::function
function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      function() noexcept$/;"	f	class:std::function
function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      function(const function& __x)$/;"	f	class:std::function
function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      function(function&& __x) noexcept$/;"	f	class:std::function
function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      function(nullptr_t) noexcept$/;"	f	class:std::function
function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    class function<_Res(_ArgTypes...)>$/;"	c	namespace:std
function_not_supported	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      function_not_supported = 			ENOSYS,$/;"	e	enum:std::errc
fwscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#    define fwscanf __isoc23_fwscanf$/;"	d
fwscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#    define fwscanf __isoc99_fwscanf$/;"	d
generate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    generate(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
generate_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    generate_n(_OutputIterator __first, _Size __n, _Generator __gen)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^      get() const throw() { return _M_ptr; }$/;"	f	class:std::auto_ptr	typeref:typename:element_type *
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocated_ptr.h	/^      value_type* get() { return std::__to_address(_M_ptr); }$/;"	f	struct:std::__allocated_ptr	typeref:typename:value_type *
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	class:std::num_get	typeref:typename:iter_type
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      get(catalog __c, int __set, int __msgid, const string_type& __s) const$/;"	f	class:std::messages	typeref:typename:string_type
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,$/;"	f	class:std::money_get	typeref:typename:iter_type
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      iter_type get(iter_type __s, iter_type __end, ios_base& __io,$/;"	f	class:std::time_get	typeref:typename:iter_type
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^      get() const noexcept$/;"	f	class:std::reference_wrapper	typeref:typename:_GLIBCXX20_CONSTEXPR _Tp &
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^	get() const noexcept { return _M_char; }$/;"	f	struct:std::__detail::_Compiler::_BracketState	typeref:typename:_GLIBCXX_NODISCARD _CharT
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      get() const noexcept$/;"	f	class:std::__shared_ptr	typeref:typename:element_type *
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    get(const pair<_Tp, _Up>& __p) noexcept$/;"	f	namespace:std	typeref:typename:const _Tp &
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    get(const pair<_Tp, _Up>&& __p) noexcept$/;"	f	namespace:std	typeref:typename:const _Tp &&
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    get(const pair<_Tp1, _Tp2>& __in) noexcept$/;"	f	namespace:std	typeref:typename:const typename tuple_element<_Int,pair<_Tp1,_Tp2>>::type &
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    get(const pair<_Tp1, _Tp2>&& __in) noexcept$/;"	f	namespace:std	typeref:typename:const typename tuple_element<_Int,pair<_Tp1,_Tp2>>::type &&
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    get(const pair<_Up, _Tp>& __p) noexcept$/;"	f	namespace:std	typeref:typename:const _Tp &
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    get(const pair<_Up, _Tp>&& __p) noexcept$/;"	f	namespace:std	typeref:typename:const _Tp &&
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    get(pair<_Tp, _Up>& __p) noexcept$/;"	f	namespace:std	typeref:typename:_Tp &
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    get(pair<_Tp, _Up>&& __p) noexcept$/;"	f	namespace:std	typeref:typename:_Tp &&
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    get(pair<_Tp1, _Tp2>& __in) noexcept$/;"	f	namespace:std	typeref:typename:tuple_element<_Int,pair<_Tp1,_Tp2>>::type &
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    get(pair<_Tp1, _Tp2>&& __in) noexcept$/;"	f	namespace:std	typeref:typename:tuple_element<_Int,pair<_Tp1,_Tp2>>::type &&
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    get(pair<_Up, _Tp>& __p) noexcept$/;"	f	namespace:std	typeref:typename:_Tp &
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    get(pair<_Up, _Tp>&& __p) noexcept$/;"	f	namespace:std	typeref:typename:_Tp &&
get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      get() const noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR pointer
get	include/sak/pattern/singleton_ptr.hpp	/^	inline _T1& get(  ) { return *( init( ) ); };$/;"	f	class:sak::pattern::singleton_ptr	typeref:typename:_T1 &
get	include/sak/stream/serial_data.hpp	/^	inline serial_data&	get( const string& name )$/;"	f	class:sak::stream::serial_data	typeref:typename:serial_data &
getElements	include/sak/stream/serial_data.hpp	/^	inline const serial_data_map&	getElements( )	const noexcept { return elements; };$/;"	f	class:sak::stream::serial_data	typeref:typename:const serial_data_map &
getType	include/sak/stream/serial_data.hpp	/^	inline const string&			getType( )		const noexcept { return type; }; $/;"	f	class:sak::stream::serial_data	typeref:typename:const string &
getValue	include/sak/stream/serial_data.hpp	/^	inline const string&			getValue( )		const noexcept { return value; }; $/;"	f	class:sak::stream::serial_data	typeref:typename:const string &
get_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      get_allocator() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR allocator_type
get_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      get_allocator() const noexcept$/;"	f	class:std::_Node_handle_common	typeref:typename:allocator_type
get_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      get_allocator() const noexcept$/;"	f	class:std::match_results	typeref:typename:allocator_type
get_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      get_allocator() const _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Bvector_base	typeref:typename:_GLIBCXX20_CONSTEXPR allocator_type
get_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      get_allocator() const$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR allocator_type
get_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      get_allocator() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Deque_base	typeref:typename:allocator_type
get_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      get_allocator() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD allocator_type
get_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      get_allocator() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::map	typeref:typename:allocator_type
get_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      get_allocator() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:allocator_type
get_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      get_allocator() const _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Vector_base	typeref:typename:_GLIBCXX20_CONSTEXPR allocator_type
get_date	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      get_date(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	class:std::time_get	typeref:typename:iter_type
get_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    get_deleter(const __shared_ptr<_Tp, _Lp>& __p) noexcept$/;"	f	namespace:std	typeref:typename:_Del *
get_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    get_deleter(const shared_ptr<_Tp>& __p) noexcept$/;"	f	namespace:std	typeref:typename:_Del *
get_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      get_deleter() const noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR const deleter_type &
get_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      get_deleter() noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR deleter_type &
get_id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    get_id() const noexcept$/;"	f	class:std::thread	typeref:typename:id
get_id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    get_id() noexcept$/;"	f	namespace:std::this_thread	typeref:typename:thread::id
get_monthname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      get_monthname(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	class:std::time_get	typeref:typename:iter_type
get_position	include/sak/parser/token.hpp	/^	inline const unsigned int&	get_position( ) const noexcept { return position; }; $/;"	f	class:sak::parser::token	typeref:typename:const unsigned int &
get_temporary_buffer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^    get_temporary_buffer(ptrdiff_t __len) _GLIBCXX_NOEXCEPT$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_DEPRECATED pair<_Tp *,ptrdiff_t>
get_time	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      get_time(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	class:std::time_get	typeref:typename:iter_type
get_type	include/sak/parser/token.hpp	/^	inline const string&		get_type( )		const noexcept { return type; }; $/;"	f	class:sak::parser::token	typeref:typename:const string &
get_value	include/sak/parser/token.hpp	/^	inline const string&		get_value( )	const noexcept { return value; }; $/;"	f	class:sak::parser::token	typeref:typename:const string &
get_weekday	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      get_weekday(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	class:std::time_get	typeref:typename:iter_type
get_year	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      get_year(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	class:std::time_get	typeref:typename:iter_type
getline	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    getline(basic_istream<_CharT, _Traits>& __is,$/;"	f	namespace:std	typeref:typename:basic_istream<_CharT,_Traits> &
getline	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    getline(basic_istream<_CharT, _Traits>&& __is,$/;"	f	namespace:std	typeref:typename:basic_istream<_CharT,_Traits> &
getloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    getloc() const$/;"	f	class:std::ios_base	typeref:typename:locale
getloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      getloc() const noexcept$/;"	f	class:std::basic_regex	typeref:typename:locale_type
getloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      getloc() const$/;"	f	class:std::regex_traits	typeref:typename:locale_type
gettext	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@libintl.h	/^# define gettext(msgid) dgettext /;"	d
gid_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __gid_t gid_t;$/;"	t	typeref:typename:__gid_t
gmtime	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#  define gmtime __gmtime6/;"	d
gmtime_r	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#   define gmtime_r /;"	d
good	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      good() const$/;"	f	class:std::basic_ios	typeref:typename:bool
goodbit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const iostate goodbit =	_S_goodbit;$/;"	m	class:std::ios_base	typeref:typename:const iostate
graph	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_base.h	/^    static const mask graph 	= _ISalpha | _ISdigit | _ISpunct;$/;"	m	struct:std::ctype_base	typeref:typename:const mask
greater	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct greater : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
greater	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct greater<_Tp*> : public binary_function<_Tp*, _Tp*, bool>$/;"	s	namespace:std
greater	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct greater<void>$/;"	s	namespace:std
greater_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct greater_equal : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
greater_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct greater_equal<_Tp*> : public binary_function<_Tp*, _Tp*, bool>$/;"	s	namespace:std
greater_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct greater_equal<void>$/;"	s	namespace:std
grep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      static constexpr flag_type grep = regex_constants::grep;$/;"	m	class:std::basic_regex	typeref:typename:flag_type
grep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    basic_regex<_Ch, _Tr>::grep;$/;"	m	class:std::basic_regex<_Ch, _Tr>	typeref:typename:regex_constants::syntax_option_type
grep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr syntax_option_type grep = _S_grep;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE syntax_option_type
grouping	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      grouping() const$/;"	f	class:std::numpunct	typeref:typename:string
grouping	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      grouping() const$/;"	f	class:std::moneypunct	typeref:typename:string
grouping	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char *grouping;$/;"	m	struct:lconv	typeref:typename:char *
gthread_mutex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    __gthread_mutex_t* gthread_mutex(void)$/;"	f	class:__gnu_cxx::__mutex	typeref:typename:__gthread_mutex_t *
gthread_recursive_mutex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    __gthread_recursive_mutex_t* gthread_recursive_mutex(void)$/;"	f	class:__gnu_cxx::__recursive_mutex	typeref:typename:__gthread_recursive_mutex_t *
hardware_concurrency	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^  inline unsigned int thread::hardware_concurrency() noexcept { return 0; }$/;"	f	class:std::thread	typeref:typename:unsigned int
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    struct hash<basic_string<char, char_traits<char>, _Alloc>>$/;"	s	namespace:std
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    struct hash<basic_string<char16_t, char_traits<char16_t>, _Alloc>>$/;"	s	namespace:std
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    struct hash<basic_string<char32_t, char_traits<char32_t>, _Alloc>>$/;"	s	namespace:std
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    struct hash<basic_string<char8_t, char_traits<char8_t>, _Alloc>>$/;"	s	namespace:std
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    struct hash<basic_string<wchar_t, char_traits<wchar_t>, _Alloc>>$/;"	s	namespace:std
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^      hash(const _Tp& __val)$/;"	f	struct:std::_Fnv_hash_impl	typeref:typename:size_t
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^      hash(const _Tp& __val)$/;"	f	struct:std::_Hash_impl	typeref:typename:size_t
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^    hash(const void* __ptr, size_t __clength,$/;"	f	struct:std::_Fnv_hash_impl	typeref:typename:size_t
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^    hash(const void* __ptr, size_t __clength,$/;"	f	struct:std::_Hash_impl	typeref:typename:size_t
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^    struct hash : __hash_enum<_Tp>$/;"	s	namespace:std
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^    struct hash<_Tp*> : public __hash_base<size_t, _Tp*>$/;"	s	namespace:std
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^    struct hash<double> : public __hash_base<size_t, double>$/;"	s	namespace:std
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^    struct hash<float> : public __hash_base<size_t, float>$/;"	s	namespace:std
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^    struct hash<long double>$/;"	s	namespace:std
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^    struct hash<nullptr_t> : public __hash_base<size_t, nullptr_t>$/;"	s	namespace:std
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      hash(const _CharT* __lo, const _CharT* __hi) const$/;"	f	class:std::collate	typeref:typename:long
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    struct hash<shared_ptr<_Tp>>$/;"	s	namespace:std
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct hash<__shared_ptr<_Tp, _Lp>>$/;"	s	namespace:std
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    struct hash<thread::id>$/;"	s	namespace:std
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    struct hash<_GLIBCXX_STD_C::vector<bool, _Alloc>>$/;"	s	namespace:std
hash	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    struct hash<unique_ptr<_Tp, _Dp>>$/;"	s	namespace:std
hex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags hex =         _S_hex;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
hex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  hex(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
hexfloat	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  hexfloat(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
high_resolution_clock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    using high_resolution_clock = system_clock;$/;"	t	namespace:std::chrono	typeref:typename:system_clock
host_unreachable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      host_unreachable = 			EHOSTUNREACH,$/;"	e	enum:std::errc
hours	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    using hours		= duration<_GLIBCXX_CHRONO_INT64_T, ratio<3600>>;$/;"	t	namespace:std::chrono	typeref:typename:duration<_GLIBCXX_CHRONO_INT64_T,ratio<3600>>
htobe16	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^#  define htobe16(/;"	d
htobe32	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^#  define htobe32(/;"	d
htobe64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^#  define htobe64(/;"	d
htole16	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^#  define htole16(/;"	d
htole32	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^#  define htole32(/;"	d
htole64	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^#  define htole64(/;"	d
icase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      static constexpr flag_type icase = regex_constants::icase;$/;"	m	class:std::basic_regex	typeref:typename:flag_type
icase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    basic_regex<_Ch, _Tr>::icase;$/;"	m	class:std::basic_regex<_Ch, _Tr>	typeref:typename:regex_constants::syntax_option_type
icase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr syntax_option_type icase = _S_icase;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE syntax_option_type
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      static locale::id			id;$/;"	m	class:std::codecvt	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      static locale::id id;$/;"	m	class:std::codecvt	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^    locale::id codecvt<_InternT, _ExternT, _StateT>::id;$/;"	m	class:std::codecvt<_InternT, _ExternT, _StateT>	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      static locale::id			id;$/;"	m	class:std::collate	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    id() { }$/;"	f	class:std::locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    locale::id collate<_CharT>::id;$/;"	m	class:std::collate<_CharT>	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^  class locale::id$/;"	c	class:std::locale
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      static locale::id			id;$/;"	m	class:std::ctype	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      static locale::id			id;$/;"	m	class:std::num_get	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      static locale::id			id;$/;"	m	class:std::numpunct	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      static locale::id		id;$/;"	m	class:std::ctype	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      static locale::id		id;$/;"	m	class:std::num_put	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      static locale::id        id;$/;"	m	class:std::ctype	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    locale::id ctype<_CharT>::id;$/;"	m	class:std::ctype<_CharT>	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    locale::id num_get<_CharT, _InIter>::id;$/;"	m	class:std::num_get<_CharT, _InIter>	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    locale::id num_put<_CharT, _OutIter>::id;$/;"	m	class:std::num_put<_CharT, _OutIter>	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    locale::id numpunct<_CharT>::id;$/;"	m	class:std::numpunct<_CharT>	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      static locale::id			id;$/;"	m	class:std::__timepunct	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      static locale::id			id;$/;"	m	class:std::messages	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      static locale::id			id;$/;"	m	class:std::money_get	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      static locale::id			id;$/;"	m	class:std::money_put	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      static locale::id			id;$/;"	m	class:std::moneypunct	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      static locale::id			id;$/;"	m	class:std::time_get	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      static locale::id			id;$/;"	m	class:std::time_put	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    locale::id __timepunct<_CharT>::id;$/;"	m	class:std::__timepunct<_CharT>	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    locale::id messages<_CharT>::id;$/;"	m	class:std::messages<_CharT>	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    locale::id money_get<_CharT, _InIter>::id;$/;"	m	class:std::money_get<_CharT, _InIter>	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    locale::id money_put<_CharT, _OutIter>::id;$/;"	m	class:std::money_put<_CharT, _OutIter>	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    locale::id moneypunct<_CharT, _Intl>::id;$/;"	m	class:std::moneypunct<_CharT, _Intl>	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    locale::id time_get<_CharT, _InIter>::id;$/;"	m	class:std::time_get<_CharT, _InIter>	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    locale::id time_put<_CharT, _OutIter>::id;$/;"	m	class:std::time_put<_CharT, _OutIter>	typeref:typename:locale::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^      id() noexcept : _M_thread() { }$/;"	f	class:std::thread::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^      id(native_handle_type __id) : _M_thread(__id) { }$/;"	f	class:std::thread::id
id	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    class id$/;"	c	class:std::thread
id_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __id_t id_t;$/;"	t	typeref:typename:__id_t
identifier_removed	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      identifier_removed = 			EIDRM,$/;"	e	enum:std::errc
illegal_byte_sequence	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      illegal_byte_sequence = 			EILSEQ,$/;"	e	enum:std::errc
imbue	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      imbue(locale_type __loc)$/;"	f	class:std::basic_regex	typeref:typename:locale_type
imbue	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      imbue(locale_type __loc)$/;"	f	class:std::regex_traits	typeref:typename:locale_type
imbue_event	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^      imbue_event,$/;"	e	enum:std::ios_base::event
in	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      in(state_type& __state, const extern_type* __from,$/;"	f	class:std::__codecvt_abstract_base	typeref:typename:result
in	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const openmode in =		_S_in;$/;"	m	class:std::ios_base	typeref:typename:const openmode
in_place	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^  inline constexpr in_place_t in_place{};$/;"	v	namespace:std	typeref:typename:in_place_t
in_place_index	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    inline constexpr in_place_index_t<_Idx> in_place_index{};$/;"	v	namespace:std	typeref:typename:in_place_index_t<_Idx>
in_place_index_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^  template<size_t _Idx> struct in_place_index_t$/;"	s	namespace:std
in_place_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^  struct in_place_t {$/;"	s	namespace:std
in_place_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    inline constexpr in_place_type_t<_Tp> in_place_type{};$/;"	v	namespace:std	typeref:typename:in_place_type_t<_Tp>
in_place_type_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^  template<typename _Tp> struct in_place_type_t$/;"	s	namespace:std
inappropriate_io_control_operation	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      inappropriate_io_control_operation = 	ENOTTY,$/;"	e	enum:std::errc
includes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    includes(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
increment	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^	static int increment;$/;"	m	class:Product	typeref:typename:int	file:
increment	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^int Product::increment	=	0;$/;"	m	class:Product	typeref:typename:int
increment	include/sak/debug/instance_counter/local_instance_counter/local_instance_counter.hpp	/^		unsigned int increment;$/;"	m	class:sak::debug::instance_counter::local_instance_counter::local_instance_counter::item	typeref:typename:unsigned int
increment	tests/sak/parser/test_serial_data.c++	/^	static int increment;$/;"	m	class:Product	typeref:typename:int	file:
increment	tests/sak/parser/test_serial_data.c++	/^int Product::increment	=	0;$/;"	m	class:Product	typeref:typename:int
incrementable_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    struct incrementable_traits<common_iterator<_It, _Sent>>$/;"	s	namespace:std
index_sequence	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    using index_sequence = integer_sequence<size_t, _Idx...>;$/;"	t	namespace:std	typeref:typename:integer_sequence<size_t,_Idx...>
index_sequence_for	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    using index_sequence_for = make_index_sequence<sizeof...(_Types)>;$/;"	t	namespace:std
info	include/sak/debug/instance_counter/instance_counter.hpp	/^	const type_info& info;$/;"	m	class:sak::debug::instance_counter::enable_instance_counter	typeref:typename:const type_info &
init	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@debug@test_handler@netbeans_cpp_simple_test.c++	/^void netbeans_cpp_simple_test::init( const string& name )$/;"	f	class:netbeans_cpp_simple_test	typeref:typename:void
init	include/sak/pattern/singleton_ptr.hpp	/^	shared_ptr< _T1 >& init( const shared_ptr< _T1 >& target = nullptr ) const$/;"	f	class:sak::pattern::singleton_ptr	typeref:typename:shared_ptr<_T1> &
init	source/sak/debug/test_handler/netbeans_cpp_simple_test.c++	/^void netbeans_cpp_simple_test::init( const string& name )$/;"	f	class:netbeans_cpp_simple_test	typeref:typename:void
ino64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __ino64_t ino64_t;$/;"	t	typeref:typename:__ino64_t
ino_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __ino64_t ino_t;$/;"	t	typeref:typename:__ino64_t
ino_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __ino_t ino_t;$/;"	t	typeref:typename:__ino_t
inplace_merge	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    inplace_merge(_BidirectionalIterator __first,$/;"	f	namespace:std	typeref:typename:void
input_iterator_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^  struct input_iterator_tag { };$/;"	s	namespace:std
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	insert(size_type __pos, const _Tp& __svt)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR _If_sv<_Tp,basic_string &>
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	insert(size_type __pos1, const _Tp& __svt,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR _If_sv<_Tp,basic_string &>
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^        insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^        insert(iterator __p, _InputIterator __beg, _InputIterator __end)$/;"	f	class:std::basic_string	typeref:typename:void
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      insert(__const_iterator __p, _CharT __c)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      insert(const_iterator __p, initializer_list<_CharT> __l)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      insert(const_iterator __p, size_type __n, _CharT __c)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      insert(iterator __p, initializer_list<_CharT> __l)$/;"	f	class:std::basic_string	typeref:typename:void
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      insert(iterator __p, size_type __n, _CharT __c)$/;"	f	class:std::basic_string	typeref:typename:void
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      insert(size_type __pos, const _CharT* __s)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      insert(size_type __pos, const _CharT* __s, size_type __n)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      insert(size_type __pos, size_type __n, _CharT __c)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      insert(size_type __pos1, const basic_string& __str)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      insert(size_type __pos1, const basic_string& __str,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	insert(const_iterator __position,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	insert(iterator __position,$/;"	f	class:std::vector	typeref:typename:void
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      insert(const_iterator __p, initializer_list<bool> __l)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      insert(const_iterator __position)$/;"	f	class:std::vector
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      insert(const_iterator __position, const bool& __x)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      insert(const_iterator __position, size_type __n, const bool& __x)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      insert(iterator __position, size_type __n, const bool& __x)$/;"	f	class:std::vector	typeref:typename:void
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	insert(const_iterator __position, _InputIterator __first,$/;"	f	class:std::deque	typeref:typename:iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	insert(iterator __position, _InputIterator __first,$/;"	f	class:std::deque	typeref:typename:void
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      insert(const_iterator __p, initializer_list<value_type> __l)$/;"	f	class:std::deque	typeref:typename:iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      insert(const_iterator __position, size_type __n, const value_type& __x)$/;"	f	class:std::deque	typeref:typename:iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      insert(const_iterator __position, value_type&& __x)$/;"	f	class:std::deque	typeref:typename:iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      insert(iterator __position, size_type __n, const value_type& __x)$/;"	f	class:std::deque	typeref:typename:void
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	insert(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::map	typeref:typename:void
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	insert(_Pair&& __x)$/;"	f	class:std::map	typeref:typename:__enable_if_t<is_constructible<value_type,_Pair>::value,pair<iterator,bool>>
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	insert(const_iterator __position, _Pair&& __x)$/;"	f	class:std::map	typeref:typename:__enable_if_t<is_constructible<value_type,_Pair>::value,iterator>
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      insert(const value_type& __x)$/;"	f	class:std::map	typeref:typename:std::pair<iterator,bool>
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      insert(const_iterator __hint, node_type&& __nh)$/;"	f	class:std::map	typeref:typename:iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      insert(const_iterator __position, const value_type& __x)$/;"	f	class:std::map	typeref:typename:iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      insert(const_iterator __position, value_type&& __x)$/;"	f	class:std::map	typeref:typename:iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      insert(node_type&& __nh)$/;"	f	class:std::map	typeref:typename:insert_return_type
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      insert(std::initializer_list<value_type> __list)$/;"	f	class:std::map	typeref:typename:void
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      insert(value_type&& __x)$/;"	f	class:std::map	typeref:typename:std::pair<iterator,bool>
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	insert(const_iterator __position, _InputIterator __first,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	insert(iterator __position, _InputIterator __first,$/;"	f	class:std::vector	typeref:typename:void
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      insert(const_iterator __position, initializer_list<value_type> __l)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      insert(const_iterator __position, size_type __n, const value_type& __x)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      insert(const_iterator __position, value_type&& __x)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
insert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      insert(iterator __position, size_type __n, const value_type& __x)$/;"	f	class:std::vector	typeref:typename:void
insert_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      insert_iterator(_Container& __x, _Iter __i)$/;"	f	class:std::insert_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR
insert_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    class insert_iterator$/;"	c	namespace:std
insert_or_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	insert_or_assign(const key_type& __k, _Obj&& __obj)$/;"	f	class:std::map	typeref:typename:pair<iterator,bool>
insert_or_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	insert_or_assign(const_iterator __hint, key_type&& __k, _Obj&& __obj)$/;"	f	class:std::map	typeref:typename:iterator
insert_or_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	insert_or_assign(const_iterator __hint,$/;"	f	class:std::map	typeref:typename:iterator
insert_or_assign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	insert_or_assign(key_type&& __k, _Obj&& __obj)$/;"	f	class:std::map	typeref:typename:pair<iterator,bool>
insert_return_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      using insert_return_type = typename _Rep_type::insert_return_type;$/;"	t	class:std::map	typeref:typename:_Rep_type::insert_return_type
insert_return_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      using insert_return_type = _Node_insert_return<$/;"	t	class:std::_Rb_tree	typeref:typename:_Node_insert_return<__conditional_t<is_same_v<_Key,_Val>,const_iterator,iterator>,node_type>
inserted	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      bool		inserted = false;$/;"	m	struct:std::_Node_insert_return	typeref:typename:bool
inserter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    inserter(_Container& __x, std::__detail::__range_iter_t<_Container> __i)$/;"	f	namespace:std	typeref:typename:insert_iterator<_Container>
inserter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    inserter(_Container& __x, typename _Container::iterator __i)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD insert_iterator<_Container>
instance_counter	include/sak/debug/instance_counter/instance_counter.hpp	/^class instance_counter$/;"	c	namespace:sak::debug::instance_counter
instance_counter	include/sak/debug/instance_counter/instance_counter.hpp	/^namespace instance_counter$/;"	n	namespace:sak::debug
instance_counter	include/sak/debug/instance_counter/local_instance_counter/local_instance_counter.hpp	/^namespace instance_counter$/;"	n	namespace:sak::debug
instance_counter_map	include/sak/debug/instance_counter/local_instance_counter/local_instance_counter.hpp	/^	using instance_counter_map	=	unordered_map< type_index, item >;$/;"	t	class:sak::debug::instance_counter::local_instance_counter::local_instance_counter	typeref:typename:unordered_map<type_index,item>
instances	include/sak/debug/instance_counter/local_instance_counter/local_instance_counter.hpp	/^		unordered_map< void*, unsigned int > instances;$/;"	m	class:sak::debug::instance_counter::local_instance_counter::local_instance_counter::item	typeref:typename:unordered_map<void *,unsigned int>
int16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@stdint-intn.h	/^typedef __int16_t int16_t;$/;"	t	typeref:typename:__int16_t
int16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __INT16_TYPE__ int16_t;$/;"	t	typeref:typename:__INT16_TYPE__
int24_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __INT24_TYPE__ int24_t;$/;"	t	typeref:typename:__INT24_TYPE__
int32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@stdint-intn.h	/^typedef __int32_t int32_t;$/;"	t	typeref:typename:__int32_t
int32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __INT32_TYPE__ int32_t;$/;"	t	typeref:typename:__INT32_TYPE__
int40_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __INT40_TYPE__ int40_t;$/;"	t	typeref:typename:__INT40_TYPE__
int48_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __INT48_TYPE__ int48_t;$/;"	t	typeref:typename:__INT48_TYPE__
int56_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __INT56_TYPE__ int56_t;$/;"	t	typeref:typename:__INT56_TYPE__
int64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@stdint-intn.h	/^typedef __int64_t int64_t;$/;"	t	typeref:typename:__int64_t
int64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __INT64_TYPE__ int64_t;$/;"	t	typeref:typename:__INT64_TYPE__
int8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@stdint-intn.h	/^typedef __int8_t int8_t;$/;"	t	typeref:typename:__int8_t
int8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __INT8_TYPE__ int8_t;$/;"	t	typeref:typename:__INT8_TYPE__
int_curr_symbol	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char *int_curr_symbol;$/;"	m	struct:lconv	typeref:typename:char *
int_fast16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef int			int_fast16_t;$/;"	t	typeref:typename:int
int_fast16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef long int		int_fast16_t;$/;"	t	typeref:typename:long int
int_fast16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __int_least16_t int_fast16_t;$/;"	t	typeref:typename:__int_least16_t
int_fast24_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef int24_t int_fast24_t;$/;"	t	typeref:typename:int24_t
int_fast32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef int			int_fast32_t;$/;"	t	typeref:typename:int
int_fast32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef long int		int_fast32_t;$/;"	t	typeref:typename:long int
int_fast32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __int_least32_t int_fast32_t;$/;"	t	typeref:typename:__int_least32_t
int_fast40_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef int40_t int_fast40_t;$/;"	t	typeref:typename:int40_t
int_fast48_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef int48_t int_fast48_t;$/;"	t	typeref:typename:int48_t
int_fast56_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef int56_t int_fast56_t;$/;"	t	typeref:typename:int56_t
int_fast64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef long int		int_fast64_t;$/;"	t	typeref:typename:long int
int_fast64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef long long int		int_fast64_t;$/;"	t	typeref:typename:long long int
int_fast64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __int_least64_t int_fast64_t;$/;"	t	typeref:typename:__int_least64_t
int_fast8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef signed char		int_fast8_t;$/;"	t	typeref:typename:signed char
int_fast8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __int_least8_t int_fast8_t;$/;"	t	typeref:typename:__int_least8_t
int_frac_digits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char int_frac_digits;		\/* Int'l fractional digits.  *\/$/;"	m	struct:lconv	typeref:typename:char
int_least16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef __int_least16_t int_least16_t;$/;"	t	typeref:typename:__int_least16_t
int_least16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __int_least16_t int_least16_t;$/;"	t	typeref:typename:__int_least16_t
int_least24_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef int24_t int_least24_t;$/;"	t	typeref:typename:int24_t
int_least32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef __int_least32_t int_least32_t;$/;"	t	typeref:typename:__int_least32_t
int_least32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __int_least32_t int_least32_t;$/;"	t	typeref:typename:__int_least32_t
int_least40_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef int40_t int_least40_t;$/;"	t	typeref:typename:int40_t
int_least48_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef int48_t int_least48_t;$/;"	t	typeref:typename:int48_t
int_least56_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef int56_t int_least56_t;$/;"	t	typeref:typename:int56_t
int_least64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef __int_least64_t int_least64_t;$/;"	t	typeref:typename:__int_least64_t
int_least64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __int_least64_t int_least64_t;$/;"	t	typeref:typename:__int_least64_t
int_least8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef __int_least8_t int_least8_t;$/;"	t	typeref:typename:__int_least8_t
int_least8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __int_least8_t int_least8_t;$/;"	t	typeref:typename:__int_least8_t
int_n_cs_precedes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char int_n_cs_precedes;$/;"	m	struct:lconv	typeref:typename:char
int_n_sep_by_space	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char int_n_sep_by_space;$/;"	m	struct:lconv	typeref:typename:char
int_n_sign_posn	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char int_n_sign_posn;$/;"	m	struct:lconv	typeref:typename:char
int_p_cs_precedes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char int_p_cs_precedes;$/;"	m	struct:lconv	typeref:typename:char
int_p_sep_by_space	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char int_p_sep_by_space;$/;"	m	struct:lconv	typeref:typename:char
int_p_sign_posn	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char int_p_sign_posn;$/;"	m	struct:lconv	typeref:typename:char
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      typedef typename _Traits::int_type             int_type;$/;"	t	class:std::basic_ios	typeref:typename:_Traits::int_type
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef __UINT_LEAST16_TYPE__	    int_type;$/;"	t	struct:std::char_traits	typeref:typename:__UINT_LEAST16_TYPE__
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef __UINT_LEAST32_TYPE__	    int_type;$/;"	t	struct:std::char_traits	typeref:typename:__UINT_LEAST32_TYPE__
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef int               int_type;$/;"	t	struct:std::char_traits	typeref:typename:int
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef make_unsigned<char16_t>::type int_type;$/;"	t	struct:std::char_traits	typeref:typename:make_unsigned<char16_t>::type
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef make_unsigned<char32_t>::type int_type;$/;"	t	struct:std::char_traits	typeref:typename:make_unsigned<char32_t>::type
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef typename _Char_types<_CharT>::int_type    int_type;$/;"	t	struct:__gnu_cxx::char_traits	typeref:typename:_Char_types<_CharT>::int_type
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef uint_least16_t    int_type;$/;"	t	struct:std::char_traits	typeref:typename:uint_least16_t
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef uint_least32_t    int_type;$/;"	t	struct:std::char_traits	typeref:typename:uint_least32_t
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef unsigned int      int_type;$/;"	t	struct:std::char_traits	typeref:typename:unsigned int
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef unsigned long   int_type;$/;"	t	struct:__gnu_cxx::_Char_types	typeref:typename:unsigned long
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef wint_t            int_type;$/;"	t	struct:std::char_traits	typeref:typename:wint_t
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      typedef typename wide_string::traits_type::int_type	   int_type;$/;"	t	class:std::wstring_convert	typeref:typename:wide_string::traits_type::int_type
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef typename _Traits::int_type		int_type;$/;"	t	class:std::istreambuf_iterator	typeref:typename:_Traits::int_type
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef typename traits_type::int_type		   int_type;$/;"	t	function:std::__copy_move_a2	typeref:typename:traits_type::int_type
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef typename traits_type::int_type		   int_type;$/;"	t	function:std::advance	typeref:typename:traits_type::int_type
int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef typename traits_type::int_type		   int_type;$/;"	t	function:std::find	typeref:typename:traits_type::int_type
integer_sequence	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    struct integer_sequence$/;"	s	namespace:std
intern_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      typedef _InternT			intern_type;$/;"	t	class:std::__codecvt_abstract_base	typeref:typename:_InternT
intern_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      typedef _InternT			intern_type;$/;"	t	class:std::codecvt	typeref:typename:_InternT
intern_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      typedef char			intern_type;$/;"	t	class:std::codecvt	typeref:typename:char
intern_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      typedef char16_t			intern_type;$/;"	t	class:std::codecvt	typeref:typename:char16_t
intern_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      typedef char32_t			intern_type;$/;"	t	class:std::codecvt	typeref:typename:char32_t
intern_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      typedef wchar_t			intern_type;$/;"	t	class:std::codecvt	typeref:typename:wchar_t
internal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags internal =    _S_internal;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
internal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  internal(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
interrupted	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      interrupted = 				EINTR,$/;"	e	enum:std::errc
intl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      static const bool			intl = _Intl;$/;"	m	class:std::moneypunct	typeref:typename:const bool
intl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      static const bool intl = _Intl;$/;"	m	class:std::moneypunct_byname	typeref:typename:const bool
intl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    const bool moneypunct<_CharT, _Intl>::intl;$/;"	m	class:std::moneypunct<_CharT, _Intl>	typeref:typename:const bool
intl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    const bool moneypunct_byname<_CharT, _Intl>::intl;$/;"	m	class:std::moneypunct_byname<_CharT, _Intl>	typeref:typename:const bool
intmax_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef __intmax_t		intmax_t;$/;"	t	typeref:typename:__intmax_t
intmax_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __INTMAX_TYPE__  intmax_t;$/;"	t	typeref:typename:__INTMAX_TYPE__
intptr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef int			intptr_t;$/;"	t	typeref:typename:int
intptr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef long int		intptr_t;$/;"	t	typeref:typename:long int
intptr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __INTPTR_TYPE__ intptr_t;$/;"	t	typeref:typename:__INTPTR_TYPE__
invalid_argument	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      invalid_argument = 			EINVAL,$/;"	e	enum:std::errc
invalid_seek	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      invalid_seek = 				ESPIPE,$/;"	e	enum:std::errc
io_errc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  enum class io_errc { stream = 1 };$/;"	g	namespace:std
io_error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      io_error = 				EIO,$/;"	e	enum:std::errc
ios_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  class ios_base$/;"	c	namespace:std
iostate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    typedef _Ios_Iostate iostate;$/;"	t	class:std::ios_base	typeref:typename:_Ios_Iostate
is	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      is(const char_type *__lo, const char_type *__hi, mask *__vec) const$/;"	f	class:std::__ctype_abstract_base	typeref:typename:const char_type *
is	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      is(mask __m, char_type __c) const$/;"	f	class:std::__ctype_abstract_base	typeref:typename:bool
is	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_inline.h	/^  is(const char* __low, const char* __high, mask* __vec) const$/;"	f	class:std::ctype	typeref:typename:const char *
is	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_inline.h	/^  is(mask __m, char __c) const$/;"	f	class:std::ctype	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION bool
is_a_directory	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      is_a_directory = 				EISDIR,$/;"	e	enum:std::errc
is_always_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using is_always_equal = true_type;$/;"	t	struct:std::allocator_traits	typeref:typename:true_type
is_always_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using is_always_equal$/;"	t	struct:std::allocator_traits	typeref:typename:__detected_or_t<is_empty<_Alloc>,__equal,_Alloc>::type
is_always_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      using is_always_equal$/;"	t	class:std::allocator	typeref:typename:true_type
is_always_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      if _GLIBCXX17_CONSTEXPR (typename _Alloc_traits::is_always_equal{})$/;"	m	class:std::operator +::_Alloc_traits	typeref:meta:typename	file:
is_always_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      using is_always_equal = false_type;$/;"	t	struct:std::allocator_traits	typeref:typename:false_type
is_always_lock_free	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      static constexpr bool is_always_lock_free = ATOMIC_POINTER_LOCK_FREE == 2;$/;"	m	struct:std::__atomic_ref	typeref:typename:bool
is_always_lock_free	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      static constexpr bool is_always_lock_free$/;"	m	struct:std::__atomic_float	typeref:typename:bool
is_always_lock_free	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      static constexpr bool is_always_lock_free$/;"	m	struct:std::__atomic_ref	typeref:typename:bool
is_always_lock_free	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      static constexpr bool is_always_lock_free = false;$/;"	m	class:std::atomic	typeref:typename:bool
is_clock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      struct is_clock$/;"	s	namespace:std::chrono
is_clock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    template<> struct is_clock<file_clock> : true_type { };$/;"	s	namespace:std::chrono
is_clock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    template<> struct is_clock<steady_clock> : true_type { };$/;"	s	namespace:std::chrono
is_clock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    template<> struct is_clock<system_clock> : true_type { };$/;"	s	namespace:std::chrono
is_clock_v	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      inline constexpr bool is_clock_v = false;$/;"	v	namespace:std::chrono	typeref:typename:bool
is_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^    is_equal(const memory_resource& __other) const noexcept$/;"	f	class:std::pmr::memory_resource	typeref:typename:bool
is_error_code_enum	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  template <> struct is_error_code_enum<io_errc> : public true_type { };$/;"	s	namespace:std
is_execution_policy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^struct is_execution_policy : std::false_type$/;"	s	namespace:__pstl::execution::v1
is_execution_policy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^struct is_execution_policy<__pstl::execution::parallel_policy> : std::true_type$/;"	s	namespace:__pstl::execution::v1
is_execution_policy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^struct is_execution_policy<__pstl::execution::parallel_unsequenced_policy> : std::true_type$/;"	s	namespace:__pstl::execution::v1
is_execution_policy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^struct is_execution_policy<__pstl::execution::sequenced_policy> : std::true_type$/;"	s	namespace:__pstl::execution::v1
is_execution_policy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^struct is_execution_policy<__pstl::execution::unsequenced_policy> : std::true_type$/;"	s	namespace:__pstl::execution::v1
is_execution_policy_v	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^constexpr bool is_execution_policy_v = __pstl::execution::is_execution_policy<_Tp>::value;$/;"	v	namespace:__pstl::execution::v1	typeref:typename:bool
is_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
is_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
is_heap_until	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    is_heap_until(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _RandomAccessIterator
is_heap_until	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    is_heap_until(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _RandomAccessIterator
is_lock_free	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      is_lock_free() const noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:bool
is_lock_free	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      is_lock_free() const noexcept$/;"	f	struct:std::__atomic_float	typeref:typename:bool
is_lock_free	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      is_lock_free() const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:bool
is_lock_free	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      is_lock_free() const volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:bool
is_lock_free	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      is_lock_free() const volatile noexcept$/;"	f	struct:std::__atomic_float	typeref:typename:bool
is_lock_free	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      is_lock_free() noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE bool
is_lock_free	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      is_lock_free() const noexcept$/;"	f	class:std::atomic	typeref:typename:bool
is_only_digit	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@string.c++	/^const bool ::sak::is_only_digit( const string& value )$/;"	f	class:sak	typeref:typename:const bool::
is_only_digit	source/sak/string.c++	/^const bool ::sak::is_only_digit( const string& value )$/;"	f	class:sak	typeref:typename:const bool::
is_partitioned	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    is_partitioned(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
is_permutation	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
is_permutation	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
is_sorted	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    is_sorted(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
is_sorted	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    is_sorted(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
is_sorted_until	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    is_sorted_until(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
is_sorted_until	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    is_sorted_until(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
is_steady	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      static constexpr bool is_steady = false;$/;"	m	struct:std::chrono::system_clock	typeref:typename:bool
is_steady	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      static constexpr bool is_steady = false;$/;"	m	struct:std::filesystem::__file_clock	typeref:typename:bool
is_steady	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      static constexpr bool is_steady = true;$/;"	m	struct:std::chrono::steady_clock	typeref:typename:bool
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using is_transparent = void;$/;"	t	struct:std::_Sp_owner_less	typeref:typename:void
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::bit_and	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::bit_not	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::bit_or	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::bit_xor	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::divides	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::equal_to	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::greater	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::greater_equal	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::less	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::less_equal	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::logical_and	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::logical_not	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::logical_or	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::minus	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::modulus	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::multiplies	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::negate	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::not_equal_to	typeref:typename:__is_transparent
is_transparent	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef __is_transparent is_transparent;$/;"	t	struct:std::plus	typeref:typename:__is_transparent
isalnum	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    isalnum(_CharT __c, const locale& __loc)$/;"	f	namespace:std	typeref:typename:bool
isalnum_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define isalnum_l(c,l)	__isalnum_l /;"	d
isalpha	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    isalpha(_CharT __c, const locale& __loc)$/;"	f	namespace:std	typeref:typename:bool
isalpha_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define isalpha_l(c,l)	__isalpha_l /;"	d
isascii	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define isascii(c)	__isascii /;"	d
isascii_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#   define isascii_l(c,l)	__isascii_l /;"	d
isblank	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    isblank(_CharT __c, const locale& __loc)$/;"	f	namespace:std	typeref:typename:bool
isblank_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define isblank_l(c,l)	__isblank_l /;"	d
iscntrl	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    iscntrl(_CharT __c, const locale& __loc)$/;"	f	namespace:std	typeref:typename:bool
iscntrl_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define iscntrl_l(c,l)	__iscntrl_l /;"	d
isdigit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    isdigit(_CharT __c, const locale& __loc)$/;"	f	namespace:std	typeref:typename:bool
isdigit_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define isdigit_l(c,l)	__isdigit_l /;"	d
isgraph	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    isgraph(_CharT __c, const locale& __loc)$/;"	f	namespace:std	typeref:typename:bool
isgraph_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define isgraph_l(c,l)	__isgraph_l /;"	d
islower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    islower(_CharT __c, const locale& __loc)$/;"	f	namespace:std	typeref:typename:bool
islower_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define islower_l(c,l)	__islower_l /;"	d
isprint	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    isprint(_CharT __c, const locale& __loc)$/;"	f	namespace:std	typeref:typename:bool
isprint_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define isprint_l(c,l)	__isprint_l /;"	d
ispunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    ispunct(_CharT __c, const locale& __loc)$/;"	f	namespace:std	typeref:typename:bool
ispunct_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define ispunct_l(c,l)	__ispunct_l /;"	d
isspace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    isspace(_CharT __c, const locale& __loc)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_END_NAMESPACE_LDBL bool
isspace_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define isspace_l(c,l)	__isspace_l /;"	d
istream_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef basic_istream<_CharT, _Traits>		istream_type;$/;"	t	class:std::istreambuf_iterator	typeref:typename:basic_istream<_CharT,_Traits>
istreambuf_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      _GLIBCXX_CONSTEXPR istreambuf_iterator() _GLIBCXX_USE_NOEXCEPT$/;"	f	class:std::istreambuf_iterator	typeref:typename:_GLIBCXX_CONSTEXPR
istreambuf_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      constexpr istreambuf_iterator(default_sentinel_t) noexcept$/;"	f	class:std::istreambuf_iterator
istreambuf_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      istreambuf_iterator(istream_type& __s) _GLIBCXX_USE_NOEXCEPT$/;"	f	class:std::istreambuf_iterator
istreambuf_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      istreambuf_iterator(streambuf_type* __s) _GLIBCXX_USE_NOEXCEPT$/;"	f	class:std::istreambuf_iterator
istreambuf_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^    class istreambuf_iterator$/;"	c	namespace:std
isupper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    isupper(_CharT __c, const locale& __loc)$/;"	f	namespace:std	typeref:typename:bool
isupper_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define isupper_l(c,l)	__isupper_l /;"	d
isxdigit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    isxdigit(_CharT __c, const locale& __loc)$/;"	f	namespace:std	typeref:typename:bool
isxdigit_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define isxdigit_l(c,l)	__isxdigit_l /;"	d
it_interval	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_itimerspec.h	/^    struct timespec it_interval;$/;"	m	struct:itimerspec	typeref:struct:timespec
it_value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_itimerspec.h	/^    struct timespec it_value;$/;"	m	struct:itimerspec	typeref:struct:timespec
item	include/sak/debug/instance_counter/local_instance_counter/local_instance_counter.hpp	/^		item( const string& name = "" )$/;"	f	class:sak::debug::instance_counter::local_instance_counter::local_instance_counter::item
item	include/sak/debug/instance_counter/local_instance_counter/local_instance_counter.hpp	/^	class item$/;"	c	class:sak::debug::instance_counter::local_instance_counter::local_instance_counter
items	include/sak/debug/instance_counter/local_instance_counter/local_instance_counter.hpp	/^	instance_counter_map items;$/;"	m	class:sak::debug::instance_counter::local_instance_counter::local_instance_counter	typeref:typename:instance_counter_map
iter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      _Iter iter;$/;"	m	class:std::insert_iterator	typeref:typename:_Iter
iter_const_reference_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    using iter_const_reference_t$/;"	t	namespace:std	typeref:typename:common_reference_t<const iter_value_t<_It> &&,iter_reference_t<_It>>
iter_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      iter_move(const counted_iterator& __i)$/;"	f	namespace:std	typeref:typename:iter_rvalue_reference_t<_It>
iter_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      iter_move(const move_iterator& __i)$/;"	f	namespace:std	typeref:typename:iter_rvalue_reference_t<_Iterator>
iter_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      iter_move(const reverse_iterator& __i)$/;"	f	namespace:std	typeref:typename:iter_rvalue_reference_t<_Iterator>
iter_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    iter_move(const basic_const_iterator& __i)$/;"	f	namespace:std	typeref:typename:__rvalue_reference
iter_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    iter_move(const common_iterator& __i)$/;"	f	namespace:std	typeref:typename:iter_rvalue_reference_t<_It>
iter_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)$/;"	f	struct:std::__iter_swap	typeref:typename:void
iter_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
iter_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	iter_swap(const counted_iterator& __x,$/;"	f	namespace:std	typeref:typename:void
iter_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	iter_swap(const move_iterator& __x, const move_iterator<_Iter2>& __y)$/;"	f	namespace:std	typeref:typename:void
iter_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	iter_swap(const reverse_iterator& __x,$/;"	f	namespace:std	typeref:typename:void
iter_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      iter_swap(const common_iterator& __x,$/;"	f	namespace:std	typeref:typename:void
iter_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      typedef _InIter			iter_type;$/;"	t	class:std::num_get	typeref:typename:_InIter
iter_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      typedef _OutIter		iter_type;$/;"	t	class:std::num_put	typeref:typename:_OutIter
iter_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _InIter			iter_type;$/;"	t	class:std::money_get	typeref:typename:_InIter
iter_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _InIter			iter_type;$/;"	t	class:std::time_get	typeref:typename:_InIter
iter_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _InIter			iter_type;$/;"	t	class:std::time_get_byname	typeref:typename:_InIter
iter_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _OutIter			iter_type;$/;"	t	class:std::money_put	typeref:typename:_OutIter
iter_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _OutIter			iter_type;$/;"	t	class:std::time_put	typeref:typename:_OutIter
iter_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef _OutIter			iter_type;$/;"	t	class:std::time_put_byname	typeref:typename:_OutIter
iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;$/;"	t	class:std::basic_string	typeref:typename:__gnu_cxx::__normal_iterator<pointer,basic_string>
iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef _BiIter					iterator;$/;"	t	class:std::sub_match	typeref:typename:_BiIter
iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef const_iterator				   iterator;$/;"	t	class:std::match_results	typeref:typename:const_iterator
iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef _Bit_iterator				iterator;$/;"	t	class:std::vector	typeref:typename:_Bit_iterator
iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    typedef _Bit_iterator   iterator;$/;"	t	struct:std::_Bit_iterator	typeref:typename:_Bit_iterator
iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef _Deque_iterator<_Tp, _Tp&, _Ptr>	  iterator;$/;"	t	class:std::_Deque_base	typeref:typename:_Deque_iterator<_Tp,_Tp &,_Ptr>
iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef _Deque_iterator<_Tp, _Tp&, _Tp*>		   iterator;$/;"	t	struct:std::_Deque_iterator	typeref:typename:_Deque_iterator<_Tp,_Tp &,_Tp * >
iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef typename _Base::iterator			iterator;$/;"	t	class:std::deque	typeref:typename:_Base::iterator
iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^    struct _GLIBCXX17_DEPRECATED iterator$/;"	s	namespace:std
iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef typename _Rep_type::iterator		 iterator;$/;"	t	class:std::map	typeref:typename:_Rep_type::iterator
iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^      typedef pointer     iterator;$/;"	t	class:std::_Temporary_buffer	typeref:typename:pointer
iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Rb_tree_iterator<_Tp> iterator;$/;"	t	struct:std::_Rb_tree_const_iterator	typeref:typename:_Rb_tree_iterator<_Tp>
iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Rb_tree_iterator<value_type>       iterator;$/;"	t	class:std::_Rb_tree	typeref:typename:_Rb_tree_iterator<value_type>
iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;$/;"	t	class:std::vector	typeref:typename:__gnu_cxx::__normal_iterator<pointer,vector>
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef std::forward_iterator_tag		iterator_category;$/;"	t	class:std::regex_token_iterator	typeref:typename:std::forward_iterator_tag
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef std::forward_iterator_tag	  iterator_category;$/;"	t	class:std::regex_iterator	typeref:typename:std::forward_iterator_tag
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^		using iterator_category = forward_iterator_tag;$/;"	t	struct:std::_Sp_counted_array_base::_M_init::_Iter	typeref:typename:forward_iterator_tag
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef std::random_access_iterator_tag	iterator_category;$/;"	t	struct:std::_Deque_iterator	typeref:typename:std::random_access_iterator_tag
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	using iterator_category$/;"	t	struct:std::__detail::__move_iter_cat	typeref:typename:__clamp_iter_cat<typename iterator_traits<_Iterator>::iterator_category,random_access_iterator_tag>
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      requires requires { typename _It::iterator_category; }$/;"	m	class:std::__detail::_It	typeref:meta:typename
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      requires requires { typename iterator_traits<_Iterator>::iterator_category; }$/;"	m	class:std::__detail::iterator_traits<_Iterator>	typeref:meta:typename
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef typename __traits_type::iterator_category iterator_category;$/;"	t	class:__gnu_cxx::__normal_iterator	typeref:typename:__traits_type::iterator_category
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef typename __traits_type::iterator_category iterator_category;$/;"	t	class:std::move_iterator	typeref:typename:__traits_type::iterator_category
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using iterator_category = decltype(_S_iter_cat());$/;"	t	struct:std::iterator_traits
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using iterator_category$/;"	t	class:std::reverse_iterator	typeref:typename:__detail::__clamp_iter_cat<typename __traits_type::iterator_category,random_access_iterator_tag>
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      { using iterator_category = iterator_traits<_It>::iterator_category; };$/;"	t	struct:std::__detail::__basic_const_iterator_iter_cat	typeref:typename:iterator_traits<_It>::iterator_category
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      { using iterator_category = typename _It::iterator_category; };$/;"	t	struct:std::__detail::__counted_iter_cat	typeref:typename:_It::iterator_category
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef _Category  iterator_category;$/;"	t	struct:std::iterator	typeref:typename:_Category
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef random_access_iterator_tag iterator_category;$/;"	t	struct:std::iterator_traits	typeref:typename:random_access_iterator_tag
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef typename _Iterator::iterator_category iterator_category;$/;"	t	struct:std::__iterator_traits	typeref:typename:_Iterator::iterator_category
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef typename _Iterator::iterator_category iterator_category;$/;"	t	struct:std::iterator_traits	typeref:typename:_Iterator::iterator_category
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      using iterator_category = random_access_iterator_tag;$/;"	t	struct:std::iterator_traits	typeref:typename:random_access_iterator_tag
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef bidirectional_iterator_tag iterator_category;$/;"	t	struct:std::_Rb_tree_const_iterator	typeref:typename:bidirectional_iterator_tag
iterator_category	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef bidirectional_iterator_tag iterator_category;$/;"	t	struct:std::_Rb_tree_iterator	typeref:typename:bidirectional_iterator_tag
iterator_concept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      requires requires { typename _It::iterator_concept; }$/;"	m	class:std::__detail::_It	typeref:meta:typename
iterator_concept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using iterator_concept = __conditional_t<forward_iterator<_It>,$/;"	t	struct:std::iterator_traits	typeref:typename:__conditional_t<forward_iterator<_It>,forward_iterator_tag,input_iterator_tag>
iterator_concept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using iterator_concept = decltype(_S_iter_concept());$/;"	t	class:std::move_iterator
iterator_concept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using iterator_concept = std::__detail::__iter_concept<_Iterator>;$/;"	t	class:__gnu_cxx::__normal_iterator	typeref:typename:std::__detail::__iter_concept<_Iterator>
iterator_concept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using iterator_concept$/;"	t	class:std::reverse_iterator	typeref:typename:__conditional_t<random_access_iterator<_Iterator>,random_access_iterator_tag,bidirectional_iterator_tag>
iterator_concept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      { using iterator_concept = typename _It::iterator_concept; };$/;"	t	struct:std::__detail::__counted_iter_concept	typeref:typename:_It::iterator_concept
iterator_concept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    using iterator_concept = decltype(_S_iter_concept());$/;"	t	class:std::basic_const_iterator
iterator_concept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      using iterator_concept  = contiguous_iterator_tag;$/;"	t	struct:std::iterator_traits	typeref:typename:contiguous_iterator_tag
iterator_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    struct iterator_traits<common_iterator<_It, _Sent>>$/;"	s	namespace:std
iterator_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    struct iterator_traits<counted_iterator<_It>> : iterator_traits<_It>$/;"	s	namespace:std
iterator_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^    struct iterator_traits$/;"	s	namespace:std
iterator_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^    struct iterator_traits<_Tp*>$/;"	s	namespace:std
iterator_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^    struct iterator_traits<const _Tp*>$/;"	s	namespace:std
iterator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef _Iterator					iterator_type;$/;"	t	class:__gnu_cxx::__normal_iterator	typeref:typename:_Iterator
iterator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef _Iterator					iterator_type;$/;"	t	class:std::reverse_iterator	typeref:typename:_Iterator
iterator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using iterator_type = _It;$/;"	t	class:std::counted_iterator	typeref:typename:_It
iterator_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using iterator_type = _Iterator;$/;"	t	class:std::move_iterator	typeref:typename:_Iterator
itimerspec	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_itimerspec.h	/^struct itimerspec$/;"	s
iword	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    iword(int __ix)$/;"	f	class:std::ios_base	typeref:typename:long &
jitcnt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  long long jitcnt;            \/* jitter limit exceeded (ro) *\/$/;"	m	struct:timex	typeref:typename:long long
jitter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  long long jitter;            \/* pps jitter (us) (ro) *\/$/;"	m	struct:timex	typeref:typename:long long
join	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^  inline void thread::join() { std::__throw_system_error(EINVAL); }$/;"	f	class:std::thread	typeref:typename:void
joinable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    joinable() const noexcept$/;"	f	class:std::thread	typeref:typename:bool
key	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      key() const noexcept$/;"	f	class:std::_Node_handle	typeref:typename:key_type &
key_comp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      key_comp() const$/;"	f	class:std::map	typeref:typename:key_compare
key_comp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      key_comp() const$/;"	f	class:std::_Rb_tree	typeref:typename:_Compare
key_compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef _Compare					key_compare;$/;"	t	class:std::map	typeref:typename:_Compare
key_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __key_t key_t;$/;"	t	typeref:typename:__key_t
key_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      using key_type = _Key;$/;"	t	class:std::_Node_handle	typeref:typename:_Key
key_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef _Key					key_type;$/;"	t	class:std::map	typeref:typename:_Key
key_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Key 				key_type;$/;"	t	class:std::_Rb_tree	typeref:typename:_Key
kill_dependency	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    kill_dependency(_Tp __y) noexcept$/;"	f	namespace:std	typeref:typename:_Tp
last	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serial_data.c++	/^	const bool			last;$/;"	m	struct:args_bundle	typeref:typename:const bool	file:
last	source/sak/stream/serial_data.c++	/^	const bool			last;$/;"	m	struct:args_bundle	typeref:typename:const bool	file:
lconv	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^struct lconv$/;"	s
ldiv_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^  } ldiv_t;$/;"	t	typeref:struct:__anond6b8f37d0208
le16toh	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^#  define le16toh(/;"	d
le32toh	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^#  define le32toh(/;"	d
le64toh	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@endian.h	/^#  define le64toh(/;"	d
left	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags left =        _S_left;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
left	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  left(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
length	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      length() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
length	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      length(const char_type* __s)$/;"	f	struct:std::char_traits	typeref:typename:_GLIBCXX17_CONSTEXPR size_t
length	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^    length(const char_type* __p)$/;"	f	class:__gnu_cxx::char_traits	typeref:typename:_GLIBCXX14_CONSTEXPR std::size_t
length	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      length(state_type& __state, const extern_type* __from,$/;"	f	class:std::__codecvt_abstract_base	typeref:typename:int
length	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      length() const noexcept$/;"	f	class:std::sub_match	typeref:typename:difference_type
length	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      length(const char_type* __p)$/;"	f	class:std::regex_traits	typeref:typename:std::size_t
length	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      length(size_type __sub = 0) const$/;"	f	class:std::match_results	typeref:typename:difference_type
less	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct less : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
less	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct less<_Tp*> : public binary_function<_Tp*, _Tp*, bool>$/;"	s	namespace:std
less	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct less<void>$/;"	s	namespace:std
less_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct less_equal : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
less_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct less_equal<_Tp*> : public binary_function<_Tp*, _Tp*, bool>$/;"	s	namespace:std
less_equal	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct less_equal<void>$/;"	s	namespace:std
lexicographical_compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    lexicographical_compare(_II1 __first1, _II1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
lexicographical_compare_three_way	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    lexicographical_compare_three_way(_InputIter1 __first1,$/;"	f	namespace:std	typeref:typename:auto
lexicographical_compare_three_way	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    lexicographical_compare_three_way(_InputIter1 __first1,$/;"	f	namespace:std	typeref:typename:decltype(__comp (* __first1,* __first2))
line_type_a	include/sak/string.hpp	/^const string line_type_a	=	string( 100, '#' );$/;"	v	namespace:sak	typeref:typename:const string
line_type_b	include/sak/string.hpp	/^const string line_type_b	=	string( 100, '*' );$/;"	v	namespace:sak	typeref:typename:const string
line_type_c	include/sak/string.hpp	/^const string line_type_c	=	string( 100, '=' );$/;"	v	namespace:sak	typeref:typename:const string
line_type_d	include/sak/string.hpp	/^const string line_type_d	=	string( 100, '-' );$/;"	v	namespace:sak	typeref:typename:const string
line_type_e	include/sak/string.hpp	/^const string line_type_e	=	string( 100, '_' );$/;"	v	namespace:sak	typeref:typename:const string
literals	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  inline namespace literals$/;"	n	namespace:std
literals	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^  inline namespace literals$/;"	n	namespace:std
literals	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^  inline namespace literals {$/;"	n	namespace:std
lldiv_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^  } lldiv_t;$/;"	t	typeref:struct:__anond6b8f37d0308
load	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      load(const _Tp* __ptr, memory_order __m) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE _Val<_Tp>
load	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      load(memory_order __m = memory_order_seq_cst) const noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE __int_type
load	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      load(memory_order __m = memory_order_seq_cst) const noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE __pointer_type
load	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      load(memory_order __m = memory_order_seq_cst) const noexcept$/;"	f	struct:std::__atomic_float	typeref:typename:_Fp
load	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      load(memory_order __m = memory_order_seq_cst) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:_Fp
load	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      load(memory_order __m = memory_order_seq_cst) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:_Tp
load	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      load(memory_order __m = memory_order_seq_cst) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:_Tp *
load	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      load(memory_order __m = memory_order_seq_cst) const volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE __int_type
load	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      load(memory_order __m = memory_order_seq_cst) const volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE __pointer_type
load	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      load(memory_order __m = memory_order_seq_cst) const volatile noexcept$/;"	f	struct:std::__atomic_float	typeref:typename:_Fp
load	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      load(memory_order __o = memory_order_seq_cst) const noexcept$/;"	f	class:std::atomic	typeref:typename:shared_ptr<_Tp>
load	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      load(memory_order __o = memory_order_seq_cst) const noexcept$/;"	f	class:std::atomic	typeref:typename:weak_ptr<_Tp>
load	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      load(memory_order __o) const noexcept$/;"	f	class:std::_Sp_atomic	typeref:typename:value_type
load	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@deserializable.c++	/^const bool ::deserializable::load( const string& file_path )$/;"	f	class:deserializable	typeref:typename:const bool::
load	source/sak/stream/deserializable.c++	/^const bool ::deserializable::load( const string& file_path )$/;"	f	class:deserializable	typeref:typename:const bool::
local_instance_counter	include/sak/debug/instance_counter/local_instance_counter/local_instance_counter.hpp	/^class local_instance_counter : public instance_counter$/;"	c	namespace:sak::debug::instance_counter::local_instance_counter
local_instance_counter	include/sak/debug/instance_counter/local_instance_counter/local_instance_counter.hpp	/^namespace local_instance_counter$/;"	n	namespace:sak::debug::instance_counter
locale	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    locale(const locale& __base, const std::string& __s, category __cat)$/;"	f	class:std::locale
locale	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    locale(const std::string& __s) : locale(__s.c_str()) { }$/;"	f	class:std::locale
locale	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^  class locale$/;"	c	namespace:std
locale_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@locale_t.h	/^typedef __locale_t locale_t;$/;"	t	typeref:typename:__locale_t
locale_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef std::locale			locale_type;$/;"	t	class:std::regex_traits	typeref:typename:std::locale
locale_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef typename traits_type::locale_type   locale_type;$/;"	t	class:std::basic_regex	typeref:typename:traits_type::locale_type
localtime	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#  define localtime __localtime6/;"	d
localtime_r	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#   define localtime_r __localtime_r$/;"	d
location	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^struct location$/;"	s	file:
location	tests/sak/parser/test_serial_data.c++	/^struct location$/;"	s	file:
lock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      lock() const noexcept$/;"	f	class:std::weak_ptr	typeref:typename:shared_ptr<_Tp>
lock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^	lock(memory_order __o) const noexcept$/;"	f	struct:std::_Sp_atomic::_Atomic_count	typeref:typename:pointer
lock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      lock() const noexcept$/;"	f	class:std::__weak_ptr	typeref:typename:__shared_ptr<_Tp,_Lp>
lock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    void lock()$/;"	f	class:__gnu_cxx::__mutex	typeref:typename:void
lock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    void lock()$/;"	f	class:__gnu_cxx::__recursive_mutex	typeref:typename:void
loff_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __loff_t loff_t;$/;"	t	typeref:typename:__loff_t
logical_and	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct logical_and : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
logical_and	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct logical_and<void>$/;"	s	namespace:std
logical_not	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct logical_not : public unary_function<_Tp, bool>$/;"	s	namespace:std
logical_not	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct logical_not<void>$/;"	s	namespace:std
logical_or	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct logical_or : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
logical_or	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct logical_or<void>$/;"	s	namespace:std
lower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_base.h	/^    static const mask lower 	= _ISlower;$/;"	m	struct:std::ctype_base	typeref:typename:const mask
lower_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    lower_bound(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
lower_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    lower_bound(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
lower_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	lower_bound(const _Kt& __x) const$/;"	f	class:std::map	typeref:typename:decltype(const_iterator (_M_t._M_lower_bound_tr (__x)))
lower_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	lower_bound(const _Kt& __x)$/;"	f	class:std::map	typeref:typename:decltype(iterator (_M_t._M_lower_bound_tr (__x)))
lower_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      lower_bound(const key_type& __x) const$/;"	f	class:std::map	typeref:typename:const_iterator
lower_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      lower_bound(const key_type& __x)$/;"	f	class:std::map	typeref:typename:iterator
lower_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      lower_bound(const key_type& __k) const$/;"	f	class:std::_Rb_tree	typeref:typename:const_iterator
lower_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      lower_bound(const key_type& __k)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
lt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::char_traits	typeref:typename:_GLIBCXX_CONSTEXPR bool
lt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      lt(const char_type& __c1, const char_type& __c2) noexcept$/;"	f	struct:std::char_traits	typeref:typename:bool
lt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      lt(const char_type& __c1, const char_type& __c2)$/;"	f	struct:__gnu_cxx::char_traits	typeref:typename:_GLIBCXX_CONSTEXPR bool
main	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@main.c++	/^int main( int argc, char** argv )$/;"	f	typeref:typename:int
main	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@adhoc.c++	/^int main( int argc, char** argv )$/;"	f	typeref:typename:int
main	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^int main( int argc, char** argv )$/;"	f	typeref:typename:int
main	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@test_string_conversion.c++	/^int main( int argc, char** argv )$/;"	f	typeref:typename:int
main	source/main.c++	/^int main( int argc, char** argv )$/;"	f	typeref:typename:int
main	tests/adhoc/adhoc.c++	/^int main( int argc, char** argv )$/;"	f	typeref:typename:int
main	tests/sak/parser/test_serial_data.c++	/^int main( int argc, char** argv )$/;"	f	typeref:typename:int
main	tests/sak/test_string_conversion.c++	/^int main( int argc, char** argv )$/;"	f	typeref:typename:int
make_const_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    make_const_iterator(_It __it)$/;"	f	namespace:std	typeref:typename:const_iterator<_It>
make_const_sentinel	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    make_const_sentinel(_Sent __s)$/;"	f	namespace:std	typeref:typename:const_sentinel<_Sent>
make_error_code	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  make_error_code(io_errc __e) noexcept$/;"	f	namespace:std	typeref:typename:error_code
make_error_condition	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  make_error_condition(io_errc __e) noexcept$/;"	f	namespace:std	typeref:typename:error_condition
make_exception_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^    make_exception_ptr(_Ex __ex) _GLIBCXX_USE_NOEXCEPT$/;"	f	namespace:std	typeref:typename:exception_ptr
make_exception_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^    make_exception_ptr(_Ex) _GLIBCXX_USE_NOEXCEPT$/;"	f	namespace:std	typeref:typename:exception_ptr
make_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
make_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
make_index_sequence	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    using make_index_sequence = make_integer_sequence<size_t, _Num>;$/;"	t	namespace:std	typeref:typename:make_integer_sequence<size_t,_Num>
make_integer_sequence	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    using make_integer_sequence$/;"	t	namespace:std	typeref:typename:__make_integer_seq<integer_sequence,_Tp,_Num>
make_move_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    make_move_iterator(_Iterator __i)$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR move_iterator<_Iterator>
make_obj_using_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator_args.h	/^    make_obj_using_allocator(const _Alloc& __a, _Args&&... __args)$/;"	f	namespace:std	typeref:typename:_Tp
make_pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    make_pair(_T1 __x, _T2 __y)$/;"	f	namespace:std	typeref:typename:pair<_T1,_T2>
make_pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    make_pair(_T1&& __x, _T2&& __y)$/;"	f	namespace:std	typeref:typename:pair<typename __decay_and_strip<_T1>::__type,typename __decay_and_strip<_T2>::__type>
make_reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    make_reverse_iterator(_Iterator __i)$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
make_shared	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    make_shared()$/;"	f	namespace:std	typeref:typename:shared_ptr<_BoundedArray<_Tp>>
make_shared	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    make_shared(_Args&&... __args)$/;"	f	namespace:std	typeref:typename:shared_ptr<_NonArray<_Tp>>
make_shared	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    make_shared(const remove_extent_t<_Tp>& __u)$/;"	f	namespace:std	typeref:typename:shared_ptr<_BoundedArray<_Tp>>
make_shared	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    make_shared(size_t __n)$/;"	f	namespace:std	typeref:typename:shared_ptr<_UnboundedArray<_Tp>>
make_shared	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    make_shared(size_t __n, const remove_extent_t<_Tp>& __u)$/;"	f	namespace:std	typeref:typename:shared_ptr<_UnboundedArray<_Tp>>
make_shared_for_overwrite	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    make_shared_for_overwrite()$/;"	f	namespace:std	typeref:typename:shared_ptr<_NotUnboundedArray<_Tp>>
make_shared_for_overwrite	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    make_shared_for_overwrite(size_t __n)$/;"	f	namespace:std	typeref:typename:shared_ptr<_UnboundedArray<_Tp>>
make_unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    make_unique(_Args&&... __args)$/;"	f	namespace:std	typeref:typename:_GLIBCXX23_CONSTEXPR __detail::__unique_ptr_t<_Tp>
make_unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    make_unique(size_t __num)$/;"	f	namespace:std	typeref:typename:_GLIBCXX23_CONSTEXPR __detail::__unique_ptr_array_t<_Tp>
make_unique_for_overwrite	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    make_unique_for_overwrite()$/;"	f	namespace:std	typeref:typename:_GLIBCXX23_CONSTEXPR __detail::__unique_ptr_t<_Tp>
make_unique_for_overwrite	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    make_unique_for_overwrite(size_t __num)$/;"	f	namespace:std	typeref:typename:_GLIBCXX23_CONSTEXPR __detail::__unique_ptr_array_t<_Tp>
map	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	map(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::map
map	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	map(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::map
map	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      map() : _M_t() { }$/;"	f	class:std::map
map	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      map(const _Compare& __comp,$/;"	f	class:std::map
map	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      map(const allocator_type& __a)$/;"	f	class:std::map
map	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      map(const map& __m, const __type_identity_t<allocator_type>& __a)$/;"	f	class:std::map
map	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      map(const map& __x)$/;"	f	class:std::map
map	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      map(initializer_list<value_type> __l, const allocator_type& __a)$/;"	f	class:std::map
map	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      map(initializer_list<value_type> __l,$/;"	f	class:std::map
map	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      map(map&& __m, const __type_identity_t<allocator_type>& __a)$/;"	f	class:std::map
map	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^    class map$/;"	c	namespace:std
mapped	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      mapped() const noexcept$/;"	f	class:std::_Node_handle	typeref:typename:mapped_type &
mapped_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      using mapped_type = typename _Value::second_type;$/;"	t	class:std::_Node_handle	typeref:typename:_Value::second_type
mapped_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef _Tp					mapped_type;$/;"	t	class:std::map	typeref:typename:_Tp
mark_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      mark_count() const noexcept$/;"	f	class:std::basic_regex	typeref:typename:unsigned int
mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      typedef typename __ctype_abstract_base<_CharT>::mask mask;$/;"	t	class:std::ctype	typeref:typename:__ctype_abstract_base<_CharT>::mask
mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      typedef typename ctype<_CharT>::mask  mask;$/;"	t	class:std::ctype_byname	typeref:typename:ctype<_CharT>::mask
mask	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_base.h	/^    typedef unsigned short 	mask;$/;"	t	struct:std::ctype_base	typeref:typename:unsigned short
match_any	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr match_flag_type match_any = _S_any;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE match_flag_type
match_continuous	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr match_flag_type match_continuous = _S_continuous;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE match_flag_type
match_default	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr match_flag_type match_default = _S_default;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE match_flag_type
match_flag_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef regex_constants::match_flag_type		   match_flag_type;$/;"	t	class:std::match_results	typeref:typename:regex_constants::match_flag_type
match_flag_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  enum match_flag_type : unsigned int$/;"	g	namespace:std::regex_constants	typeref:typename:unsigned int
match_not_bol	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr match_flag_type match_not_bol = _S_not_bol;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE match_flag_type
match_not_bow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr match_flag_type match_not_bow = _S_not_bow;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE match_flag_type
match_not_eol	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr match_flag_type match_not_eol = _S_not_eol;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE match_flag_type
match_not_eow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr match_flag_type match_not_eow = _S_not_eow;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE match_flag_type
match_not_null	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr match_flag_type match_not_null = _S_not_null;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE match_flag_type
match_prev_avail	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr match_flag_type match_prev_avail = _S_prev_avail;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE match_flag_type
match_results	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      match_results() : match_results(_Alloc()) { }$/;"	f	class:std::match_results
match_results	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      match_results(const _Alloc& __a) noexcept$/;"	f	class:std::match_results
match_results	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      match_results(const match_results& __m, const _Alloc& __a)$/;"	f	class:std::match_results
match_results	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      match_results(match_results&& __m, const _Alloc& __a)$/;"	f	class:std::match_results
match_results	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    class match_results$/;"	c	namespace:std
max	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	max() noexcept$/;"	f	class:std::chrono::duration	typeref:typename:duration
max	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	max() noexcept$/;"	f	class:std::chrono::time_point	typeref:typename:time_point
max	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	max() noexcept$/;"	f	struct:std::chrono::duration_values	typeref:typename:_Rep
max	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    max(initializer_list<_Tp> __l)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR _Tp
max	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    max(initializer_list<_Tp> __l, _Compare __comp)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR _Tp
max	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    max(const _Tp& __a, const _Tp& __b)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR const _Tp &
max	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    max(const _Tp& __a, const _Tp& __b, _Compare __comp)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR const _Tp &
max	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      max() const$/;"	f	class:std::uniform_int_distribution	typeref:typename:result_type
max_align_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@__stddef_max_align_t.h	/^typedef double max_align_t;$/;"	t	typeref:typename:double
max_align_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@__stddef_max_align_t.h	/^typedef long double max_align_t;$/;"	t	typeref:typename:long double
max_align_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@__stddef_max_align_t.h	/^} max_align_t;$/;"	t	typeref:struct:__anon203e79380108
max_element	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    max_element(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR _ForwardIterator
max_element	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    max_element(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR _ForwardIterator
max_length	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      max_length() const throw()$/;"	f	class:std::__codecvt_abstract_base	typeref:typename:int
max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      max_size(const _Alloc& __a) noexcept$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX20_CONSTEXPR size_type
max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX20_CONSTEXPR size_type
max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      max_size() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      max_size(const allocator_type&) noexcept$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX20_CONSTEXPR size_type
max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      max_size() const _GLIBCXX_USE_NOEXCEPT$/;"	f	class:std::__new_allocator	typeref:typename:size_type
max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      max_size() const noexcept$/;"	f	class:std::match_results	typeref:typename:size_type
max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      max_size() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      max_size() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD size_type
max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      max_size() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::map	typeref:typename:size_type
max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      max_size() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:size_type
max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      max_size() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
max_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    static size_type max_size(const _Alloc& __a)$/;"	f	struct:__gnu_cxx::__alloc_traits	typeref:typename:size_type
maxerror	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  long long maxerror;          \/* maximum error (usec) *\/$/;"	m	struct:timex	typeref:typename:long long
mbstate_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@mbstate_t.h	/^typedef __mbstate_t mbstate_t;$/;"	t	typeref:typename:__mbstate_t
mdy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	enum:std::time_base::dateorder
mem_fun	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    mem_fun(_Ret (_Tp::*__f)() const)$/;"	f	namespace:std
mem_fun	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    mem_fun(_Ret (_Tp::*__f)())$/;"	f	namespace:std
mem_fun	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    mem_fun(_Ret (_Tp::*__f)(_Arg) const)$/;"	f	namespace:std
mem_fun	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    mem_fun(_Ret (_Tp::*__f)(_Arg))$/;"	f	namespace:std
mem_fun1_ref_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg))$/;"	f	class:std::mem_fun1_ref_t
mem_fun1_ref_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    class mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret>$/;"	c	namespace:std
mem_fun1_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      mem_fun1_t(_Ret (_Tp::*__pf)(_Arg))$/;"	f	class:std::mem_fun1_t
mem_fun1_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    class mem_fun1_t : public binary_function<_Tp*, _Arg, _Ret>$/;"	c	namespace:std
mem_fun_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    mem_fun_ref(_Ret (_Tp::*__f)() const)$/;"	f	namespace:std
mem_fun_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    mem_fun_ref(_Ret (_Tp::*__f)())$/;"	f	namespace:std
mem_fun_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const)$/;"	f	namespace:std
mem_fun_ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    mem_fun_ref(_Ret (_Tp::*__f)(_Arg))$/;"	f	namespace:std
mem_fun_ref_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      mem_fun_ref_t(_Ret (_Tp::*__pf)())$/;"	f	class:std::mem_fun_ref_t
mem_fun_ref_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    class mem_fun_ref_t : public unary_function<_Tp, _Ret>$/;"	c	namespace:std
mem_fun_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      mem_fun_t(_Ret (_Tp::*__pf)())$/;"	f	class:std::mem_fun_t
mem_fun_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    class mem_fun_t : public unary_function<_Tp*, _Ret>$/;"	c	namespace:std
memory_order	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  enum class memory_order : int$/;"	g	namespace:std	typeref:typename:int
memory_order_acq_rel	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;$/;"	v	namespace:std	typeref:typename:memory_order
memory_order_acquire	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  inline constexpr memory_order memory_order_acquire = memory_order::acquire;$/;"	v	namespace:std	typeref:typename:memory_order
memory_order_consume	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  inline constexpr memory_order memory_order_consume = memory_order::consume;$/;"	v	namespace:std	typeref:typename:memory_order
memory_order_relaxed	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;$/;"	v	namespace:std	typeref:typename:memory_order
memory_order_release	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  inline constexpr memory_order memory_order_release = memory_order::release;$/;"	v	namespace:std	typeref:typename:memory_order
memory_order_seq_cst	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;$/;"	v	namespace:std	typeref:typename:memory_order
memory_resource	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^  class memory_resource$/;"	c	namespace:std::pmr
merge	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    merge(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
merge	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	merge(map<_Key, _Tp, _Cmp2, _Alloc>& __source)$/;"	f	class:std::map	typeref:typename:void
merge	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	merge(map<_Key, _Tp, _Cmp2, _Alloc>&& __source)$/;"	f	class:std::map	typeref:typename:void
merge	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	merge(multimap<_Key, _Tp, _Cmp2, _Alloc>& __source)$/;"	f	class:std::map	typeref:typename:void
merge	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	merge(multimap<_Key, _Tp, _Cmp2, _Alloc>&& __source)$/;"	f	class:std::map	typeref:typename:void
message_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      message_size = 				EMSGSIZE,$/;"	e	enum:std::errc
messages	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const category messages	= 1L << 5;$/;"	m	class:std::locale	typeref:typename:const category
messages	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    class messages : public locale::facet, public messages_base$/;"	c	namespace:std
messages	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@messages_members.h	/^    messages<_CharT>::messages(__c_locale __cloc, const char* __s,$/;"	f	class:std::messages
messages	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@messages_members.h	/^    messages<_CharT>::messages(size_t __refs)$/;"	f	class:std::messages	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION
messages_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^  struct messages_base$/;"	s	namespace:std
messages_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      messages_byname(const string& __s, size_t __refs = 0)$/;"	f	class:std::messages_byname
messages_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    class messages_byname : public messages<_CharT>$/;"	c	namespace:std
messages_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@messages_members.h	/^    messages_byname<_CharT>::messages_byname(const char* __s, size_t __refs)$/;"	f	class:std::messages_byname
microseconds	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    using microseconds	= duration<_GLIBCXX_CHRONO_INT64_T, micro>;$/;"	t	namespace:std::chrono	typeref:typename:duration<_GLIBCXX_CHRONO_INT64_T,micro>
milliseconds	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    using milliseconds	= duration<_GLIBCXX_CHRONO_INT64_T, milli>;$/;"	t	namespace:std::chrono	typeref:typename:duration<_GLIBCXX_CHRONO_INT64_T,milli>
min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	min() noexcept$/;"	f	class:std::chrono::duration	typeref:typename:duration
min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	min() noexcept$/;"	f	class:std::chrono::time_point	typeref:typename:time_point
min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	min() noexcept$/;"	f	struct:std::chrono::duration_values	typeref:typename:_Rep
min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    min(initializer_list<_Tp> __l)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR _Tp
min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    min(initializer_list<_Tp> __l, _Compare __comp)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR _Tp
min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    min(const _Tp& __a, const _Tp& __b)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR const _Tp &
min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    min(const _Tp& __a, const _Tp& __b, _Compare __comp)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR const _Tp &
min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      min() const$/;"	f	class:std::uniform_int_distribution	typeref:typename:result_type
min_element	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    inline min_element(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR _ForwardIterator
min_element	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    min_element(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR _ForwardIterator
minmax	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    minmax(const _Tp& __a, const _Tp& __b)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR pair<const _Tp &,const _Tp &>
minmax	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    minmax(const _Tp& __a, const _Tp& __b, _Compare __comp)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR pair<const _Tp &,const _Tp &>
minmax	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    minmax(initializer_list<_Tp> __l)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR pair<_Tp,_Tp>
minmax	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    minmax(initializer_list<_Tp> __l, _Compare __comp)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR pair<_Tp,_Tp>
minmax_element	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    minmax_element(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR pair<_ForwardIterator,_ForwardIterator>
minmax_element	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    minmax_element(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_CONSTEXPR pair<_ForwardIterator,_ForwardIterator>
minus	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct minus : public binary_function<_Tp, _Tp, _Tp>$/;"	s	namespace:std
minus	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct minus<void>$/;"	s	namespace:std
minutes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    using minutes	= duration<_GLIBCXX_CHRONO_INT64_T, ratio< 60>>;$/;"	t	namespace:std::chrono	typeref:typename:duration<_GLIBCXX_CHRONO_INT64_T,ratio<60>>
mismatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    mismatch(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR pair<_InputIterator1,_InputIterator2>
mkostemp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#   define mkostemp mkostemp6/;"	d
mkostemps	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#   define mkostemps mkostemps6/;"	d
mkstemp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#   define mkstemp mkstemp6/;"	d
mkstemps	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#   define mkstemps mkstemps6/;"	d
mktime	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#  define mktime __mktime6/;"	d
mode_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __mode_t mode_t;$/;"	t	typeref:typename:__mode_t
modes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  unsigned int modes;          \/* mode selector *\/$/;"	m	struct:timex	typeref:typename:unsigned int
modulus	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct modulus : public binary_function<_Tp, _Tp, _Tp>$/;"	s	namespace:std
modulus	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct modulus<void>$/;"	s	namespace:std
mon_decimal_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char *mon_decimal_point;	\/* Decimal point character.  *\/$/;"	m	struct:lconv	typeref:typename:char *
mon_grouping	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char *mon_grouping;		\/* Like `grouping' element (above).  *\/$/;"	m	struct:lconv	typeref:typename:char *
mon_thousands_sep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char *mon_thousands_sep;	\/* Thousands separator.  *\/$/;"	m	struct:lconv	typeref:typename:char *
monetary	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const category monetary	= 1L << 4;$/;"	m	class:std::locale	typeref:typename:const category
money_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^  class money_base$/;"	c	namespace:std
money_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      money_get(size_t __refs = 0) : facet(__refs) { }$/;"	f	class:std::money_get
money_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    class money_get : public locale::facet$/;"	c	namespace:std
money_put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      money_put(size_t __refs = 0) : facet(__refs) { }$/;"	f	class:std::money_put
money_put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    class money_put : public locale::facet$/;"	c	namespace:std
moneypunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      moneypunct(__c_locale __cloc, const char* __s, size_t __refs = 0)$/;"	f	class:std::moneypunct
moneypunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      moneypunct(__cache_type* __cache, size_t __refs = 0)$/;"	f	class:std::moneypunct
moneypunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      moneypunct(size_t __refs = 0)$/;"	f	class:std::moneypunct
moneypunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    class moneypunct : public locale::facet, public money_base$/;"	c	namespace:std
moneypunct_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      moneypunct_byname(const char* __s, size_t __refs = 0)$/;"	f	class:std::moneypunct_byname
moneypunct_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      moneypunct_byname(const string& __s, size_t __refs = 0)$/;"	f	class:std::moneypunct_byname
moneypunct_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    class moneypunct_byname : public moneypunct<_CharT, _Intl>$/;"	c	namespace:std
months	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    using months	= duration<_GLIBCXX_CHRONO_INT64_T, ratio<2629746>>;$/;"	t	namespace:std::chrono	typeref:typename:duration<_GLIBCXX_CHRONO_INT64_T,ratio<2629746>>
move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      move(basic_ios& __rhs)$/;"	f	class:std::basic_ios	typeref:typename:void
move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      move(basic_ios&& __rhs)$/;"	f	class:std::basic_ios	typeref:typename:void
move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      move(char_type* __s1, const char_type* __s2, size_t __n)$/;"	f	struct:std::char_traits	typeref:typename:_GLIBCXX20_CONSTEXPR char_type *
move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^    move(char_type* __s1, const char_type* __s2, std::size_t __n)$/;"	f	class:__gnu_cxx::char_traits	typeref:typename:_GLIBCXX20_CONSTEXPR typename char_traits<_CharT>::char_type *
move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@move.h	/^    move(_Tp&& __t) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD typename std::remove_reference<_Tp>::type &&
move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    move(_II __first, _II __last, _OI __result)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OI
move_backward	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    move_backward(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _BI2
move_if_noexcept	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@move.h	/^    move_if_noexcept(_Tp& __x) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD __conditional_t<__move_if_noexcept_cond<_Tp>::value,const _Tp &,_Tp &&>
move_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	move_iterator(const move_iterator<_Iter>& __i)$/;"	f	class:std::move_iterator	typeref:typename:requires __convertible<_Iter> _GLIBCXX17_CONSTEXPR
move_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      move_iterator()$/;"	f	class:std::move_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR
move_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      move_iterator(iterator_type __i)$/;"	f	class:std::move_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR
move_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    class move_iterator$/;"	c	namespace:std
move_sentinel	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	move_sentinel(const move_sentinel<_S2>& __s)$/;"	f	class:std::move_sentinel	typeref:typename:requires convertible_to<const _S2 &,_Sent> 
move_sentinel	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      move_sentinel()$/;"	f	class:std::move_sentinel
move_sentinel	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      move_sentinel(_Sent __s)$/;"	f	class:std::move_sentinel
move_sentinel	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    class move_sentinel$/;"	c	namespace:std
multiline	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      static constexpr flag_type multiline = regex_constants::multiline;$/;"	m	class:std::basic_regex	typeref:typename:flag_type
multiline	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr syntax_option_type multiline = _S_multiline;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE syntax_option_type
multiplies	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct multiplies : public binary_function<_Tp, _Tp, _Tp>$/;"	s	namespace:std
multiplies	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct multiplies<void>$/;"	s	namespace:std
n_cs_precedes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char n_cs_precedes;$/;"	m	struct:lconv	typeref:typename:char
n_sep_by_space	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char n_sep_by_space;$/;"	m	struct:lconv	typeref:typename:char
n_sign_posn	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char n_sign_posn;$/;"	m	struct:lconv	typeref:typename:char
name	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serial_data.c++	/^	const string&		name;$/;"	m	struct:args_bundle	typeref:typename:const string &	file:
name	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^	string name;$/;"	m	class:Fruit	typeref:typename:string	file:
name	include/sak/debug/instance_counter/local_instance_counter/local_instance_counter.hpp	/^		string name;$/;"	m	class:sak::debug::instance_counter::local_instance_counter::local_instance_counter::item	typeref:typename:string
name	source/sak/stream/serial_data.c++	/^	const string&		name;$/;"	m	struct:args_bundle	typeref:typename:const string &	file:
name	tests/sak/parser/test_serial_data.c++	/^	string name;$/;"	m	class:Fruit	typeref:typename:string	file:
nanoseconds	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    using nanoseconds	= duration<_GLIBCXX_CHRONO_INT64_T, nano>;$/;"	t	namespace:std::chrono	typeref:typename:duration<_GLIBCXX_CHRONO_INT64_T,nano>
nanosleep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#   define nanosleep __nanosleep6/;"	d
narrow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      narrow(char_type __c, char __dfault) const$/;"	f	class:std::basic_ios	typeref:typename:char
narrow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      narrow(char_type __c, char __dfault) const$/;"	f	class:std::__ctype_abstract_base	typeref:typename:char
narrow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      narrow(char_type __c, char __dfault) const$/;"	f	class:std::ctype	typeref:typename:char
narrow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      narrow(const char_type* __lo, const char_type* __hi,$/;"	f	class:std::__ctype_abstract_base	typeref:typename:const char_type *
narrow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      narrow(const char_type* __lo, const char_type* __hi,$/;"	f	class:std::ctype	typeref:typename:const char_type *
native_handle	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    native_handle()$/;"	f	class:std::thread	typeref:typename:native_handle_type
native_handle_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    using native_handle_type = __gthread_t;$/;"	t	class:std::thread	typeref:typename:__gthread_t
neg_format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      neg_format() const$/;"	f	class:std::moneypunct	typeref:typename:pattern
negate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct negate : public unary_function<_Tp, _Tp>$/;"	s	namespace:std
negate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct negate<void>$/;"	s	namespace:std
negative_sign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      negative_sign() const$/;"	f	class:std::moneypunct	typeref:typename:string_type
negative_sign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char *negative_sign;		\/* Sign for negative values.  *\/$/;"	m	struct:lconv	typeref:typename:char *
nested_exception	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^    nested_exception() noexcept : _M_ptr(current_exception()) { }$/;"	f	class:std::nested_exception
nested_exception	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^  class nested_exception$/;"	c	namespace:std
nested_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^    nested_ptr() const noexcept$/;"	f	class:std::nested_exception	typeref:typename:exception_ptr
netbeans_cpp_simple_test	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@debug@test_handler@netbeans_cpp_simple_test.c++	/^netbeans_cpp_simple_test::netbeans_cpp_simple_test( )$/;"	f	class:netbeans_cpp_simple_test
netbeans_cpp_simple_test	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^class netbeans_cpp_simple_test : public test_handler$/;"	c	namespace:sak::debug::test_handler
netbeans_cpp_simple_test	source/sak/debug/test_handler/netbeans_cpp_simple_test.c++	/^netbeans_cpp_simple_test::netbeans_cpp_simple_test( )$/;"	f	class:netbeans_cpp_simple_test
network_down	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      network_down = 				ENETDOWN,$/;"	e	enum:std::errc
network_reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      network_reset = 				ENETRESET,$/;"	e	enum:std::errc
network_unreachable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      network_unreachable = 			ENETUNREACH,$/;"	e	enum:std::errc
new_object	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	new_object(_CtorArgs&&... __ctor_args)$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:_Up *
next	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_funcs.h	/^    next(_InputIterator __x, typename$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR _InputIterator
next_permutation	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    next_permutation(_BidirectionalIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
ngettext	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@libintl.h	/^# define ngettext(msgid1, msgid2, n) dngettext /;"	d
nlink_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __nlink_t nlink_t;$/;"	t	typeref:typename:__nlink_t
no_buffer_space	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      no_buffer_space = 			ENOBUFS,$/;"	e	enum:std::errc
no_child_process	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      no_child_process = 			ECHILD,$/;"	e	enum:std::errc
no_link	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      no_link = 				ENOLINK,$/;"	e	enum:std::errc
no_lock_available	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      no_lock_available = 			ENOLCK,$/;"	e	enum:std::errc
no_message	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      no_message = 				ENOMSG,$/;"	e	enum:std::errc
no_message_available	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      no_message_available = 			ENODATA,$/;"	e	enum:std::errc
no_order	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	enum:std::time_base::dateorder
no_protocol_option	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      no_protocol_option = 			ENOPROTOOPT,$/;"	e	enum:std::errc
no_space_on_device	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      no_space_on_device = 			ENOSPC,$/;"	e	enum:std::errc
no_stream_resources	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      no_stream_resources = 			ENOSR,$/;"	e	enum:std::errc
no_such_device	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      no_such_device = 				ENODEV,$/;"	e	enum:std::errc
no_such_device_or_address	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      no_such_device_or_address = 		ENXIO,$/;"	e	enum:std::errc
no_such_file_or_directory	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      no_such_file_or_directory = 		ENOENT,$/;"	e	enum:std::errc
no_such_process	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      no_such_process = 			ESRCH,$/;"	e	enum:std::errc
noboolalpha	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  noboolalpha(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
noconv	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      noconv$/;"	e	enum:std::codecvt_base::result
node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      _NodeHandle	node;$/;"	m	struct:std::_Node_insert_return	typeref:typename:_NodeHandle
node_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      using node_type = typename _Rep_type::node_type;$/;"	t	class:std::map	typeref:typename:_Rep_type::node_type
node_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      using node_type = _Node_handle<_Key, _Val, _Node_allocator>;$/;"	t	class:std::_Rb_tree	typeref:typename:_Node_handle<_Key,_Val,_Node_allocator>
none	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const category none		= 0;$/;"	m	class:std::locale	typeref:typename:const category
none	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	enum:std::money_base::part
none_of	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    none_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
noreplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const openmode noreplace =	_S_noreplace;$/;"	m	class:std::ios_base	typeref:typename:const openmode
noshowbase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  noshowbase(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
noshowpoint	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  noshowpoint(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
noshowpos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  noshowpos(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
noskipws	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  noskipws(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
nosubs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      static constexpr flag_type nosubs = regex_constants::nosubs;$/;"	m	class:std::basic_regex	typeref:typename:flag_type
nosubs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    basic_regex<_Ch, _Tr>::nosubs;$/;"	m	class:std::basic_regex<_Ch, _Tr>	typeref:typename:regex_constants::syntax_option_type
nosubs	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr syntax_option_type nosubs = _S_nosubs;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE syntax_option_type
not1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    not1(const _Predicate& __pred)$/;"	f	namespace:std
not2	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    not2(const _Predicate& __pred)$/;"	f	namespace:std
not_a_directory	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      not_a_directory = 			ENOTDIR,$/;"	e	enum:std::errc
not_a_socket	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      not_a_socket = 				ENOTSOCK,$/;"	e	enum:std::errc
not_a_stream	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      not_a_stream = 				ENOSTR,$/;"	e	enum:std::errc
not_connected	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      not_connected = 				ENOTCONN,$/;"	e	enum:std::errc
not_enough_memory	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      not_enough_memory = 			ENOMEM,$/;"	e	enum:std::errc
not_eof	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      not_eof(const int_type& __c) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::char_traits	typeref:typename:_GLIBCXX_CONSTEXPR int_type
not_eof	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      not_eof(const int_type& __c) noexcept$/;"	f	struct:std::char_traits	typeref:typename:int_type
not_eof	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      not_eof(const int_type& __c)$/;"	f	struct:__gnu_cxx::char_traits	typeref:typename:_GLIBCXX_CONSTEXPR int_type
not_equal_to	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct not_equal_to : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
not_equal_to	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct not_equal_to<void>$/;"	s	namespace:std
not_supported	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      not_supported = 				ENOTSUP,$/;"	e	enum:std::errc
notify_all	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      notify_all() const noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
notify_all	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      notify_all() const noexcept$/;"	f	struct:std::__atomic_float	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
notify_all	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      notify_all() const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
notify_all	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      notify_all() noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
notify_all	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      notify_all(const _Tp* __ptr) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
notify_all	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    notify_all() noexcept$/;"	f	struct:std::atomic_flag	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
notify_all	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^	notify_all() noexcept$/;"	f	struct:std::_Sp_atomic::_Atomic_count	typeref:typename:void
notify_all	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      notify_all() noexcept$/;"	f	class:std::_Sp_atomic	typeref:typename:void
notify_all	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      notify_all() noexcept$/;"	f	class:std::atomic	typeref:typename:void
notify_one	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      notify_one() const noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
notify_one	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      notify_one() const noexcept$/;"	f	struct:std::__atomic_float	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
notify_one	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      notify_one() const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
notify_one	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      notify_one() noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
notify_one	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      notify_one(const _Tp* __ptr) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
notify_one	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    notify_one() noexcept$/;"	f	struct:std::atomic_flag	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
notify_one	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^	notify_one() noexcept$/;"	f	struct:std::_Sp_atomic::_Atomic_count	typeref:typename:void
notify_one	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      notify_one() noexcept$/;"	f	class:std::_Sp_atomic	typeref:typename:void
notify_one	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      notify_one() noexcept$/;"	f	class:std::atomic	typeref:typename:void
nounitbuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  nounitbuf(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
nouppercase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  nouppercase(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
now	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      now() noexcept$/;"	f	struct:std::filesystem::__file_clock	typeref:typename:time_point
npos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      static const size_type	npos = static_cast<size_type>(-1);$/;"	m	class:std::basic_string	typeref:typename:const size_type
nth_element	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    nth_element(_RandomAccessIterator __first, _RandomAccessIterator __nth,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
nullptr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^  typedef decltype(nullptr)	nullptr_t;$/;"	t	namespace:std
nullptr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^namespace std { typedef decltype(nullptr) nullptr_t; }$/;"	t	namespace:std
nullptr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^typedef typeof(nullptr) nullptr_t;$/;"	t
num_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      num_get(size_t __refs = 0) : facet(__refs) { }$/;"	f	class:std::num_get
num_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    class num_get : public locale::facet$/;"	c	namespace:std
num_put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      num_put(size_t __refs = 0) : facet(__refs) { }$/;"	f	class:std::num_put
num_put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    class num_put : public locale::facet$/;"	c	namespace:std
numeric	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const category numeric	= 1L << 1;$/;"	m	class:std::locale	typeref:typename:const category
numeric_string_comparison	include/sak/string.hpp	/^struct numeric_string_comparison$/;"	s	namespace:sak
numpunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      numpunct(__c_locale __cloc, size_t __refs = 0)$/;"	f	class:std::numpunct
numpunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      numpunct(__cache_type* __cache, size_t __refs = 0)$/;"	f	class:std::numpunct
numpunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      numpunct(size_t __refs = 0)$/;"	f	class:std::numpunct
numpunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    class numpunct : public locale::facet$/;"	c	namespace:std
numpunct_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      numpunct_byname(const char* __s, size_t __refs = 0)$/;"	f	class:std::numpunct_byname
numpunct_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      numpunct_byname(const string& __s, size_t __refs = 0)$/;"	f	class:std::numpunct_byname
numpunct_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    class numpunct_byname : public numpunct<_CharT>$/;"	c	namespace:std
oct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags oct =         _S_oct;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
oct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  oct(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
off64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^typedef __off64_t off64_t;$/;"	t	typeref:typename:__off64_t
off64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __off64_t off64_t;$/;"	t	typeref:typename:__off64_t
off_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^typedef __off64_t off_t;$/;"	t	typeref:typename:__off64_t
off_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^typedef __off_t off_t;$/;"	t	typeref:typename:__off_t
off_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __off64_t off_t;$/;"	t	typeref:typename:__off64_t
off_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __off_t off_t;$/;"	t	typeref:typename:__off_t
off_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      typedef typename _Traits::off_type             off_type;$/;"	t	class:std::basic_ios	typeref:typename:_Traits::off_type
off_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef std::streamoff  off_type;$/;"	t	struct:__gnu_cxx::_Char_types	typeref:typename:std::streamoff
off_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef streamoff         off_type;$/;"	t	struct:std::char_traits	typeref:typename:streamoff
off_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef typename _Char_types<_CharT>::off_type    off_type;$/;"	t	struct:__gnu_cxx::char_traits	typeref:typename:_Char_types<_CharT>::off_type
offset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  long long offset;            \/* time offset (usec) *\/$/;"	m	struct:timex	typeref:typename:long long
offsetof	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^#define offsetof(t, d) __builtin_offsetof(/;"	d
ok	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      ok,$/;"	e	enum:std::codecvt_base::result
op	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^      _Operation op;$/;"	m	class:std::binder1st	typeref:typename:_Operation
op	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^      _Operation op;$/;"	m	class:std::binder2nd	typeref:typename:_Operation
open	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      open(const basic_string<char>& __s, const locale& __loc) const$/;"	f	class:std::messages	typeref:typename:catalog
open	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@messages_members.h	/^    messages<_CharT>::open(const basic_string<char>& __s, const locale& __loc,$/;"	f	class:std::messages	typeref:typename:messages<_CharT>::catalog
openmode	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    typedef _Ios_Openmode openmode;$/;"	t	class:std::ios_base	typeref:typename:_Ios_Openmode
operation_canceled	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      operation_canceled = 			ECANCELED,$/;"	e	enum:std::errc
operation_in_progress	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      operation_in_progress = 			EINPROGRESS,$/;"	e	enum:std::errc
operation_not_permitted	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      operation_not_permitted = 		EPERM,$/;"	e	enum:std::errc
operation_not_supported	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      operation_not_supported = 		EOPNOTSUPP,$/;"	e	enum:std::errc
operation_would_block	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      operation_would_block = 			EWOULDBLOCK,$/;"	e	enum:std::errc
operator !	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      operator!() const$/;"	f	class:std::basic_ios	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      operator!=(const allocator&, const allocator&) _GLIBCXX_NOTHROW$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^    operator!=(const allocator<_T1>&, const allocator<_T2>&)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator!=(const _CharT* __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator!=(const duration<_Rep1, _Period1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator!=(const time_point<_Clock, _Dur1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^      operator!=(const exception_ptr& __x, const exception_ptr& __y)$/;"	f	namespace:std::__exception_ptr	typeref:typename:_GLIBCXX_EH_PTR_USED bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    operator!=(const locale& __other) const throw()$/;"	f	class:std::locale	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      operator!=(const polymorphic_allocator& __a,$/;"	f	namespace:std::pmr	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^    operator!=(const polymorphic_allocator<_Tp1>& __a,$/;"	f	namespace:std::pmr	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^  operator!=(const memory_resource& __a, const memory_resource& __b) noexcept$/;"	f	namespace:std::pmr	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^	operator!=(const __new_allocator&, const __new_allocator<_Up>&)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^    operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)$/;"	f	namespace:std	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  operator!=(_RegexMask __other) const$/;"	f	struct:std::regex_traits::_RegexMask	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      operator!=(const regex_iterator& __rhs) const noexcept$/;"	f	class:std::regex_iterator	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      operator!=(const regex_token_iterator& __rhs) const$/;"	f	class:std::regex_token_iterator	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator!=(const __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator!=(const match_results<_Bi_iter, _Alloc>& __m1,$/;"	f	namespace:std	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator!=(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)$/;"	f	namespace:std	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator!=(const sub_match<_Bi_iter>& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator!=(typename iterator_traits<_Bi_iter>::value_type const& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator!=(typename iterator_traits<_Bi_iter>::value_type const* __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator!=(const shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator!=(const shared_ptr<_Tp>& __a, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator!=(nullptr_t, const shared_ptr<_Tp>& __a) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator!=(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator!=(const __shared_ptr<_Tp1, _Lp>& __a,$/;"	f	namespace:std	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator!=(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator!=(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	operator!=(const _Self& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^    operator!=(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator!=(const move_iterator<_Iterator>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator!=(const move_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator!=(const reverse_iterator<_Iterator>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator!=(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator!=(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^    operator!=(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^    operator!=(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT$/;"	f	namespace:std	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^    operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	namespace:std	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^    operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	operator!=(const param_type& __p1, const param_type& __p2)$/;"	f	class:std::uniform_int_distribution	typeref:typename:bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator!=(const unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator!=(const unique_ptr<_Tp, _Dp>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator !=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator!=(nullptr_t, const unique_ptr<_Tp, _Dp>& __x) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator ""h	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator""h()$/;"	f	namespace:std::literals::chrono_literals	typeref:typename:chrono::hours
operator ""h	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    operator""h(long double __hours)$/;"	f	namespace:std::literals::chrono_literals	typeref:typename:chrono::duration<long double,ratio<3600,1>>
operator ""min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator""min()$/;"	f	namespace:std::literals::chrono_literals	typeref:typename:chrono::minutes
operator ""min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    operator""min(long double __mins)$/;"	f	namespace:std::literals::chrono_literals	typeref:typename:chrono::duration<long double,ratio<60,1>>
operator ""ms	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator""ms()$/;"	f	namespace:std::literals::chrono_literals	typeref:typename:chrono::milliseconds
operator ""ms	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    operator""ms(long double __msecs)$/;"	f	namespace:std::literals::chrono_literals	typeref:typename:chrono::duration<long double,milli>
operator ""ns	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator""ns()$/;"	f	namespace:std::literals::chrono_literals	typeref:typename:chrono::nanoseconds
operator ""ns	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    operator""ns(long double __nsecs)$/;"	f	namespace:std::literals::chrono_literals	typeref:typename:chrono::duration<long double,nano>
operator ""s	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator""s(const char* __str, size_t __len)$/;"	f	namespace:std::literals::string_literals	typeref:typename:_GLIBCXX_DEFAULT_ABI_TAG _GLIBCXX_STRING_CONSTEXPR basic_string<char>
operator ""s	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator""s(const char16_t* __str, size_t __len)$/;"	f	namespace:std::literals::string_literals	typeref:typename:_GLIBCXX_DEFAULT_ABI_TAG _GLIBCXX_STRING_CONSTEXPR basic_string<char16_t>
operator ""s	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator""s(const char32_t* __str, size_t __len)$/;"	f	namespace:std::literals::string_literals	typeref:typename:_GLIBCXX_DEFAULT_ABI_TAG _GLIBCXX_STRING_CONSTEXPR basic_string<char32_t>
operator ""s	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator""s(const char8_t* __str, size_t __len)$/;"	f	namespace:std::literals::string_literals	typeref:typename:_GLIBCXX_DEFAULT_ABI_TAG _GLIBCXX_STRING_CONSTEXPR basic_string<char8_t>
operator ""s	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator""s(const wchar_t* __str, size_t __len)$/;"	f	namespace:std::literals::string_literals	typeref:typename:_GLIBCXX_DEFAULT_ABI_TAG _GLIBCXX_STRING_CONSTEXPR basic_string<wchar_t>
operator ""s	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator""s()$/;"	f	namespace:std::literals::chrono_literals	typeref:typename:chrono::seconds
operator ""s	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    operator""s(long double __secs)$/;"	f	namespace:std::literals::chrono_literals	typeref:typename:chrono::duration<long double>
operator ""us	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator""us()$/;"	f	namespace:std::literals::chrono_literals	typeref:typename:chrono::microseconds
operator ""us	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    operator""us(long double __usecs)$/;"	f	namespace:std::literals::chrono_literals	typeref:typename:chrono::duration<long double,micro>
operator %	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator%(const duration<_Rep1, _Period1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:common_type<duration<_Rep1,_Period1>,duration<_Rep2,_Period2>>::type
operator %	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator%(const duration<_Rep1, _Period>& __d, const _Rep2& __s)$/;"	f	namespace:std::chrono	typeref:typename:duration<__common_rep_t<_Rep1,__disable_if_is_duration<_Rep2>>,_Period>
operator %=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  operator%=(const duration& __d)$/;"	f	class:std::chrono::duration	typeref:typename:_GLIBCXX17_CONSTEXPR __enable_if_t<!treat_as_floating_point<_Rep2>::value,duration &>
operator %=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  operator%=(const rep& __rhs)$/;"	f	class:std::chrono::duration	typeref:typename:_GLIBCXX17_CONSTEXPR __enable_if_t<!treat_as_floating_point<_Rep2>::value,duration &>
operator &	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  operator&(memory_order __m, __memory_order_modifier __mod)$/;"	f	namespace:std	typeref:typename:memory_order
operator &	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR _Ios_Fmtflags
operator &	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator&(_Ios_Iostate __a, _Ios_Iostate __b)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR _Ios_Iostate
operator &	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator&(_Ios_Openmode __a, _Ios_Openmode __b)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR _Ios_Openmode
operator &	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  operator&(_RegexMask __other) const$/;"	f	struct:std::regex_traits::_RegexMask	typeref:typename:_RegexMask
operator &	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  operator&(match_flag_type __a, match_flag_type __b)$/;"	f	namespace:std::regex_constants	typeref:typename:match_flag_type
operator &	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  operator&(syntax_option_type __a, syntax_option_type __b)$/;"	f	namespace:std::regex_constants	typeref:typename:syntax_option_type
operator &	include/sak/stream/serial_data.hpp	/^inline serial_data& operator&(  const serial_data_pair& sd_pair, _T1& target )$/;"	f	typeref:typename:serial_data &
operator &	include/sak/stream/serial_data.hpp	/^inline serial_data& operator&( _T1& target, const serial_data_pair& sd_pair ) { return sd_pair &/;"	f	typeref:typename:serial_data &
operator &	include/sak/stream/serial_data.hpp	/^inline serial_data& operator&( serial_data& sd, _T1& target ) { return target & sd; };$/;"	f	typeref:typename:serial_data &
operator &=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator&=(__int_type __i) noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator &=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator&=(__int_type __i) volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator &=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator&=(value_type __i) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:value_type
operator &=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator&=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)$/;"	f	namespace:std	typeref:typename:const _Ios_Fmtflags &
operator &=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator&=(_Ios_Iostate& __a, _Ios_Iostate __b)$/;"	f	namespace:std	typeref:typename:const _Ios_Iostate &
operator &=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator&=(_Ios_Openmode& __a, _Ios_Openmode __b)$/;"	f	namespace:std	typeref:typename:const _Ios_Openmode &
operator &=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  operator&=(_RegexMask __other)$/;"	f	struct:std::regex_traits::_RegexMask	typeref:typename:_RegexMask &
operator &=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  operator&=(match_flag_type& __a, match_flag_type __b)$/;"	f	namespace:std::regex_constants	typeref:typename:_GLIBCXX14_CONSTEXPR match_flag_type &
operator &=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  operator&=(syntax_option_type& __a, syntax_option_type __b)$/;"	f	namespace:std::regex_constants	typeref:typename:_GLIBCXX14_CONSTEXPR syntax_option_type &
operator ( )	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@string.c++	/^const bool ::sak::numeric_string_comparison::operator( )( const string& left, const string& righ/;"	f	class:sak::numeric_string_comparison	typeref:typename:const bool::
operator ( )	source/sak/string.c++	/^const bool ::sak::numeric_string_comparison::operator( )( const string& left, const string& righ/;"	f	class:sak::numeric_string_comparison	typeref:typename:const bool::
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^      operator()(const typename _Operation::first_argument_type& __x) const$/;"	f	class:std::binder2nd	typeref:typename:_Operation::result_type
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^      operator()(const typename _Operation::second_argument_type& __x) const$/;"	f	class:std::binder1st	typeref:typename:_Operation::result_type
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^      operator()(typename _Operation::first_argument_type& __x) const$/;"	f	class:std::binder2nd	typeref:typename:_Operation::result_type
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^      operator()(typename _Operation::second_argument_type& __x) const$/;"	f	class:std::binder1st	typeref:typename:_Operation::result_type
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      operator()(const _StrT& __s) const noexcept$/;"	f	struct:std::__str_hash_base	typeref:typename:size_t
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^      operator()(_Tp __val) const noexcept$/;"	f	struct:std::__hash_enum	typeref:typename:size_t
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^      operator()(_Tp* __p) const noexcept$/;"	f	struct:std::hash	typeref:typename:size_t
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^      operator()(double __val) const noexcept$/;"	f	struct:std::hash	typeref:typename:size_t
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^      operator()(float __val) const noexcept$/;"	f	struct:std::hash	typeref:typename:size_t
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^      operator()(nullptr_t) const noexcept$/;"	f	struct:std::hash	typeref:typename:size_t
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^	operator()(_Iterator __it)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_to_val	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^	operator()(_Iterator __it)$/;"	f	struct:__gnu_cxx::__ops::_Iter_equals_val	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^	operator()(_Iterator __it)$/;"	f	struct:__gnu_cxx::__ops::_Iter_negate	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^	operator()(_Iterator __it)$/;"	f	struct:__gnu_cxx::__ops::_Iter_pred	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^	operator()(_Iterator __it, _Value& __val)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_val	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^	operator()(_Iterator2 __it2)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_to_iter	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^	operator()(_Iterator2 __it2)$/;"	f	struct:__gnu_cxx::__ops::_Iter_equals_iter	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^	operator()(_Value& __val, _Iterator __it)$/;"	f	struct:__gnu_cxx::__ops::_Val_comp_iter	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^        operator()(_Iterator1 __it1, _Iterator2 __it2)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_iter	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      operator()(_Iterator __it, _Value& __val) const$/;"	f	struct:__gnu_cxx::__ops::_Iter_equal_to_val	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      operator()(_Iterator __it, _Value& __val) const$/;"	f	struct:__gnu_cxx::__ops::_Iter_less_val	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      operator()(_Iterator1 __it1, _Iterator2 __it2) const$/;"	f	struct:__gnu_cxx::__ops::_Iter_equal_to_iter	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      operator()(_Iterator1 __it1, _Iterator2 __it2) const$/;"	f	struct:__gnu_cxx::__ops::_Iter_less_iter	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@predefined_ops.h	/^      operator()(_Value& __val, _Iterator __it) const$/;"	f	struct:__gnu_cxx::__ops::_Val_less_iter	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^	operator()(_Args&&... __args) const$/;"	f	class:std::reference_wrapper	typeref:typename:_GLIBCXX20_CONSTEXPR typename __invoke_result<_Tp &,_Args...>::type
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      operator()(_CharT __ch) const$/;"	f	struct:std::__detail::_AnyMatcher	typeref:typename:bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      operator()(_CharT __ch) const$/;"	f	struct:std::__detail::_BracketMatcher	typeref:typename:bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^      operator()(_CharT __ch) const$/;"	f	struct:std::__detail::_CharMatcher	typeref:typename:bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      operator()(const shared_ptr<_Tp>& __s) const noexcept$/;"	f	struct:std::hash	typeref:typename:size_t
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	operator()(const _Tp& __lhs, const _Up& __rhs) const noexcept$/;"	f	struct:std::_Sp_owner_less	typeref:typename:auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      operator()(const _Tp& __lhs, const _Tp& __rhs) const noexcept$/;"	f	struct:std::_Sp_owner_less	typeref:typename:bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      operator()(const _Tp& __lhs, const _Tp1& __rhs) const noexcept$/;"	f	struct:std::_Sp_owner_less	typeref:typename:bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      operator()(const _Tp1& __lhs, const _Tp& __rhs) const noexcept$/;"	f	struct:std::_Sp_owner_less	typeref:typename:bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      operator()(const __shared_ptr<_Tp, _Lp>& __s) const noexcept$/;"	f	struct:std::hash	typeref:typename:size_t
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      void operator()(_Yp* __p) const { delete[] __p; }$/;"	f	struct:std::__sp_array_delete	typeref:typename:void
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      operator()(_ArgTypes... __args) const$/;"	f	class:std::function	typeref:typename:_Res
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^	operator()()$/;"	f	struct:std::thread::_Invoker	typeref:typename:__result<_Tuple>::type
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^      operator()(const thread::id& __id) const noexcept$/;"	f	struct:std::hash	typeref:typename:size_t
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t) const$/;"	f	struct:std::bit_not	typeref:typename:_GLIBCXX14_CONSTEXPR auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t) const$/;"	f	struct:std::logical_not	typeref:typename:_GLIBCXX14_CONSTEXPR auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t) const$/;"	f	struct:std::negate	typeref:typename:_GLIBCXX14_CONSTEXPR auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t, _Up&& __u) const$/;"	f	struct:std::bit_and	typeref:typename:_GLIBCXX14_CONSTEXPR auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t, _Up&& __u) const$/;"	f	struct:std::bit_or	typeref:typename:_GLIBCXX14_CONSTEXPR auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t, _Up&& __u) const$/;"	f	struct:std::bit_xor	typeref:typename:_GLIBCXX14_CONSTEXPR auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t, _Up&& __u) const$/;"	f	struct:std::divides	typeref:typename:_GLIBCXX14_CONSTEXPR auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t, _Up&& __u) const$/;"	f	struct:std::equal_to	typeref:typename:auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t, _Up&& __u) const$/;"	f	struct:std::greater	typeref:typename:auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t, _Up&& __u) const$/;"	f	struct:std::greater_equal	typeref:typename:auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t, _Up&& __u) const$/;"	f	struct:std::less	typeref:typename:auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t, _Up&& __u) const$/;"	f	struct:std::less_equal	typeref:typename:auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t, _Up&& __u) const$/;"	f	struct:std::logical_and	typeref:typename:_GLIBCXX14_CONSTEXPR auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t, _Up&& __u) const$/;"	f	struct:std::logical_or	typeref:typename:_GLIBCXX14_CONSTEXPR auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t, _Up&& __u) const$/;"	f	struct:std::minus	typeref:typename:_GLIBCXX14_CONSTEXPR auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t, _Up&& __u) const$/;"	f	struct:std::modulus	typeref:typename:_GLIBCXX14_CONSTEXPR auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t, _Up&& __u) const$/;"	f	struct:std::multiplies	typeref:typename:_GLIBCXX14_CONSTEXPR auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t, _Up&& __u) const$/;"	f	struct:std::not_equal_to	typeref:typename:auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp&& __t, _Up&& __u) const$/;"	f	struct:std::plus	typeref:typename:_GLIBCXX14_CONSTEXPR auto
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp* __t, _Up* __u) const noexcept$/;"	f	struct:std::greater	typeref:typename:bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp* __t, _Up* __u) const noexcept$/;"	f	struct:std::greater_equal	typeref:typename:bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp* __t, _Up* __u) const noexcept$/;"	f	struct:std::less	typeref:typename:bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^	operator()(_Tp* __t, _Up* __u) const noexcept$/;"	f	struct:std::less_equal	typeref:typename:bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^        operator()(_Pair2& __x) const$/;"	f	struct:std::_Select1st	typeref:typename:_Pair2::first_type &
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^        operator()(const _Pair2& __x) const$/;"	f	struct:std::_Select1st	typeref:typename:const typename _Pair2::first_type &
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(_Arg __x) const$/;"	f	class:std::pointer_to_unary_function	typeref:typename:_Result
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(_Arg1 __x, _Arg2 __y) const$/;"	f	class:std::pointer_to_binary_function	typeref:typename:_Result
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(_Pair& __x) const$/;"	f	struct:std::_Select1st	typeref:typename:_Pair::first_type &
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(_Pair& __x) const$/;"	f	struct:std::_Select2nd	typeref:typename:_Pair::second_type &
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(_Tp& __r) const$/;"	f	class:std::mem_fun_ref_t	typeref:typename:_Ret
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(_Tp& __r, _Arg __x) const$/;"	f	class:std::mem_fun1_ref_t	typeref:typename:_Ret
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(_Tp& __x) const$/;"	f	struct:std::_Identity	typeref:typename:_Tp &
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(_Tp* __p) const$/;"	f	class:std::mem_fun_t	typeref:typename:_Ret
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(_Tp* __p, _Arg __x) const$/;"	f	class:std::mem_fun1_t	typeref:typename:_Ret
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW$/;"	f	struct:std::greater	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW$/;"	f	struct:std::greater_equal	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW$/;"	f	struct:std::less	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW$/;"	f	struct:std::less_equal	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Pair& __x) const$/;"	f	struct:std::_Select1st	typeref:typename:const typename _Pair::first_type &
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Pair& __x) const$/;"	f	struct:std::_Select2nd	typeref:typename:const typename _Pair::second_type &
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __r) const$/;"	f	class:std::const_mem_fun_ref_t	typeref:typename:_Ret
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __r, _Arg __x) const$/;"	f	class:std::const_mem_fun1_ref_t	typeref:typename:_Ret
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x) const$/;"	f	struct:std::_Identity	typeref:typename:const _Tp &
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x) const$/;"	f	struct:std::bit_not	typeref:typename:_GLIBCXX14_CONSTEXPR _Tp
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x) const$/;"	f	struct:std::logical_not	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x) const$/;"	f	struct:std::negate	typeref:typename:_GLIBCXX14_CONSTEXPR _Tp
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::bit_and	typeref:typename:_GLIBCXX14_CONSTEXPR _Tp
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::bit_or	typeref:typename:_GLIBCXX14_CONSTEXPR _Tp
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::bit_xor	typeref:typename:_GLIBCXX14_CONSTEXPR _Tp
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::divides	typeref:typename:_GLIBCXX14_CONSTEXPR _Tp
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::equal_to	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::greater	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::greater_equal	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::less	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::less_equal	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::logical_and	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::logical_or	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::minus	typeref:typename:_GLIBCXX14_CONSTEXPR _Tp
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::modulus	typeref:typename:_GLIBCXX14_CONSTEXPR _Tp
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::multiplies	typeref:typename:_GLIBCXX14_CONSTEXPR _Tp
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::not_equal_to	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::plus	typeref:typename:_GLIBCXX14_CONSTEXPR _Tp
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp* __p) const$/;"	f	class:std::const_mem_fun_t	typeref:typename:_Ret
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const _Tp* __p, _Arg __x) const$/;"	f	class:std::const_mem_fun1_t	typeref:typename:_Ret
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const typename _Predicate::argument_type& __x) const$/;"	f	class:std::unary_negate	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      operator()(const typename _Predicate::first_argument_type& __x,$/;"	f	class:std::binary_negate	typeref:typename:_GLIBCXX14_CONSTEXPR bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	bool operator()(const value_type& __x, const value_type& __y) const$/;"	f	class:std::map::value_compare	typeref:typename:bool
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	  operator()(_GLIBCXX_FWDREF(_Arg) __arg) const$/;"	f	struct:std::_Rb_tree::_Alloc_node	typeref:typename:_Link_type
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	  operator()(_GLIBCXX_FWDREF(_Arg) __arg)$/;"	f	struct:std::_Rb_tree::_Reuse_or_alloc_node	typeref:typename:_Link_type
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	operator()(_UniformRandomBitGenerator& __urng)$/;"	f	class:std::uniform_int_distribution	typeref:typename:result_type
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      operator()(_UniformRandomBitGenerator& __urng,$/;"	f	class:std::uniform_int_distribution	typeref:typename:uniform_int_distribution<_IntType>::result_type
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	operator()(_Up* __ptr) const$/;"	f	struct:std::default_delete	typeref:typename:_GLIBCXX23_CONSTEXPR typename enable_if<is_convertible<_Up (*)[],_Tp (*)[]>::value>::type
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      operator()(_Tp* __ptr) const$/;"	f	struct:std::default_delete	typeref:typename:_GLIBCXX23_CONSTEXPR void
operator ()	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      operator()(const _Up& __u) const$/;"	f	struct:std::__uniq_ptr_hash	typeref:typename:size_t
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^      operator*() const throw() $/;"	f	class:std::auto_ptr	typeref:typename:element_type &
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator*(const _Rep1& __s, const duration<_Rep2, _Period>& __d)$/;"	f	namespace:std::chrono	typeref:typename:duration<__common_rep_t<_Rep2,_Rep1>,_Period>
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator*(const duration<_Rep1, _Period>& __d, const _Rep2& __s)$/;"	f	namespace:std::chrono	typeref:typename:duration<__common_rep_t<_Rep1,_Rep2>,_Period>
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^	_Tp& operator*() const noexcept { return *_M_ptr; }$/;"	f	struct:std::__detail::_Scoped_ptr	typeref:typename:_Tp &
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^	_NodeAlloc& operator*() noexcept { return _M_alloc; }$/;"	f	union:std::_Node_handle_common::_Optional_alloc	typeref:typename:_NodeAlloc &
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      operator*() const noexcept$/;"	f	class:std::regex_iterator	typeref:typename:const value_type &
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      operator*() const$/;"	f	class:std::regex_token_iterator	typeref:typename:const value_type &
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^		reference operator*() const { return _M_p[_M_pos % _M_len]; }$/;"	f	struct:std::_Sp_counted_array_base::_M_init::_Iter	typeref:typename:reference
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      operator*() const noexcept$/;"	f	class:std::__shared_ptr_access	typeref:typename:element_type &
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator*() const$/;"	f	struct:std::_Bit_const_iterator	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reference
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator*() const$/;"	f	struct:std::_Bit_iterator	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reference
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator*() const _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_iterator	typeref:typename:_GLIBCXX_NODISCARD reference
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator*() const _GLIBCXX_NOEXCEPT$/;"	f	class:__gnu_cxx::__normal_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR reference
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator*() const noexcept$/;"	f	class:std::common_iterator::__postfix_proxy	typeref:typename:const iter_value_t<_It> &
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator*() const$/;"	f	class:std::counted_iterator	typeref:typename:decltype(auto)
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator*() const$/;"	f	class:std::move_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR reference
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator*() const$/;"	f	class:std::reverse_iterator	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR reference
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator*()$/;"	f	class:std::back_insert_iterator	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR back_insert_iterator &
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator*()$/;"	f	class:std::counted_iterator	typeref:typename:decltype(auto)
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator*()$/;"	f	class:std::front_insert_iterator	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR front_insert_iterator &
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator*()$/;"	f	class:std::insert_iterator	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR insert_iterator &
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator*() const requires __detail::__dereferenceable<const _It>$/;"	f	class:std::common_iterator	typeref:typename:decltype(auto)
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator*() const$/;"	f	class:std::basic_const_iterator	typeref:typename:__reference
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator*()$/;"	f	class:std::common_iterator	typeref:typename:decltype(auto)
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_raw_storage_iter.h	/^      operator*() { return *this; }$/;"	f	class:std::raw_storage_iterator	typeref:typename:raw_storage_iterator &
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator*() const _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_const_iterator	typeref:typename:reference
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator*() const _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_iterator	typeref:typename:reference
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      operator*() const$/;"	f	class:std::istreambuf_iterator	typeref:typename:_GLIBCXX_NODISCARD char_type
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      operator*()$/;"	f	class:std::ostreambuf_iterator	typeref:typename:_GLIBCXX_NODISCARD ostreambuf_iterator &
operator *	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      operator*() const noexcept(noexcept(*std::declval<pointer>()))$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR typename add_lvalue_reference<element_type>::type
operator *	include/sak/pattern/singleton_ptr.hpp	/^	inline _T1& operator*( ) { return get( ); };$/;"	f	class:sak::pattern::singleton_ptr	typeref:typename:_T1 &
operator *=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	operator*=(const rep& __rhs)$/;"	f	class:std::chrono::duration	typeref:typename:_GLIBCXX17_CONSTEXPR duration &
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR basic_string<_CharT,_Traits,_Alloc>
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator+(_CharT __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR basic_string<_CharT,_Traits,_Alloc>
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR basic_string<_CharT,_Traits,_Alloc>
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator+(const _CharT* __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR basic_string<_CharT,_Traits,_Alloc>
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator+(const _CharT* __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR basic_string<_CharT,_Traits,_Alloc>
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR basic_string<_CharT,_Traits,_Alloc>
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string<_CharT,_Traits,_Alloc>
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR basic_string<_CharT,_Traits,_Alloc>
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	operator+() const$/;"	f	class:std::chrono::duration	typeref:typename:duration<typename common_type<rep>::type,period>
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator+(const duration<_Rep1, _Period1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:common_type<duration<_Rep1,_Period1>,duration<_Rep2,_Period2>>::type
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator+(const duration<_Rep1, _Period1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:time_point<_Clock,typename common_type<duration<_Rep1,_Period1>,_Dur2>::type>
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator+(const time_point<_Clock, _Dur1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:time_point<_Clock,typename common_type<_Dur1,duration<_Rep2,_Period2>>::type>
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^      operator+(streamoff __off) const$/;"	f	class:std::fpos	typeref:typename:fpos
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator+(const const_iterator& __x, difference_type __n)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_iterator
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator+(const iterator& __x, difference_type __n)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR iterator
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator+(difference_type __n, const const_iterator& __x)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_iterator
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator+(difference_type __n, const iterator& __x)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR iterator
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator+(const _Self& __x, difference_type __n) _GLIBCXX_NOEXCEPT$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _Self
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator+(difference_type __n, const _Self& __x) _GLIBCXX_NOEXCEPT$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _Self
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator+(difference_type __n) const _GLIBCXX_NOEXCEPT$/;"	f	class:__gnu_cxx::__normal_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR __normal_iterator
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator+(difference_type __n) const$/;"	f	class:std::move_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR move_iterator
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator+(difference_type __n) const$/;"	f	class:std::reverse_iterator	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR reverse_iterator
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator+(iter_difference_t<_It> __n) const$/;"	f	class:std::counted_iterator	typeref:typename:counted_iterator
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator+(iter_difference_t<_It> __n, const counted_iterator& __x)$/;"	f	namespace:std	typeref:typename:counted_iterator
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator+(const basic_const_iterator& __i, difference_type __n)$/;"	f	namespace:std	typeref:typename:basic_const_iterator
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator+(difference_type __n, const basic_const_iterator& __i)$/;"	f	namespace:std	typeref:typename:basic_const_iterator
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator+(typename __normal_iterator<_Iterator, _Container>::difference_type$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR __normal_iterator<_Iterator,_Container>
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator+(typename move_iterator<_Iterator>::difference_type __n,$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR move_iterator<_Iterator>
operator +	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator+(typename reverse_iterator<_Iterator>::difference_type __n,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator++() const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:value_type
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator++() noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator++() noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__pointer_type
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator++() volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator++() volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__pointer_type
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator++(int) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:_GLIBCXX_ALWAYS_INLINE value_type
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator++(int) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:value_type
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator++(int) noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator++(int) noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__pointer_type
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator++(int) volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator++(int) volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__pointer_type
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	operator++()$/;"	f	class:std::chrono::duration	typeref:typename:_GLIBCXX17_CONSTEXPR duration &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	operator++()$/;"	f	class:std::chrono::time_point	typeref:typename:time_point &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	operator++(int)$/;"	f	class:std::chrono::duration	typeref:typename:_GLIBCXX17_CONSTEXPR duration
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	operator++(int)$/;"	f	class:std::chrono::time_point	typeref:typename:time_point
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      operator++(int)$/;"	f	class:std::regex_iterator	typeref:typename:regex_iterator
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      operator++(int)$/;"	f	class:std::regex_token_iterator	typeref:typename:regex_token_iterator
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^		_Iter operator++(int) { auto __i(*this); ++_M_pos; return __i; }$/;"	f	struct:std::_Sp_counted_array_base::_M_init::_Iter	typeref:typename:_Iter
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^		_Iter& operator++() { ++_M_pos; return *this; }$/;"	f	struct:std::_Sp_counted_array_base::_M_init::_Iter	typeref:typename:_Iter &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator++()$/;"	f	struct:std::_Bit_const_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR const_iterator &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator++()$/;"	f	struct:std::_Bit_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR iterator &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator++(int)$/;"	f	struct:std::_Bit_const_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR const_iterator
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator++(int)$/;"	f	struct:std::_Bit_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator++() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_iterator	typeref:typename:_Self &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator++(int) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_iterator	typeref:typename:_Self
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator++() _GLIBCXX_NOEXCEPT$/;"	f	class:__gnu_cxx::__normal_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR __normal_iterator &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator++()$/;"	f	class:std::back_insert_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR back_insert_iterator &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator++()$/;"	f	class:std::counted_iterator	typeref:typename:counted_iterator &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator++()$/;"	f	class:std::front_insert_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR front_insert_iterator &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator++()$/;"	f	class:std::insert_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR insert_iterator &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator++()$/;"	f	class:std::move_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR move_iterator &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator++()$/;"	f	class:std::reverse_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR reverse_iterator &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator++(int) _GLIBCXX_NOEXCEPT$/;"	f	class:__gnu_cxx::__normal_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR __normal_iterator
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator++(int) requires (!forward_iterator<_Iterator>)$/;"	f	class:std::move_iterator	typeref:typename:void
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator++(int) requires forward_iterator<_It>$/;"	f	class:std::counted_iterator	typeref:typename:counted_iterator
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator++(int)$/;"	f	class:std::back_insert_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR back_insert_iterator
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator++(int)$/;"	f	class:std::counted_iterator	typeref:typename:decltype(auto)
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator++(int)$/;"	f	class:std::front_insert_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR front_insert_iterator
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator++(int)$/;"	f	class:std::insert_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR insert_iterator &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator++(int)$/;"	f	class:std::move_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR move_iterator
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator++(int)$/;"	f	class:std::reverse_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR reverse_iterator
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator++()$/;"	f	class:std::basic_const_iterator	typeref:typename:basic_const_iterator &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator++()$/;"	f	class:std::common_iterator	typeref:typename:common_iterator &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator++(int)$/;"	f	class:std::basic_const_iterator	typeref:typename:basic_const_iterator
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator++(int)$/;"	f	class:std::basic_const_iterator	typeref:typename:void
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator++(int)$/;"	f	class:std::common_iterator	typeref:typename:decltype(auto)
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_raw_storage_iter.h	/^      operator++()$/;"	f	class:std::raw_storage_iterator	typeref:typename:raw_storage_iterator &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_raw_storage_iter.h	/^      operator++(int)$/;"	f	class:std::raw_storage_iterator	typeref:typename:raw_storage_iterator
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator++() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_const_iterator	typeref:typename:_Self &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator++() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_iterator	typeref:typename:_Self &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator++(int) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_const_iterator	typeref:typename:_Self
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator++(int) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_iterator	typeref:typename:_Self
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      operator++()$/;"	f	class:std::istreambuf_iterator	typeref:typename:istreambuf_iterator &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      operator++()$/;"	f	class:std::ostreambuf_iterator	typeref:typename:ostreambuf_iterator &
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      operator++(int)$/;"	f	class:std::istreambuf_iterator	typeref:typename:istreambuf_iterator
operator ++	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      operator++(int)$/;"	f	class:std::ostreambuf_iterator	typeref:typename:ostreambuf_iterator &
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator+=(__int_type __i) noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator+=(__int_type __i) volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator+=(difference_type __d) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:value_type
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator+=(ptrdiff_t __d) noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__pointer_type
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator+=(ptrdiff_t __d) volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__pointer_type
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator+=(value_type __i) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:value_type
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator+=(value_type __i) noexcept$/;"	f	struct:std::__atomic_float	typeref:typename:value_type
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator+=(value_type __i) volatile noexcept$/;"	f	struct:std::__atomic_float	typeref:typename:value_type
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	operator+=(const _Tp& __svt)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR _If_sv<_Tp,basic_string &>
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      operator+=(_CharT __c)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      operator+=(const _CharT* __s)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      operator+=(const basic_string& __str)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      operator+=(initializer_list<_CharT> __l)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	operator+=(const duration& __d)$/;"	f	class:std::chrono::duration	typeref:typename:_GLIBCXX17_CONSTEXPR duration &
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	operator+=(const duration& __dur)$/;"	f	class:std::chrono::time_point	typeref:typename:_GLIBCXX17_CONSTEXPR time_point &
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^      operator+=(streamoff __off)$/;"	f	class:std::fpos	typeref:typename:fpos &
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator+=(difference_type __i)$/;"	f	struct:std::_Bit_const_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR const_iterator &
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator+=(difference_type __i)$/;"	f	struct:std::_Bit_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR iterator &
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator+=(difference_type __n) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_iterator	typeref:typename:_Self &
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator+=(difference_type __n) _GLIBCXX_NOEXCEPT$/;"	f	class:__gnu_cxx::__normal_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR __normal_iterator &
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator+=(difference_type __n)$/;"	f	class:std::move_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR move_iterator &
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator+=(difference_type __n)$/;"	f	class:std::reverse_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR reverse_iterator &
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator+=(iter_difference_t<_It> __n)$/;"	f	class:std::counted_iterator	typeref:typename:counted_iterator &
operator +=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator+=(difference_type __n)$/;"	f	class:std::basic_const_iterator	typeref:typename:basic_const_iterator &
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	operator-() const$/;"	f	class:std::chrono::duration	typeref:typename:duration<typename common_type<rep>::type,period>
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator-(const duration<_Rep1, _Period1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:common_type<duration<_Rep1,_Period1>,duration<_Rep2,_Period2>>::type
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator-(const time_point<_Clock, _Dur1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:common_type<_Dur1,_Dur2>::type
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator-(const time_point<_Clock, _Dur1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:time_point<_Clock,typename common_type<_Dur1,duration<_Rep2,_Period2>>::type>
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^      operator-(const fpos& __other) const$/;"	f	class:std::fpos	typeref:typename:streamoff
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^      operator-(streamoff __off) const$/;"	f	class:std::fpos	typeref:typename:fpos
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator-(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR ptrdiff_t
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator-(const const_iterator& __x, difference_type __n)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_iterator
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator-(const iterator& __x, difference_type __n)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR iterator
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	operator-(const _Self& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD difference_type
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator-(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD difference_type
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator-(const _Self& __x, difference_type __n) _GLIBCXX_NOEXCEPT$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _Self
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	operator-(const counted_iterator& __x,$/;"	f	namespace:std	typeref:typename:iter_difference_t<_It2>
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	operator-(const move_iterator& __x, const move_sentinel<_Sent>& __y)$/;"	f	namespace:std	typeref:typename:iter_difference_t<_Iterator>
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	operator-(const move_sentinel<_Sent>& __x, const move_iterator& __y)$/;"	f	namespace:std	typeref:typename:iter_difference_t<_Iterator>
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator- [[nodiscard]] (const common_iterator& __x,$/;"	f	namespace:std	typeref:typename:requires sized_sentinel_for<_Sent,_It2> iter_difference_t<_It2>
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator-(const _Sent& __x, const basic_const_iterator& __y)$/;"	f	namespace:std	typeref:typename:requires sized_sentinel_for<_Sent,_It> difference_type
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator-(const _Sent& __y) const$/;"	f	class:std::basic_const_iterator	typeref:typename:difference_type
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator-(const counted_iterator& __x, default_sentinel_t)$/;"	f	namespace:std	typeref:typename:iter_difference_t<_It>
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator-(default_sentinel_t, const counted_iterator& __y)$/;"	f	namespace:std	typeref:typename:iter_difference_t<_It>
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT$/;"	f	class:__gnu_cxx::__normal_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR __normal_iterator
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator-(difference_type __n) const$/;"	f	class:std::move_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR move_iterator
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator-(difference_type __n) const$/;"	f	class:std::reverse_iterator	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR reverse_iterator
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator-(iter_difference_t<_It> __n) const$/;"	f	class:std::counted_iterator	typeref:typename:counted_iterator
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR typename __normal_iterator<_Iterator,_Container>::difference_type
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX20_CONSTEXPR auto
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator-(const basic_const_iterator& __i, difference_type __n)$/;"	f	namespace:std	typeref:typename:basic_const_iterator
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator-(const move_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:decltype(__x.base ()-__y.base ())
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator-(const reverse_iterator<_Iterator>& __x,$/;"	f	namespace:std	typeref:typename:reverse_iterator<_Iterator>::difference_type
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator-(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:decltype(__y.base ()-__x.base ())
operator -	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator-(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:reverse_iterator<_IteratorL>::difference_type
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator--() const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:value_type
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator--() noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator--() noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__pointer_type
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator--() volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator--() volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__pointer_type
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator--(int) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:_GLIBCXX_ALWAYS_INLINE value_type
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator--(int) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:value_type
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator--(int) noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator--(int) noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__pointer_type
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator--(int) volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator--(int) volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__pointer_type
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	operator--()$/;"	f	class:std::chrono::duration	typeref:typename:_GLIBCXX17_CONSTEXPR duration &
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	operator--()$/;"	f	class:std::chrono::time_point	typeref:typename:time_point &
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	operator--(int)$/;"	f	class:std::chrono::duration	typeref:typename:_GLIBCXX17_CONSTEXPR duration
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	operator--(int)$/;"	f	class:std::chrono::time_point	typeref:typename:time_point
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator--()$/;"	f	struct:std::_Bit_const_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR const_iterator &
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator--()$/;"	f	struct:std::_Bit_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR iterator &
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator--(int)$/;"	f	struct:std::_Bit_const_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR const_iterator
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator--(int)$/;"	f	struct:std::_Bit_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR iterator
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator--() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_iterator	typeref:typename:_Self &
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator--(int) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_iterator	typeref:typename:_Self
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator--() _GLIBCXX_NOEXCEPT$/;"	f	class:__gnu_cxx::__normal_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR __normal_iterator &
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator--() requires bidirectional_iterator<_It>$/;"	f	class:std::counted_iterator	typeref:typename:counted_iterator &
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator--()$/;"	f	class:std::move_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR move_iterator &
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator--()$/;"	f	class:std::reverse_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR reverse_iterator &
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator--(int) _GLIBCXX_NOEXCEPT$/;"	f	class:__gnu_cxx::__normal_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR __normal_iterator
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator--(int) requires bidirectional_iterator<_It>$/;"	f	class:std::counted_iterator	typeref:typename:counted_iterator
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator--(int)$/;"	f	class:std::move_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR move_iterator
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator--(int)$/;"	f	class:std::reverse_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR reverse_iterator
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator--()$/;"	f	class:std::basic_const_iterator	typeref:typename:basic_const_iterator &
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator--(int)$/;"	f	class:std::basic_const_iterator	typeref:typename:basic_const_iterator
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator--() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_const_iterator	typeref:typename:_Self &
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator--() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_iterator	typeref:typename:_Self &
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator--(int) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_const_iterator	typeref:typename:_Self
operator --	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator--(int) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_iterator	typeref:typename:_Self
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator-=(__int_type __i) noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator-=(__int_type __i) volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator-=(difference_type __d) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:value_type
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator-=(ptrdiff_t __d) noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__pointer_type
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator-=(ptrdiff_t __d) volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__pointer_type
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator-=(value_type __i) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:value_type
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator-=(value_type __i) noexcept$/;"	f	struct:std::__atomic_float	typeref:typename:value_type
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator-=(value_type __i) volatile noexcept$/;"	f	struct:std::__atomic_float	typeref:typename:value_type
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	operator-=(const duration& __d)$/;"	f	class:std::chrono::duration	typeref:typename:_GLIBCXX17_CONSTEXPR duration &
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	operator-=(const duration& __dur)$/;"	f	class:std::chrono::time_point	typeref:typename:_GLIBCXX17_CONSTEXPR time_point &
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^      operator-=(streamoff __off)$/;"	f	class:std::fpos	typeref:typename:fpos &
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator-=(difference_type __i)$/;"	f	struct:std::_Bit_const_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR const_iterator &
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator-=(difference_type __i)$/;"	f	struct:std::_Bit_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR iterator &
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator-=(difference_type __n) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_iterator	typeref:typename:_Self &
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator-=(difference_type __n) _GLIBCXX_NOEXCEPT$/;"	f	class:__gnu_cxx::__normal_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR __normal_iterator &
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator-=(difference_type __n)$/;"	f	class:std::move_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR move_iterator &
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator-=(difference_type __n)$/;"	f	class:std::reverse_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR reverse_iterator &
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator-=(iter_difference_t<_It> __n)$/;"	f	class:std::counted_iterator	typeref:typename:counted_iterator &
operator -=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator-=(difference_type __n)$/;"	f	class:std::basic_const_iterator	typeref:typename:basic_const_iterator &
operator ->	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^      operator->() const throw() $/;"	f	class:std::auto_ptr	typeref:typename:element_type *
operator ->	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^	_Tp* operator->() const noexcept { return _M_ptr; }$/;"	f	struct:std::__detail::_Scoped_ptr	typeref:typename:_Tp *
operator ->	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      operator->() const noexcept$/;"	f	class:std::regex_iterator	typeref:typename:const value_type *
operator ->	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      operator->() const$/;"	f	class:std::regex_token_iterator	typeref:typename:const value_type *
operator ->	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^		pointer operator->() const { return _M_p + (_M_pos % _M_len); }$/;"	f	struct:std::_Sp_counted_array_base::_M_init::_Iter	typeref:typename:pointer
operator ->	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      operator->() const noexcept$/;"	f	class:std::__shared_ptr_access	typeref:typename:element_type *
operator ->	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator->() const _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_iterator	typeref:typename:_GLIBCXX_NODISCARD pointer
operator ->	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator->() const _GLIBCXX_NOEXCEPT$/;"	f	class:__gnu_cxx::__normal_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR pointer
operator ->	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator->() const noexcept$/;"	f	class:std::common_iterator::__arrow_proxy	typeref:typename:const iter_value_t<_It> *
operator ->	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator->() const noexcept$/;"	f	class:std::counted_iterator	typeref:typename:auto
operator ->	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator->() const$/;"	f	class:std::move_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR pointer
operator ->	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator->() const requires __detail::__common_iter_has_arrow<_It>$/;"	f	class:std::common_iterator	typeref:typename:auto
operator ->	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator->() const$/;"	f	class:std::basic_const_iterator	typeref:typename:const auto *
operator ->	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator->() const _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_const_iterator	typeref:typename:pointer
operator ->	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator->() const _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Rb_tree_iterator	typeref:typename:pointer
operator ->	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      operator->() const noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR pointer
operator ->	include/sak/pattern/singleton_ptr.hpp	/^	inline _T1* operator->( ) { return &get( ); };$/;"	f	class:sak::pattern::singleton_ptr	typeref:typename:_T1 *
operator /	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator\/(const duration<_Rep1, _Period1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:common_type<_Rep1,_Rep2>::type
operator /	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator\/(const duration<_Rep1, _Period>& __d, const _Rep2& __s)$/;"	f	namespace:std::chrono	typeref:typename:duration<__common_rep_t<_Rep1,__disable_if_is_duration<_Rep2>>,_Period>
operator /=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	operator\/=(const rep& __rhs)$/;"	f	class:std::chrono::duration	typeref:typename:_GLIBCXX17_CONSTEXPR duration &
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator<(const _CharT* __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator<(const duration<_Rep1, _Period1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator<(const time_point<_Clock, _Dur1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator<(const __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator<(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)$/;"	f	namespace:std	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator<(const sub_match<_Bi_iter>& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator<(typename iterator_traits<_Bi_iter>::value_type const& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator<(typename iterator_traits<_Bi_iter>::value_type const* __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator<(const shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator<(const shared_ptr<_Tp>& __a, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator<(nullptr_t, const shared_ptr<_Tp>& __a) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator<(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator<(const __shared_ptr<_Tp, _Lp>& __a,$/;"	f	namespace:std	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator<(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator<(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator<(const _Bit_reference& __x) const$/;"	f	struct:std::_Bit_reference	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	operator<(const _Self& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator<(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^    operator<(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator<(const _It2& __x, const basic_const_iterator& __y)$/;"	f	namespace:std	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator<(const _It2& __y) const$/;"	f	class:std::basic_const_iterator	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_NODISCARD bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<(const basic_const_iterator& __y) const$/;"	f	class:std::basic_const_iterator	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<(const move_iterator<_Iterator>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<(const move_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<(const reverse_iterator<_Iterator>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^    operator<(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    operator<(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^    operator<(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator<(const _Rb_tree& __x, const _Rb_tree& __y)$/;"	f	namespace:std	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^    operator<(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	namespace:std	typeref:typename:bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator<(const unique_ptr<_Tp, _Dp>& __x, nullptr_t)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX23_CONSTEXPR bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator<(const unique_ptr<_Tp, _Dp>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX23_CONSTEXPR bool
operator <	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator<(nullptr_t, const unique_ptr<_Tp, _Dp>& __x)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX23_CONSTEXPR bool
operator <<	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator<<(basic_ostream<_CharT, _Traits>& __os,$/;"	f	namespace:std	typeref:typename:basic_ostream<_CharT,_Traits> &
operator <<	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator<<(basic_ostream<_Ch_type, _Ch_traits>& __os,$/;"	f	namespace:std	typeref:typename:basic_ostream<_Ch_type,_Ch_traits> &
operator <<	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator<<(std::basic_ostream<_Ch, _Tr>& __os,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION std::basic_ostream<_Ch,_Tr> &
operator <<	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator<<(basic_ostream<_CharT, _Traits>& __os,$/;"	f	namespace:std	typeref:typename:basic_ostream<_CharT,_Traits> &
operator <<	include/sak/stream/serial_data.hpp	/^ostream& operator<<( ostream& os, const _T1& target )$/;"	f	typeref:typename:ostream &
operator <<	include/sak/stream/serializable.hpp	/^inline ostream& operator<<( ostream& os, const serializable& object ){ return object.stream( os /;"	f	namespace:sak::stream	typeref:typename:ostream &
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator<=(const _CharT* __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator<=(const duration<_Rep1, _Period1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator<=(const time_point<_Clock, _Dur1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator<=(const __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator<=(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)$/;"	f	namespace:std	typeref:typename:bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator<=(const sub_match<_Bi_iter>& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator<=(typename iterator_traits<_Bi_iter>::value_type const& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator<=(typename iterator_traits<_Bi_iter>::value_type const* __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator<=(const shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator<=(const shared_ptr<_Tp>& __a, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator<=(nullptr_t, const shared_ptr<_Tp>& __a) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator<=(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator<=(const __shared_ptr<_Tp1, _Lp>& __a,$/;"	f	namespace:std	typeref:typename:bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator<=(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator<=(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	operator<=(const _Self& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator<=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^    operator<=(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator<=(const _It2& __x, const basic_const_iterator& __y)$/;"	f	namespace:std	typeref:typename:bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator<=(const _It2& __y) const$/;"	f	class:std::basic_const_iterator	typeref:typename:bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_NODISCARD bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<=(const basic_const_iterator& __y) const$/;"	f	class:std::basic_const_iterator	typeref:typename:bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<=(const move_iterator<_Iterator>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<=(const move_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<=(const reverse_iterator<_Iterator>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<=(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<=(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^    operator<=(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std	typeref:typename:bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    operator<=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^    operator<=(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^    operator<=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	namespace:std	typeref:typename:bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator<=(const unique_ptr<_Tp, _Dp>& __x, nullptr_t)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX23_CONSTEXPR bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator<=(const unique_ptr<_Tp, _Dp>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX23_CONSTEXPR bool
operator <=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator<=(nullptr_t, const unique_ptr<_Tp, _Dp>& __x)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX23_CONSTEXPR bool
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:auto
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator<=>(const duration<_Rep1, _Period1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:requires three_way_comparable<common_type_t<_Rep1,_Rep2>> auto
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator<=>(const time_point<_Clock, _Dur1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:auto
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator<=>(const sub_match<_BiIter>& __lhs,$/;"	f	namespace:std	typeref:typename:auto
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator<=>(const sub_match<_Bi_iter>& __lhs,$/;"	f	namespace:std	typeref:typename:auto
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator<=>(const shared_ptr<_Tp>& __a, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:strong_ordering
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator<=>(const shared_ptr<_Tp>& __a,$/;"	f	namespace:std	typeref:typename:strong_ordering
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator<=>(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:strong_ordering
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator<=>(const __shared_ptr<_Tp, _Lp>& __a,$/;"	f	namespace:std	typeref:typename:strong_ordering
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator<=>(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)$/;"	f	namespace:std	typeref:typename:strong_ordering
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator<=>(const _Self& __x, const _Self& __y) noexcept$/;"	f	namespace:std	typeref:typename:strong_ordering
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^    operator<=>(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)$/;"	f	namespace:std	typeref:typename:__detail::__synth3way_t<_Tp>
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	operator<=>(const counted_iterator& __x,$/;"	f	namespace:std	typeref:typename:strong_ordering
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator<=>(const _It2& __y) const$/;"	f	class:std::basic_const_iterator	typeref:typename:auto
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<=>(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:std::__detail::__synth3way_t<_Iterator>
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<=>(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:std::__detail::__synth3way_t<_IteratorR,_IteratorL>
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<=>(const basic_const_iterator& __y) const$/;"	f	class:std::basic_const_iterator	typeref:typename:auto
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<=>(const move_iterator<_Iterator>& __x,$/;"	f	namespace:std	typeref:typename:compare_three_way_result_t<_Iterator>
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<=>(const move_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:compare_three_way_result_t<_IteratorL,_IteratorR>
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<=>(const reverse_iterator<_Iterator>& __x,$/;"	f	namespace:std	typeref:typename:compare_three_way_result_t<_Iterator,_Iterator>
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator<=>(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:compare_three_way_result_t<_IteratorL,_IteratorR>
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^    operator<=>(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std	typeref:typename:__detail::__synth3way_t<pair<const _Key,_Tp>>
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    operator<=>(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	namespace:std	typeref:typename:common_comparison_category_t<__detail::__synth3way_t<_T1>,__detail::__synth3way_t<_T2>>
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^    operator<=>(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	namespace:std	typeref:typename:compare_three_way_result_t<_Seq>
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator<=>(const _Rb_tree& __x, const _Rb_tree& __y)$/;"	f	namespace:std	typeref:typename:auto
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^    operator<=>(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR __detail::__synth3way_t<_Tp>
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator<=>(const unique_ptr<_Tp, _Dp>& __x, nullptr_t)$/;"	f	namespace:std	typeref:typename:requires three_way_comparable<typename unique_ptr<_Tp,_Dp>::pointer> _GLIBCXX23_CONSTEXPR compare_three_way_result_t<typename unique_ptr<_Tp,_Dp>::pointer>
operator <=>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator<=>(const unique_ptr<_Tp, _Dp>& __x,$/;"	f	namespace:std
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^        operator=(auto_ptr<_Tp1>& __a) throw()$/;"	f	class:std::auto_ptr	typeref:typename:auto_ptr &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^      operator=(auto_ptr& __a) throw()$/;"	f	class:std::auto_ptr	typeref:typename:auto_ptr &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^      operator=(auto_ptr_ref<element_type> __ref) throw()$/;"	f	class:std::auto_ptr	typeref:typename:auto_ptr &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocated_ptr.h	/^      operator=(std::nullptr_t) noexcept$/;"	f	struct:std::__allocated_ptr	typeref:typename:__allocated_ptr &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator=(_Fp __t) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:_Fp
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator=(_Fp __t) noexcept$/;"	f	struct:std::__atomic_float	typeref:typename:_Fp
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator=(_Fp __t) volatile noexcept$/;"	f	struct:std::__atomic_float	typeref:typename:_Fp
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator=(_Tp __t) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:_Tp
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator=(_Tp* __t) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:_Tp *
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator=(__int_type __i) noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator=(__int_type __i) volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator=(__pointer_type __p) noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__pointer_type
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator=(__pointer_type __p) volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__pointer_type
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^       operator=(const _Tp& __svt)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR _If_sv<_Tp,basic_string &>
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      operator=(_CharT __c)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      operator=(basic_string&& __str)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      operator=(const _CharT* __s)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      operator=(const basic_string& __str)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      operator=(initializer_list<_CharT> __l)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^      operator=(exception_ptr&& __o) noexcept$/;"	f	class:std::__exception_ptr::exception_ptr	typeref:typename:exception_ptr &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^    exception_ptr::operator=(const exception_ptr& __other) _GLIBCXX_USE_NOEXCEPT$/;"	f	class:std::__exception_ptr::exception_ptr	typeref:typename:_GLIBCXX_EH_PTR_USED exception_ptr &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^	operator=(_NodeAlloc&& __alloc) noexcept$/;"	f	union:std::_Node_handle_common::_Optional_alloc	typeref:typename:void
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      operator=(_Node_handle_common&& __nh) noexcept$/;"	f	class:std::_Node_handle_common	typeref:typename:_Node_handle_common &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	operator=(const basic_string<_Ch_type, _Ch_traits, _Alloc>& __s)$/;"	f	class:std::basic_regex	typeref:typename:basic_regex &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      operator=(const _Ch_type* __p)$/;"	f	class:std::basic_regex	typeref:typename:basic_regex &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      operator=(initializer_list<_Ch_type> __l)$/;"	f	class:std::basic_regex	typeref:typename:basic_regex &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	operator=(auto_ptr<_Yp>&& __r)$/;"	f	class:std::shared_ptr	typeref:typename:_Assignable<auto_ptr<_Yp>>
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	operator=(const shared_ptr<_Yp>& __r) noexcept$/;"	f	class:std::shared_ptr	typeref:typename:_Assignable<const shared_ptr<_Yp> &>
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	operator=(const shared_ptr<_Yp>& __r) noexcept$/;"	f	class:std::weak_ptr	typeref:typename:_Assignable<const shared_ptr<_Yp> &>
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	operator=(const weak_ptr<_Yp>& __r) noexcept$/;"	f	class:std::weak_ptr	typeref:typename:_Assignable<const weak_ptr<_Yp> &>
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	operator=(shared_ptr<_Yp>&& __r) noexcept$/;"	f	class:std::shared_ptr	typeref:typename:_Assignable<shared_ptr<_Yp>>
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	operator=(unique_ptr<_Yp, _Del>&& __r)$/;"	f	class:std::shared_ptr	typeref:typename:_Assignable<unique_ptr<_Yp,_Del>>
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	operator=(weak_ptr<_Yp>&& __r) noexcept$/;"	f	class:std::weak_ptr	typeref:typename:_Assignable<weak_ptr<_Yp>>
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      operator=(const enable_shared_from_this&) noexcept$/;"	f	class:std::enable_shared_from_this	typeref:typename:enable_shared_from_this &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      operator=(shared_ptr&& __r) noexcept$/;"	f	class:std::shared_ptr	typeref:typename:shared_ptr &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      operator=(nullptr_t) noexcept$/;"	f	class:std::atomic	typeref:typename:void
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      operator=(shared_ptr<_Tp> __desired) noexcept$/;"	f	class:std::atomic	typeref:typename:void
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      operator=(weak_ptr<_Tp> __desired) noexcept$/;"	f	class:std::atomic	typeref:typename:void
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	operator=(__shared_ptr<_Yp, _Lp>&& __r) noexcept$/;"	f	class:std::__shared_ptr	typeref:typename:_Assignable<_Yp>
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	operator=(__weak_ptr<_Yp, _Lp>&& __r) noexcept$/;"	f	class:std::__weak_ptr	typeref:typename:_Assignable<_Yp>
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	operator=(auto_ptr<_Yp>&& __r)$/;"	f	class:std::__shared_ptr	typeref:typename:_Assignable<_Yp>
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	operator=(const __shared_ptr<_Yp, _Lp>& __r) noexcept$/;"	f	class:std::__shared_ptr	typeref:typename:_Assignable<_Yp>
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	operator=(const __shared_ptr<_Yp, _Lp>& __r) noexcept$/;"	f	class:std::__weak_ptr	typeref:typename:_Assignable<_Yp>
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	operator=(const __weak_ptr<_Yp, _Lp>& __r) noexcept$/;"	f	class:std::__weak_ptr	typeref:typename:_Assignable<_Yp>
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	operator=(unique_ptr<_Yp, _Del>&& __r)$/;"	f	class:std::__shared_ptr	typeref:typename:_UniqAssignable<_Yp,_Del>
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      operator=(__shared_ptr&& __r) noexcept$/;"	f	class:std::__shared_ptr	typeref:typename:__shared_ptr &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      operator=(__weak_count&& __r) noexcept$/;"	f	class:std::__weak_count	typeref:typename:__weak_count &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      operator=(__weak_ptr&& __r) noexcept$/;"	f	class:std::__weak_ptr	typeref:typename:__weak_ptr &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      operator=(const __enable_shared_from_this&) noexcept$/;"	f	class:std::__enable_shared_from_this	typeref:typename:__enable_shared_from_this &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      operator=(const __shared_count& __r) noexcept$/;"	f	class:std::__shared_count	typeref:typename:__shared_count &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      operator=(const __shared_count<_Lp>& __r) noexcept$/;"	f	class:std::__weak_count	typeref:typename:__weak_count &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      operator=(const __weak_count& __r) noexcept$/;"	f	class:std::__weak_count	typeref:typename:__weak_count &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	operator=(_Functor&& __f)$/;"	f	class:std::function	typeref:typename:_Requires<_Callable<_Functor>,function &>
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	operator=(reference_wrapper<_Functor> __f) noexcept$/;"	f	class:std::function	typeref:typename:function &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      operator=(const function& __x)$/;"	f	class:std::function	typeref:typename:function &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      operator=(function&& __x) noexcept$/;"	f	class:std::function	typeref:typename:function &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      operator=(nullptr_t) noexcept$/;"	f	class:std::function	typeref:typename:function &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    thread& operator=(thread&& __t) noexcept$/;"	f	class:std::thread	typeref:typename:thread &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      operator=(const vector& __x)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR vector &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      operator=(initializer_list<bool> __l)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR vector &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      operator=(vector&& __x) noexcept(_Bit_alloc_traits::_S_nothrow_move())$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR vector &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator=(bool __x) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Bit_reference	typeref:typename:_GLIBCXX20_CONSTEXPR _Bit_reference &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator=(bool __x) const noexcept$/;"	f	struct:std::_Bit_reference	typeref:typename:const _Bit_reference &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator=(const _Bit_reference& __x) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Bit_reference	typeref:typename:_GLIBCXX20_CONSTEXPR _Bit_reference &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator=(deque&& __x) noexcept(_Alloc_traits::_S_always_equal())$/;"	f	class:std::deque	typeref:typename:deque &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator=(initializer_list<value_type> __l)$/;"	f	class:std::deque	typeref:typename:deque &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	move_iterator& operator=(const move_iterator<_Iter>& __i)$/;"	f	class:std::move_iterator	typeref:typename:requires __convertible<_Iter> && assignable_from<_Iterator &,const _Iter &> _GLIBCXX17_CONSTEXPR move_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	operator=(const counted_iterator<_It2>& __x)$/;"	f	class:std::counted_iterator	typeref:typename:requires assignable_from<_It &,const _It2 &> counted_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	operator=(const move_sentinel<_S2>& __s)$/;"	f	class:std::move_sentinel	typeref:typename:requires assignable_from<_Sent &,const _S2 &> move_sentinel &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	operator=(const reverse_iterator<_Iter>& __x)$/;"	f	class:std::reverse_iterator	typeref:typename:requires __convertible<_Iter> && assignable_from<_Iterator &,const _Iter &> _GLIBCXX17_CONSTEXPR reverse_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator=(const common_iterator<_It2, _Sent2>& __x)$/;"	f	class:std::common_iterator
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator=(const typename _Container::value_type& __value)$/;"	f	class:std::back_insert_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR back_insert_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator=(const typename _Container::value_type& __value)$/;"	f	class:std::front_insert_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR front_insert_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator=(const typename _Container::value_type& __value)$/;"	f	class:std::insert_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR insert_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator=(typename _Container::const_reference __value)$/;"	f	class:std::back_insert_iterator	typeref:typename:back_insert_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator=(typename _Container::const_reference __value)$/;"	f	class:std::front_insert_iterator	typeref:typename:front_insert_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator=(typename _Container::const_reference __value)$/;"	f	class:std::insert_iterator	typeref:typename:insert_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator=(typename _Container::value_type&& __value)$/;"	f	class:std::back_insert_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR back_insert_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator=(typename _Container::value_type&& __value)$/;"	f	class:std::front_insert_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR front_insert_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator=(typename _Container::value_type&& __value)$/;"	f	class:std::insert_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR insert_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator=(common_iterator&& __x)$/;"	f	class:std::common_iterator	typeref:typename:common_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator=(const common_iterator& __x)$/;"	f	class:std::common_iterator	typeref:typename:common_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      operator=(const map& __x)$/;"	f	class:std::map	typeref:typename:map &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      operator=(initializer_list<value_type> __l)$/;"	f	class:std::map	typeref:typename:map &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	operator=(const pair<_U1, _U2>& __p) const$/;"	f	struct:std::pair	typeref:typename:const pair &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	operator=(const pair<_U1, _U2>& __p)$/;"	f	struct:std::pair	typeref:typename:pair &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	operator=(pair<_U1, _U2>&& __p) const$/;"	f	struct:std::pair	typeref:typename:const pair &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	operator=(pair<_U1, _U2>&& __p)$/;"	f	struct:std::pair	typeref:typename:pair &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      operator=(const pair& __p) const$/;"	f	struct:std::pair	typeref:typename:const pair &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      operator=(const pair& __p)$/;"	f	struct:std::pair	typeref:typename:pair &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      operator=(pair&& __p) const$/;"	f	struct:std::pair	typeref:typename:const pair &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      operator=(pair&& __p)$/;"	f	struct:std::pair	typeref:typename:pair &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_raw_storage_iter.h	/^      operator=(_Tp&& __element)$/;"	f	class:std::raw_storage_iterator	typeref:typename:raw_storage_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_raw_storage_iter.h	/^      operator=(const _Tp& __element)$/;"	f	class:std::raw_storage_iterator	typeref:typename:raw_storage_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    operator=(_Rb_tree&& __x)$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc> &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    operator=(const _Rb_tree& __x)$/;"	f	class:std::_Rb_tree	typeref:typename:_Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc> &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      operator=(initializer_list<value_type> __l)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR vector &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR vector &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      operator=(_CharT __c)$/;"	f	class:std::ostreambuf_iterator	typeref:typename:ostreambuf_iterator &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	operator=(unique_ptr<_Up, _Ep>&& __u) noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR typename enable_if<__and_<__safe_conversion_up<_Up,_Ep>,is_assignable<deleter_type &,_Ep &&>>::value,unique_ptr &>::type
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      __uniq_ptr_impl& operator=(__uniq_ptr_impl&& __u) noexcept$/;"	f	class:std::__uniq_ptr_impl	typeref:typename:_GLIBCXX23_CONSTEXPR __uniq_ptr_impl &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      operator=(nullptr_t) noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR unique_ptr &
operator =	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    struct _Sink { void _GLIBCXX20_CONSTEXPR operator=(const void*) { } } _M_a;$/;"	f	struct:std::__uses_alloc0::_Sink	typeref:typename:void _GLIBCXX20_CONSTEXPR
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^    operator==(const allocator<_T1>&, const allocator<_T2>&)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator==(const _CharT* __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator==(const duration<_Rep1, _Period1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator==(const time_point<_Clock, _Dur1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^      operator==(const exception_ptr& __x, const exception_ptr& __y)$/;"	f	namespace:std::__exception_ptr	typeref:typename:_GLIBCXX_EH_PTR_USED bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      operator==(const polymorphic_allocator& __a,$/;"	f	namespace:std::pmr	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^    operator==(const polymorphic_allocator<_Tp1>& __a,$/;"	f	namespace:std::pmr	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^  operator==(const memory_resource& __a, const memory_resource& __b) noexcept$/;"	f	namespace:std::pmr	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^	operator==(const __new_allocator&, const __new_allocator<_Up>&)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^    operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  operator==(_RegexMask __other) const$/;"	f	struct:std::regex_traits::_RegexMask	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      bool operator==(default_sentinel_t) const noexcept$/;"	f	class:std::regex_iterator	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      bool operator==(default_sentinel_t) const noexcept$/;"	f	class:std::regex_token_iterator	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator==(const __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator==(const match_results<_Bi_iter, _Alloc>& __m1,$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator==(const sub_match<_Bi_iter>& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator==(typename iterator_traits<_Bi_iter>::value_type const& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator==(typename iterator_traits<_Bi_iter>::value_type const* __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator==(const shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator==(const shared_ptr<_Tp>& __a, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator==(nullptr_t, const shared_ptr<_Tp>& __a) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^		bool operator==(const _Iter& __i) const$/;"	f	struct:std::_Sp_counted_array_base::_M_init::_Iter	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      operator==(const __shared_count& __a, const __shared_count& __b) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      operator==(const __weak_count& __a, const __weak_count& __b) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator==(const __shared_ptr<_Tp1, _Lp>& __a,$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    operator==(const function<_Res(_Args...)>& __f, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    operator==(nullptr_t, const function<_Res(_Args...)>& __f) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^  operator==(thread::id __x, thread::id __y) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator==(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator==(const _Bit_reference& __x) const$/;"	f	struct:std::_Bit_reference	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	operator==(const _Self& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^    operator==(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	operator==(const counted_iterator& __x,$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	operator==(const move_iterator& __x, const move_sentinel<_Sent>& __y)$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator== [[nodiscard]] (const common_iterator& __x,$/;"	f	namespace:std	typeref:typename:requires sentinel_for<_Sent,_It2> && equality_comparable_with<_It,_It2> bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator== [[nodiscard]] (const common_iterator& __x,$/;"	f	namespace:std	typeref:typename:requires sentinel_for<_Sent,_It2> bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator==(const _Sent& __s) const$/;"	f	class:std::basic_const_iterator	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator==(const counted_iterator& __x, default_sentinel_t)$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator==(const move_iterator<_Iterator>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator==(const move_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator==(const reverse_iterator<_Iterator>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator==(const reverse_iterator<_Iterator>& __x,$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator==(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator==(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^    operator==(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^    operator==(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator==(const _Rb_tree& __x, const _Rb_tree& __y)$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      operator==(const istreambuf_iterator& __i, default_sentinel_t __s)$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^    operator==(const istreambuf_iterator<_CharT, _Traits>& __a,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	operator==(const param_type& __p1, const param_type& __p2)$/;"	f	class:std::uniform_int_distribution	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      operator==(const uniform_int_distribution& __d1,$/;"	f	namespace:std	typeref:typename:bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator==(const unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX23_CONSTEXPR bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator==(const unique_ptr<_Tp, _Dp>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX23_CONSTEXPR bool
operator ==	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator==(nullptr_t, const unique_ptr<_Tp, _Dp>& __x) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator>(const _CharT* __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator>(const duration<_Rep1, _Period1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator>(const time_point<_Clock, _Dur1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator>(const __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator>(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)$/;"	f	namespace:std	typeref:typename:bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator>(const sub_match<_Bi_iter>& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator>(typename iterator_traits<_Bi_iter>::value_type const& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator>(typename iterator_traits<_Bi_iter>::value_type const* __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator>(const shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator>(const shared_ptr<_Tp>& __a, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator>(nullptr_t, const shared_ptr<_Tp>& __a) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator>(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator>(const __shared_ptr<_Tp1, _Lp>& __a,$/;"	f	namespace:std	typeref:typename:bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator>(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator>(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	operator>(const _Self& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator>(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^    operator>(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator>(const _It2& __x, const basic_const_iterator& __y)$/;"	f	namespace:std	typeref:typename:bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator>(const _It2& __y) const$/;"	f	class:std::basic_const_iterator	typeref:typename:bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator>(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_NODISCARD bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator>(const basic_const_iterator& __y) const$/;"	f	class:std::basic_const_iterator	typeref:typename:bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator>(const move_iterator<_Iterator>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator>(const move_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator>(const reverse_iterator<_Iterator>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator>(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator>(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^    operator>(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std	typeref:typename:bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    operator>(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^    operator>(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^    operator>(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	namespace:std	typeref:typename:bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator>(const unique_ptr<_Tp, _Dp>& __x, nullptr_t)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX23_CONSTEXPR bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator>(const unique_ptr<_Tp, _Dp>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX23_CONSTEXPR bool
operator >	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator>(nullptr_t, const unique_ptr<_Tp, _Dp>& __x)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX23_CONSTEXPR bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator>=(const _CharT* __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator>=(const duration<_Rep1, _Period1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      operator>=(const time_point<_Clock, _Dur1>& __lhs,$/;"	f	namespace:std::chrono	typeref:typename:bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator>=(const __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator>=(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)$/;"	f	namespace:std	typeref:typename:bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator>=(const sub_match<_Bi_iter>& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator>=(typename iterator_traits<_Bi_iter>::value_type const& __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    operator>=(typename iterator_traits<_Bi_iter>::value_type const* __lhs,$/;"	f	namespace:std	typeref:typename:bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator>=(const shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator>=(const shared_ptr<_Tp>& __a, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    operator>=(nullptr_t, const shared_ptr<_Tp>& __a) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator>=(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator>=(const __shared_ptr<_Tp1, _Lp>& __a,$/;"	f	namespace:std	typeref:typename:bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    operator>=(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept$/;"	f	namespace:std	typeref:typename:bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator>=(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^	operator>=(const _Self& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator>=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^    operator>=(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator>=(const _It2& __x, const basic_const_iterator& __y)$/;"	f	namespace:std	typeref:typename:bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator>=(const _It2& __y) const$/;"	f	class:std::basic_const_iterator	typeref:typename:bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f	namespace:__gnu_cxx	typeref:typename:_GLIBCXX_NODISCARD bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator>=(const basic_const_iterator& __y) const$/;"	f	class:std::basic_const_iterator	typeref:typename:bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator>=(const move_iterator<_Iterator>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator>=(const move_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator>=(const reverse_iterator<_Iterator>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator>=(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator>=(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std	typeref:typename:bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^    operator>=(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std	typeref:typename:bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    operator>=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^    operator>=(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^    operator>=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	namespace:std	typeref:typename:bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator>=(const unique_ptr<_Tp, _Dp>& __x, nullptr_t)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX23_CONSTEXPR bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator>=(const unique_ptr<_Tp, _Dp>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX23_CONSTEXPR bool
operator >=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    operator>=(nullptr_t, const unique_ptr<_Tp, _Dp>& __x)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD bool
operator >>	include/sak/stream/deserializable.hpp	/^inline istream& operator>>( istream& is, deserializable& object ){ return object.stream( is ); }/;"	f	namespace:sak::stream	typeref:typename:istream &
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      operator[](size_type __pos)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reference
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      operator[](size_type __sub) const$/;"	f	class:std::match_results	typeref:typename:const_reference
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      operator[](ptrdiff_t __i) const noexcept$/;"	f	class:std::__shared_ptr_access	typeref:typename:element_type &
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      operator[](size_type __n) const$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reference
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      operator[](size_type __n)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reference
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator[](difference_type __i) const$/;"	f	struct:std::_Bit_const_iterator	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reference
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator[](difference_type __i) const$/;"	f	struct:std::_Bit_iterator	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reference
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator[](difference_type __n) const _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Deque_iterator	typeref:typename:_GLIBCXX_NODISCARD reference
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator[](size_type __n) _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD reference
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      operator[](size_type __n) const _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD const_reference
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator[](difference_type __n) const _GLIBCXX_NOEXCEPT$/;"	f	class:__gnu_cxx::__normal_iterator	typeref:typename:_GLIBCXX20_CONSTEXPR reference
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator[](difference_type __n) const$/;"	f	class:std::move_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR reference
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator[](difference_type __n) const$/;"	f	class:std::reverse_iterator	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR reference
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      operator[](iter_difference_t<_It> __n) const$/;"	f	class:std::counted_iterator	typeref:typename:decltype(auto)
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    operator[](difference_type __n) const$/;"	f	class:std::basic_const_iterator	typeref:typename:__reference
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      operator[](const key_type& __k)$/;"	f	class:std::map	typeref:typename:mapped_type &
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      operator[](key_type&& __k)$/;"	f	class:std::map	typeref:typename:mapped_type &
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      operator[](size_type __n) _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reference
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      operator[](size_type __n) const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reference
operator []	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      operator[](size_t __i) const$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR typename std::add_lvalue_reference<element_type>::type
operator []	include/sak/stream/serial_data.hpp	/^	inline const serial_data_pair operator[]( const string& name )$/;"	f	class:sak::stream::serial_data	typeref:typename:const serial_data_pair
operator []	include/sak/stream/serial_data.hpp	/^	inline const serial_data_pair operator[]( const unsigned int& index )$/;"	f	class:sak::stream::serial_data	typeref:typename:const serial_data_pair
operator [] 	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reference
operator ^	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR _Ios_Fmtflags
operator ^	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator^(_Ios_Iostate __a, _Ios_Iostate __b)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR _Ios_Iostate
operator ^	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator^(_Ios_Openmode __a, _Ios_Openmode __b)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR _Ios_Openmode
operator ^	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  operator^(_RegexMask __other) const$/;"	f	struct:std::regex_traits::_RegexMask	typeref:typename:_RegexMask
operator ^	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  operator^(match_flag_type __a, match_flag_type __b)$/;"	f	namespace:std::regex_constants	typeref:typename:match_flag_type
operator ^	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  operator^(syntax_option_type __a, syntax_option_type __b)$/;"	f	namespace:std::regex_constants	typeref:typename:syntax_option_type
operator ^=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator^=(__int_type __i) noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator ^=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator^=(__int_type __i) volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator ^=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator^=(value_type __i) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:value_type
operator ^=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator^=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)$/;"	f	namespace:std	typeref:typename:const _Ios_Fmtflags &
operator ^=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator^=(_Ios_Iostate& __a, _Ios_Iostate __b)$/;"	f	namespace:std	typeref:typename:const _Ios_Iostate &
operator ^=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator^=(_Ios_Openmode& __a, _Ios_Openmode __b)$/;"	f	namespace:std	typeref:typename:const _Ios_Openmode &
operator ^=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  operator^=(_RegexMask __other)$/;"	f	struct:std::regex_traits::_RegexMask	typeref:typename:_RegexMask &
operator ^=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  operator^=(match_flag_type& __a, match_flag_type __b)$/;"	f	namespace:std::regex_constants	typeref:typename:_GLIBCXX14_CONSTEXPR match_flag_type &
operator ^=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  operator^=(syntax_option_type& __a, syntax_option_type __b)$/;"	f	namespace:std::regex_constants	typeref:typename:_GLIBCXX14_CONSTEXPR syntax_option_type &
operator _Fp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator _Fp() const noexcept { return this->load(); }$/;"	f	struct:std::__atomic_float
operator _Fp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator _Fp() const noexcept { return this->load(); }$/;"	f	struct:std::__atomic_ref
operator _Fp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator _Fp() const volatile noexcept { return this->load(); }$/;"	f	struct:std::__atomic_float
operator _T1&	include/sak/pattern/singleton_ptr.hpp	/^	inline operator _T1& ( ) { return get( ); };$/;"	f	class:sak::pattern::singleton_ptr
operator _Tp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator _Tp() const noexcept { return this->load(); }$/;"	f	struct:std::__atomic_ref
operator _Tp&	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^      operator _Tp&() const noexcept$/;"	f	class:std::reference_wrapper	typeref:typename:_GLIBCXX20_CONSTEXPR
operator _Tp*	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator _Tp*() const noexcept { return this->load(); }$/;"	f	struct:std::__atomic_ref
operator __int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator __int_type() const noexcept$/;"	f	struct:std::__atomic_base
operator __int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator __int_type() const volatile noexcept$/;"	f	struct:std::__atomic_base
operator __pointer_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator __pointer_type() const noexcept$/;"	f	struct:std::__atomic_base
operator __pointer_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator __pointer_type() const volatile noexcept$/;"	f	struct:std::__atomic_base
operator __sv_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      operator __sv_type() const noexcept$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
operator auto_ptr<_Tp1>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^        operator auto_ptr<_Tp1>() throw()$/;"	f	class:std::auto_ptr
operator auto_ptr_ref<_Tp1>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^        operator auto_ptr_ref<_Tp1>() throw()$/;"	f	class:std::auto_ptr
operator bool	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      explicit operator bool() const$/;"	f	class:std::basic_ios
operator bool	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^      explicit operator bool() const noexcept$/;"	f	class:std::__exception_ptr::exception_ptr
operator bool	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      explicit operator bool() const noexcept { return _M_ptr != nullptr; }$/;"	f	class:std::_Node_handle_common
operator bool	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^	explicit operator bool() const noexcept$/;"	f	struct:std::__detail::_Compiler::_BracketState
operator bool	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      explicit operator bool() const noexcept$/;"	f	class:std::__shared_ptr
operator bool	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      explicit operator bool() const noexcept$/;"	f	class:std::function
operator bool	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    operator bool() const _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Bit_reference	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
operator bool	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      explicit operator bool() const noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR
operator const char	include/sak/string.hpp	/^	inline operator const char ( ) const { return value.at( 0 ); }$/;"	f	class:sak::from_string
operator const string&	include/sak/string.hpp	/^	inline operator const string& ( ) const { return value; }$/;"	f	class:sak::from_string
operator shared_ptr<_Tp>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      operator shared_ptr<_Tp>() const noexcept$/;"	f	class:std::atomic
operator streamoff	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^      operator streamoff() const { return _M_off; }$/;"	f	class:std::fpos
operator string_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      operator string_type() const$/;"	f	class:std::sub_match
operator weak_ptr<_Tp>	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      operator weak_ptr<_Tp>() const noexcept$/;"	f	class:std::atomic
operator |	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^  operator|(memory_order __m, __memory_order_modifier __mod)$/;"	f	namespace:std	typeref:typename:memory_order
operator |	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR _Ios_Fmtflags
operator |	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator|(_Ios_Iostate __a, _Ios_Iostate __b)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR _Ios_Iostate
operator |	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator|(_Ios_Openmode __a, _Ios_Openmode __b)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR _Ios_Openmode
operator |	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  operator|(_RegexMask __other) const$/;"	f	struct:std::regex_traits::_RegexMask	typeref:typename:_RegexMask
operator |	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  operator|(match_flag_type __a, match_flag_type __b)$/;"	f	namespace:std::regex_constants	typeref:typename:match_flag_type
operator |	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  operator|(syntax_option_type __a, syntax_option_type __b)$/;"	f	namespace:std::regex_constants	typeref:typename:syntax_option_type
operator |=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator|=(__int_type __i) noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator |=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator|=(__int_type __i) volatile noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:__int_type
operator |=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      operator|=(value_type __i) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:value_type
operator |=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator|=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)$/;"	f	namespace:std	typeref:typename:const _Ios_Fmtflags &
operator |=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator|=(_Ios_Iostate& __a, _Ios_Iostate __b)$/;"	f	namespace:std	typeref:typename:const _Ios_Iostate &
operator |=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator|=(_Ios_Openmode& __a, _Ios_Openmode __b)$/;"	f	namespace:std	typeref:typename:const _Ios_Openmode &
operator |=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  operator|=(_RegexMask __other)$/;"	f	struct:std::regex_traits::_RegexMask	typeref:typename:_RegexMask &
operator |=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  operator|=(match_flag_type& __a, match_flag_type __b)$/;"	f	namespace:std::regex_constants	typeref:typename:_GLIBCXX14_CONSTEXPR match_flag_type &
operator |=	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  operator|=(syntax_option_type& __a, syntax_option_type __b)$/;"	f	namespace:std::regex_constants	typeref:typename:_GLIBCXX14_CONSTEXPR syntax_option_type &
operator ~	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator~(_Ios_Fmtflags __a)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR _Ios_Fmtflags
operator ~	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator~(_Ios_Iostate __a)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR _Ios_Iostate
operator ~	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  operator~(_Ios_Openmode __a)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_CONSTEXPR _Ios_Openmode
operator ~	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	  operator~() const$/;"	f	struct:std::regex_traits::_RegexMask	typeref:typename:_RegexMask
operator ~	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  operator~(match_flag_type __a)$/;"	f	namespace:std::regex_constants	typeref:typename:match_flag_type
operator ~	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  operator~(syntax_option_type __a)$/;"	f	namespace:std::regex_constants	typeref:typename:syntax_option_type
optimize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      static constexpr flag_type optimize = regex_constants::optimize;$/;"	m	class:std::basic_regex	typeref:typename:flag_type
optimize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    basic_regex<_Ch, _Tr>::optimize;$/;"	m	class:std::basic_regex<_Ch, _Tr>	typeref:typename:regex_constants::syntax_option_type
optimize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  _GLIBCXX17_INLINE constexpr syntax_option_type optimize = _S_optimize;$/;"	v	namespace:std::regex_constants	typeref:typename:_GLIBCXX17_INLINE syntax_option_type
ostream_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef basic_ostream<_CharT, _Traits>   ostream_type;$/;"	t	class:std::ostreambuf_iterator	typeref:typename:basic_ostream<_CharT,_Traits>
ostreambuf_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      ostreambuf_iterator() noexcept$/;"	f	class:std::ostreambuf_iterator
ostreambuf_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      ostreambuf_iterator(ostream_type& __s) _GLIBCXX_USE_NOEXCEPT$/;"	f	class:std::ostreambuf_iterator
ostreambuf_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      ostreambuf_iterator(streambuf_type* __s) _GLIBCXX_USE_NOEXCEPT$/;"	f	class:std::ostreambuf_iterator
ostreambuf_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^    class ostreambuf_iterator$/;"	c	namespace:std
other	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^	{ typedef allocator<_Tp1> other; };$/;"	t	struct:std::allocator::rebind	typeref:typename:allocator<_Tp1>
other	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^	{ typedef __new_allocator<_Tp1> other; };$/;"	t	struct:std::__new_allocator::rebind	typeref:typename:__new_allocator<_Tp1>
other	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^      { typedef typename _Alloc::template rebind<_Tp>::other other; };$/;"	t	struct:__gnu_cxx::__alloc_traits::rebind	typeref:typename:_Alloc::template rebind<_Tp>::other
other	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^      { typedef typename _Base_type::template rebind_alloc<_Tp> other; };$/;"	t	struct:__gnu_cxx::__alloc_traits::rebind	typeref:typename:_Base_type::template rebind_alloc<_Tp>
out	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      out(state_type& __state, const intern_type* __from,$/;"	f	class:std::__codecvt_abstract_base	typeref:typename:result
out	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const openmode out =		_S_out;$/;"	m	class:std::ios_base	typeref:typename:const openmode
output_iterator_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^  struct output_iterator_tag { };$/;"	s	namespace:std
output_texts	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@debug@test_handler@netbeans_cpp_simple_test.c++	/^netbeans_cpp_simple_test::output_texts::output_texts($/;"	f	class:netbeans_cpp_simple_test::output_texts
output_texts	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^	class output_texts$/;"	c	class:sak::debug::test_handler::netbeans_cpp_simple_test
output_texts	source/sak/debug/test_handler/netbeans_cpp_simple_test.c++	/^netbeans_cpp_simple_test::output_texts::output_texts($/;"	f	class:netbeans_cpp_simple_test::output_texts
overflow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      overflow(typename _Wide_streambuf::int_type __out)$/;"	f	class:std::wbuffer_convert	typeref:typename:_Wide_streambuf::int_type
owner_before	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	owner_before(__shared_ptr<_Tp1, _Lp> const& __rhs) const noexcept$/;"	f	class:std::__shared_ptr	typeref:typename:bool
owner_before	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	owner_before(__weak_ptr<_Tp1, _Lp> const& __rhs) const noexcept$/;"	f	class:std::__shared_ptr	typeref:typename:bool
owner_before	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	owner_before(const __shared_ptr<_Tp1, _Lp>& __rhs) const noexcept$/;"	f	class:std::__weak_ptr	typeref:typename:bool
owner_before	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	owner_before(const __weak_ptr<_Tp1, _Lp>& __rhs) const noexcept$/;"	f	class:std::__weak_ptr	typeref:typename:bool
owner_dead	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      owner_dead = 				EOWNERDEAD,$/;"	e	enum:std::errc
owner_less	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    struct owner_less<shared_ptr<_Tp>>$/;"	s	namespace:std
owner_less	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    struct owner_less<void> : _Sp_owner_less<void, void>$/;"	s	namespace:std
owner_less	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    struct owner_less<weak_ptr<_Tp>>$/;"	s	namespace:std
owner_less	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct owner_less<__shared_ptr<_Tp, _Lp>>$/;"	s	namespace:std
owner_less	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    struct owner_less<__weak_ptr<_Tp, _Lp>>$/;"	s	namespace:std
p_cs_precedes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char p_cs_precedes;$/;"	m	struct:lconv	typeref:typename:char
p_sep_by_space	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char p_sep_by_space;$/;"	m	struct:lconv	typeref:typename:char
p_sign_posn	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char p_sign_posn;$/;"	m	struct:lconv	typeref:typename:char
pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	pair(_U1&& __x, _U2&& __y)$/;"	f	struct:std::pair	typeref:typename:requires (_S_constructible<_U1,_U2> ())&& (!_S_dangles<_U1,_U2> ())(!_S_convertible<_U1,_U2> ())
pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	pair(const pair<_U1, _U2>& __p)$/;"	f	struct:std::pair
pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	pair(const pair<_U1, _U2>& __p)$/;"	f	struct:std::pair	typeref:typename:requires (_S_constructible<const _U1 &,const _U2 &> ())&& (!_S_dangles<_U1,_U2> ())(!_S_convertible<const _U1 &,const _U2 &> ())
pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	pair(const pair<_U1, _U2>&& __p)$/;"	f	struct:std::pair	typeref:typename:requires (_S_constructible<const _U1,const _U2> ())&& (!_S_dangles<const _U1,const _U2> ())(!_S_convertible<const _U1,const _U2> ())
pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	pair(pair<_U1, _U2>& __p)$/;"	f	struct:std::pair	typeref:typename:requires (_S_constructible<_U1 &,_U2 &> ())&& (!_S_dangles<_U1 &,_U2 &> ())(!_S_convertible<_U1 &,_U2 &> ())
pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^	pair(pair<_U1, _U2>&& __p)$/;"	f	struct:std::pair	typeref:typename:requires (_S_constructible<_U1,_U2> ())&& (!_S_dangles<_U1,_U2> ())(!_S_convertible<_U1,_U2> ())
pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      pair() : first(), second() { }$/;"	f	struct:std::pair
pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      pair()$/;"	f	struct:std::pair
pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      pair(const _T1& __a, const _T2& __b)$/;"	f	struct:std::pair
pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      pair(const _T1& __x, const _T2& __y)$/;"	f	struct:std::pair
pair	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    struct pair$/;"	s	namespace:std
pair_vector	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^struct pair_vector$/;"	s	file:
pair_vector	tests/sak/parser/test_serial_data.c++	/^struct pair_vector$/;"	s	file:
par	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^_GLIBCXX17_INLINE constexpr parallel_policy par{};$/;"	v	namespace:__pstl::execution::v1	typeref:typename:_GLIBCXX17_INLINE parallel_policy
par_unseq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^_GLIBCXX17_INLINE constexpr parallel_unsequenced_policy par_unseq{};$/;"	v	namespace:__pstl::execution::v1	typeref:typename:_GLIBCXX17_INLINE parallel_unsequenced_policy
parallel_policy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^class parallel_policy$/;"	c	namespace:__pstl::execution::v1
parallel_task	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@thread_test.c++	/^void parallel_task( )$/;"	f	typeref:typename:void
parallel_task	tests/adhoc/thread_test.c++	/^void parallel_task( )$/;"	f	typeref:typename:void
parallel_unsequenced_policy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^class parallel_unsequenced_policy$/;"	c	namespace:__pstl::execution::v1
param	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      param() const$/;"	f	class:std::uniform_int_distribution	typeref:typename:param_type
param	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      param(const param_type& __param)$/;"	f	class:std::uniform_int_distribution	typeref:typename:void
param_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	param_type() : param_type(0) { }$/;"	f	struct:std::uniform_int_distribution::param_type
param_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^	param_type(_IntType __a,$/;"	f	struct:std::uniform_int_distribution::param_type
param_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      struct param_type$/;"	s	class:std::uniform_int_distribution
parser	include/sak/parser/token.hpp	/^namespace parser$/;"	n	namespace:sak
part	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    enum part { none, space, symbol, sign, value };$/;"	g	class:std::money_base
partial	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      partial,$/;"	e	enum:std::codecvt_base::result
partial_sort	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    partial_sort(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
partial_sort_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    partial_sort_copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _RandomAccessIterator
partition	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    partition(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
partition_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    partition_copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR pair<_OutputIterator1,_OutputIterator2>
partition_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    partition_point(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
pattern	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    struct pattern { char field[4]; };$/;"	s	class:std::money_base
pattern	include/sak/pattern/default_derived.hpp	/^namespace pattern$/;"	n	namespace:sak
pattern	include/sak/pattern/singleton_ptr.hpp	/^namespace pattern$/;"	n	namespace:sak
period	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef typename duration::period			period;$/;"	t	class:std::chrono::time_point	typeref:typename:duration::period
period	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typename _Tp::period;$/;"	m	class:std::chrono::_Tp	typeref:meta:typename
period	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	using period = typename _Period::type;$/;"	t	class:std::chrono::duration	typeref:typename:_Period::type
period	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      typedef duration::period					period;$/;"	t	struct:std::chrono::steady_clock	typeref:typename:duration::period
period	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      typedef duration::period					period;$/;"	t	struct:std::chrono::system_clock	typeref:typename:duration::period
period	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using period                    = duration::period;$/;"	t	struct:std::filesystem::__file_clock	typeref:typename:duration::period
permission_denied	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      permission_denied = 			EACCES,$/;"	e	enum:std::errc
pid_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^typedef __pid_t pid_t;$/;"	t	typeref:typename:__pid_t
pid_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __pid_t pid_t;$/;"	t	typeref:typename:__pid_t
pid_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^typedef __pid_t pid_t;$/;"	t	typeref:typename:__pid_t
piecewise_construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^  _GLIBCXX17_INLINE constexpr piecewise_construct_t piecewise_construct =$/;"	v	namespace:std	typeref:typename:_GLIBCXX17_INLINE piecewise_construct_t
piecewise_construct_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^  struct piecewise_construct_t { explicit piecewise_construct_t() = default; };$/;"	s	namespace:std
place	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^	location place;$/;"	m	class:Product	typeref:typename:location	file:
place	tests/sak/parser/test_serial_data.c++	/^	location place;$/;"	m	class:Product	typeref:typename:location	file:
plus	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct plus : public binary_function<_Tp, _Tp, _Tp>$/;"	s	namespace:std
plus	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct plus<void>$/;"	s	namespace:std
pmr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^namespace pmr$/;"	n	namespace:std
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using pointer = _Tp*;$/;"	t	struct:std::allocator_traits	typeref:typename:_Tp *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;$/;"	t	struct:std::allocator_traits	typeref:typename:__detected_or_t<value_type *,__pointer,_Alloc>
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using pointer = void*;$/;"	t	struct:std::allocator_traits	typeref:typename:void *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocated_ptr.h	/^      using pointer = typename allocator_traits<_Alloc>::pointer;$/;"	t	struct:std::__allocated_ptr	typeref:typename:allocator_traits<_Alloc>::pointer
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      typedef _Tp*       pointer;$/;"	t	class:std::allocator	typeref:typename:_Tp *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      typedef void*       pointer;$/;"	t	class:std::allocator	typeref:typename:void *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef typename _Alloc_traits::pointer		pointer;$/;"	t	class:std::basic_string	typeref:typename:_Alloc_traits::pointer
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      using pointer = _Tp*;$/;"	t	struct:std::allocator_traits	typeref:typename:_Tp *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      typedef _Tp*       pointer;$/;"	t	class:std::__new_allocator	typeref:typename:_Tp *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^      typedef _Tp* pointer;$/;"	t	struct:std::pointer_traits	typeref:typename:_Tp *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^      using pointer = _Ptr;$/;"	t	struct:std::__ptr_traits_impl	typeref:typename:_Ptr
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^      using pointer = _Ptr;$/;"	t	struct:std::__ptr_traits_ptr_to	typeref:typename:_Ptr
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^      using pointer = _Tp*;$/;"	t	struct:std::__ptr_traits_ptr_to	typeref:typename:_Tp *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef const value_type*			pointer;$/;"	t	class:std::regex_token_iterator	typeref:typename:const value_type *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef const value_type*		  pointer;$/;"	t	class:std::regex_iterator	typeref:typename:const value_type *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      using pointer = typename shared_ptr<_Tp>::element_type*;$/;"	t	function:std::operator <=>	typeref:typename:shared_ptr<_Tp>::element_type *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^	using pointer = decltype(__count_type::_M_pi);$/;"	t	struct:std::_Sp_atomic::_Atomic_count
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^		using pointer = const _Up*;$/;"	t	struct:std::_Sp_counted_array_base::_M_init::_Iter	typeref:typename:const _Up *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	using pointer = typename allocator_traits<__allocator_type>::pointer;$/;"	t	function:std::_Sp_counted_ptr_inplace::_M_destroy	typeref:typename:allocator_traits<__allocator_type>::pointer
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using pointer = typename __shared_ptr<_Tp, _Lp>::element_type*;$/;"	t	function:std::operator <=>	typeref:typename:__shared_ptr<_Tp,_Lp>::element_type *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using pointer = typename allocator_traits<_Alloc>::pointer;$/;"	t	class:std::_Sp_counted_array	typeref:typename:allocator_traits<_Alloc>::pointer
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef _Bit_reference*				pointer;$/;"	t	class:std::vector	typeref:typename:_Bit_reference *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    typedef _Bit_reference* pointer;$/;"	t	struct:std::_Bit_iterator	typeref:typename:_Bit_reference *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    typedef const bool*          pointer;$/;"	t	struct:std::_Bit_const_iterator	typeref:typename:const bool *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    typedef void	    pointer;$/;"	t	struct:std::_Bit_const_iterator	typeref:typename:void
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    typedef void	    pointer;$/;"	t	struct:std::_Bit_iterator	typeref:typename:void
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef _Ptr				pointer;$/;"	t	struct:std::_Deque_iterator	typeref:typename:_Ptr
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef typename _Alloc_traits::pointer		pointer;$/;"	t	class:std::deque	typeref:typename:_Alloc_traits::pointer
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef _Iterator					pointer;$/;"	t	class:std::move_iterator	typeref:typename:_Iterator
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef typename __traits_type::pointer		pointer;$/;"	t	class:std::reverse_iterator	typeref:typename:__traits_type::pointer
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef typename __traits_type::pointer   	pointer;$/;"	t	class:__gnu_cxx::__normal_iterator	typeref:typename:__traits_type::pointer
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using pointer = _Iterator;$/;"	t	class:std::move_iterator	typeref:typename:_Iterator
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using pointer = __conditional_t<contiguous_iterator<_It>,$/;"	t	struct:std::iterator_traits	typeref:typename:__conditional_t<contiguous_iterator<_It>,add_pointer_t<iter_reference_t<_It>>,void>
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using pointer = typename __ptr<_It>::type;$/;"	t	struct:std::iterator_traits	typeref:typename:__ptr<_It>::type
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef _Pointer   pointer;$/;"	t	struct:std::iterator	typeref:typename:_Pointer
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef _Tp*                        pointer;$/;"	t	struct:std::iterator_traits	typeref:typename:_Tp *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef const _Tp*                  pointer;$/;"	t	struct:std::iterator_traits	typeref:typename:const _Tp *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef typename _Iterator::pointer           pointer;$/;"	t	struct:std::__iterator_traits	typeref:typename:_Iterator::pointer
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef typename _Iterator::pointer           pointer;$/;"	t	struct:std::iterator_traits	typeref:typename:_Iterator::pointer
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      using pointer	      = _Tp*;$/;"	t	struct:std::iterator_traits	typeref:typename:_Tp *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef typename _Alloc_traits::pointer		 pointer;$/;"	t	class:std::map	typeref:typename:_Alloc_traits::pointer
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^      typedef value_type* pointer;$/;"	t	class:std::_Temporary_buffer	typeref:typename:value_type *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Tp* pointer;$/;"	t	struct:std::_Rb_tree_iterator	typeref:typename:_Tp *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef const _Tp* pointer;$/;"	t	struct:std::_Rb_tree_const_iterator	typeref:typename:const _Tp *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef value_type* 			pointer;$/;"	t	class:std::_Rb_tree	typeref:typename:value_type *
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^       	pointer;$/;"	t	struct:std::_Vector_base	typeref:typename:__gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      typedef typename _Base::pointer			pointer;$/;"	t	class:std::vector	typeref:typename:_Base::pointer
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      using pointer	  = typename __uniq_ptr_impl<_Tp, _Dp>::pointer;$/;"	t	class:std::unique_ptr	typeref:typename:__uniq_ptr_impl<_Tp,_Dp>::pointer
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      using pointer = typename _Ptr<_Tp, _Dp>::type;$/;"	t	class:std::__uniq_ptr_impl	typeref:typename:_Ptr<_Tp,_Dp>::type
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      using pointer = typename unique_ptr<_Tp, _Dp>::pointer;$/;"	t	function:std::operator <=>	typeref:typename:unique_ptr<_Tp,_Dp>::pointer
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    typedef typename _Alloc::pointer                pointer;$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:_Alloc::pointer
pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    typedef typename _Base_type::pointer            pointer;$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:_Base_type::pointer
pointer_to	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^      pointer_to(element_type& __r) noexcept$/;"	f	struct:std::__ptr_traits_ptr_to	typeref:typename:_GLIBCXX20_CONSTEXPR pointer
pointer_to	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^      pointer_to(element_type& __r)$/;"	f	struct:std::__ptr_traits_ptr_to	typeref:typename:pointer
pointer_to_binary_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      pointer_to_binary_function() { }$/;"	f	class:std::pointer_to_binary_function
pointer_to_binary_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      pointer_to_binary_function(_Result (*__x)(_Arg1, _Arg2))$/;"	f	class:std::pointer_to_binary_function
pointer_to_binary_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    class pointer_to_binary_function$/;"	c	namespace:std
pointer_to_unary_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      pointer_to_unary_function() { }$/;"	f	class:std::pointer_to_unary_function
pointer_to_unary_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      pointer_to_unary_function(_Result (*__x)(_Arg))$/;"	f	class:std::pointer_to_unary_function
pointer_to_unary_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    class pointer_to_unary_function : public unary_function<_Arg, _Result>$/;"	c	namespace:std
pointer_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    struct pointer_traits : __ptr_traits_impl<_Ptr, __ptr_traits_elem_t<_Ptr>>$/;"	s	namespace:std
pointer_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    struct pointer_traits<_Tp*> : __ptr_traits_ptr_to<_Tp*, _Tp>$/;"	s	namespace:std
polymorphic_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	polymorphic_allocator(const polymorphic_allocator<_Up>& __x) noexcept$/;"	f	class:std::pmr::polymorphic_allocator
polymorphic_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      polymorphic_allocator() noexcept$/;"	f	class:std::pmr::polymorphic_allocator
polymorphic_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      polymorphic_allocator(memory_resource* __r) noexcept$/;"	f	class:std::pmr::polymorphic_allocator
polymorphic_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^    class polymorphic_allocator$/;"	c	namespace:std::pmr
pop	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^      pop()$/;"	f	class:std::stack	typeref:typename:void
pop_back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      pop_back() noexcept$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
pop_back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      pop_back()$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
pop_back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      pop_back() _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:void
pop_back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      pop_back() _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
pop_front	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      pop_front() _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:void
pop_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
pop_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    pop_heap(_RandomAccessIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
pos_format	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      pos_format() const$/;"	f	class:std::moneypunct	typeref:typename:pattern
pos_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      typedef typename _Traits::pos_type             pos_type;$/;"	t	class:std::basic_ios	typeref:typename:_Traits::pos_type
pos_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef std::streampos  pos_type;$/;"	t	struct:__gnu_cxx::_Char_types	typeref:typename:std::streampos
pos_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef streampos         pos_type;$/;"	t	struct:std::char_traits	typeref:typename:streampos
pos_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef typename _Char_types<_CharT>::pos_type    pos_type;$/;"	t	struct:__gnu_cxx::char_traits	typeref:typename:_Char_types<_CharT>::pos_type
pos_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef u16streampos      pos_type;$/;"	t	struct:std::char_traits	typeref:typename:u16streampos
pos_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef u32streampos      pos_type;$/;"	t	struct:std::char_traits	typeref:typename:u32streampos
pos_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef u8streampos       pos_type;$/;"	t	struct:std::char_traits	typeref:typename:u8streampos
pos_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef wstreampos        pos_type;$/;"	t	struct:std::char_traits	typeref:typename:wstreampos
position	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      _Iterator		position = _Iterator();$/;"	m	struct:std::_Node_insert_return	typeref:typename:_Iterator
position	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      position(size_type __sub = 0) const$/;"	f	class:std::match_results	typeref:typename:difference_type
position	include/sak/parser/token.hpp	/^	const unsigned int position;$/;"	m	class:sak::parser::token	typeref:typename:const unsigned int
positive_sign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      positive_sign() const$/;"	f	class:std::moneypunct	typeref:typename:string_type
positive_sign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char *positive_sign;		\/* Sign for positive values.  *\/$/;"	m	struct:lconv	typeref:typename:char *
ppsfreq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  long long ppsfreq;           \/* pps frequency (scaled ppm) (ro) *\/$/;"	m	struct:timex	typeref:typename:long long
precision	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  long long precision;         \/* clock precision (usec) (read only) *\/$/;"	m	struct:timex	typeref:typename:long long
precision	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    precision() const$/;"	f	class:std::ios_base	typeref:typename:streamsize
precision	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    precision(streamsize __prec)$/;"	f	class:std::ios_base	typeref:typename:streamsize
prefix	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      prefix() const$/;"	f	class:std::match_results	typeref:typename:const_reference
prev	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_funcs.h	/^    prev(_BidirectionalIterator __x, typename$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX17_CONSTEXPR _BidirectionalIterator
prev_permutation	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    prev_permutation(_BidirectionalIterator __first,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR bool
price	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^	float price;$/;"	m	class:Product	typeref:typename:float	file:
price	tests/sak/parser/test_serial_data.c++	/^	float price;$/;"	m	class:Product	typeref:typename:float	file:
print	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_base.h	/^    static const mask print 	= _ISprint;$/;"	m	struct:std::ctype_base	typeref:typename:const mask
print	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@main.c++	/^	virtual void print( ) const $/;"	f	class:derived_one	typeref:typename:void	file:
print	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@main.c++	/^	virtual void print( ) const $/;"	f	class:derived_two	typeref:typename:void	file:
print	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@sketch_singleton.c++	/^	void print( const string& value ) const override$/;"	f	class:Derived	typeref:typename:void	file:
print	source/main.c++	/^	virtual void print( ) const $/;"	f	class:derived_one	typeref:typename:void	file:
print	source/main.c++	/^	virtual void print( ) const $/;"	f	class:derived_two	typeref:typename:void	file:
print	tests/adhoc/sketch_singleton.c++	/^	void print( const string& value ) const override$/;"	f	class:Derived	typeref:typename:void	file:
propagate_on_container_copy_assignment	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using propagate_on_container_copy_assignment = false_type;$/;"	t	struct:std::allocator_traits	typeref:typename:false_type
propagate_on_container_copy_assignment	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using propagate_on_container_copy_assignment$/;"	t	struct:std::allocator_traits	typeref:typename:__detected_or_t<false_type,__pocca,_Alloc>
propagate_on_container_copy_assignment	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      using propagate_on_container_copy_assignment = false_type;$/;"	t	struct:std::allocator_traits	typeref:typename:false_type
propagate_on_container_move_assignment	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using propagate_on_container_move_assignment = true_type;$/;"	t	struct:std::allocator_traits	typeref:typename:true_type
propagate_on_container_move_assignment	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using propagate_on_container_move_assignment$/;"	t	struct:std::allocator_traits	typeref:typename:__detected_or_t<false_type,__pocma,_Alloc>
propagate_on_container_move_assignment	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      using propagate_on_container_move_assignment = true_type;$/;"	t	class:std::allocator	typeref:typename:true_type
propagate_on_container_move_assignment	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      using propagate_on_container_move_assignment = false_type;$/;"	t	struct:std::allocator_traits	typeref:typename:false_type
propagate_on_container_move_assignment	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      typedef std::true_type propagate_on_container_move_assignment;$/;"	t	class:std::__new_allocator	typeref:typename:std::true_type
propagate_on_container_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using propagate_on_container_swap = false_type;$/;"	t	struct:std::allocator_traits	typeref:typename:false_type
propagate_on_container_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using propagate_on_container_swap$/;"	t	struct:std::allocator_traits	typeref:typename:__detected_or_t<false_type,__pocs,_Alloc>
propagate_on_container_swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      using propagate_on_container_swap = false_type;$/;"	t	struct:std::allocator_traits	typeref:typename:false_type
protocol_error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      protocol_error = 				EPROTO,$/;"	e	enum:std::errc
protocol_not_supported	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      protocol_not_supported = 			EPROTONOSUPPORT,$/;"	e	enum:std::errc
pselect	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^#   define pselect __pselect6/;"	d
pthread_attr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^typedef union pthread_attr_t pthread_attr_t;$/;"	t	typeref:union:pthread_attr_t
pthread_attr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^union pthread_attr_t$/;"	u
pthread_barrier_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^} pthread_barrier_t;$/;"	t	typeref:union:__anondcf6770a070a
pthread_barrierattr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^} pthread_barrierattr_t;$/;"	t	typeref:union:__anondcf6770a080a
pthread_cleanup_pop	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#  define pthread_cleanup_pop(/;"	d
pthread_cleanup_pop	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^# define pthread_cleanup_pop(/;"	d
pthread_cleanup_pop_restore_np	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#   define pthread_cleanup_pop_restore_np(/;"	d
pthread_cleanup_pop_restore_np	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#  define pthread_cleanup_pop_restore_np(/;"	d
pthread_cleanup_push	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#  define pthread_cleanup_push(/;"	d
pthread_cleanup_push	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^# define pthread_cleanup_push(/;"	d
pthread_cleanup_push_defer_np	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#   define pthread_cleanup_push_defer_np(/;"	d
pthread_cleanup_push_defer_np	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#  define pthread_cleanup_push_defer_np(/;"	d
pthread_clockjoin_np	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#   define pthread_clockjoin_np __pthread_clockjoin_np6/;"	d
pthread_cond_clockwait	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#    define pthread_cond_clockwait __pthread_cond_clockwait6/;"	d
pthread_cond_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^} pthread_cond_t;$/;"	t	typeref:union:__anondcf6770a040a
pthread_cond_timedwait	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#   define pthread_cond_timedwait __pthread_cond_timedwait6/;"	d
pthread_condattr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^} pthread_condattr_t;$/;"	t	typeref:union:__anondcf6770a020a
pthread_key_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^typedef unsigned int pthread_key_t;$/;"	t	typeref:typename:unsigned int
pthread_mutex_clocklock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#   define pthread_mutex_clocklock __pthread_mutex_clocklock6/;"	d
pthread_mutex_consistent_np	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#   define pthread_mutex_consistent_np /;"	d
pthread_mutex_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^} pthread_mutex_t;$/;"	t	typeref:union:__anondcf6770a030a
pthread_mutex_timedlock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#   define pthread_mutex_timedlock __pthread_mutex_timedlock6/;"	d
pthread_mutexattr_getrobust_np	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#   define pthread_mutexattr_getrobust_np /;"	d
pthread_mutexattr_setrobust_np	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#   define pthread_mutexattr_setrobust_np /;"	d
pthread_mutexattr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^} pthread_mutexattr_t;$/;"	t	typeref:union:__anondcf6770a010a
pthread_once_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^typedef int __ONCE_ALIGNMENT pthread_once_t;$/;"	t	typeref:typename:int __ONCE_ALIGNMENT
pthread_rwlock_clockrdlock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#    define pthread_rwlock_clockrdlock __pthread_rwlock_clockrdlock6/;"	d
pthread_rwlock_clockwrlock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#    define pthread_rwlock_clockwrlock __pthread_rwlock_clockwrlock6/;"	d
pthread_rwlock_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^} pthread_rwlock_t;$/;"	t	typeref:union:__anondcf6770a050a
pthread_rwlock_timedrdlock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#    define pthread_rwlock_timedrdlock __pthread_rwlock_timedrdlock6/;"	d
pthread_rwlock_timedwrlock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#    define pthread_rwlock_timedwrlock __pthread_rwlock_timedwrlock6/;"	d
pthread_rwlockattr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^} pthread_rwlockattr_t;$/;"	t	typeref:union:__anondcf6770a060a
pthread_spinlock_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^typedef volatile int pthread_spinlock_t;$/;"	t	typeref:typename:volatile int
pthread_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@pthreadtypes.h	/^typedef unsigned long int pthread_t;$/;"	t	typeref:typename:unsigned long int
pthread_timedjoin_np	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#   define pthread_timedjoin_np __pthread_timedjoin_np6/;"	d
pthread_yield	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^#  define pthread_yield /;"	d
ptr_fun	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    ptr_fun(_Result (*__x)(_Arg))$/;"	f	namespace:std
ptr_fun	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    ptr_fun(_Result (*__x)(_Arg1, _Arg2))$/;"	f	namespace:std
ptrdiff_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^  typedef __PTRDIFF_TYPE__	ptrdiff_t;$/;"	t	namespace:std	typeref:typename:__PTRDIFF_TYPE__
ptrdiff_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^typedef __PTRDIFF_TYPE__ ptrdiff_t;$/;"	t	typeref:typename:__PTRDIFF_TYPE__
punct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_base.h	/^    static const mask punct 	= _ISpunct;$/;"	m	struct:std::ctype_base	typeref:typename:const mask
push	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^      push(const value_type& __x)$/;"	f	class:std::stack	typeref:typename:void
push	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^      push(value_type&& __x)$/;"	f	class:std::stack	typeref:typename:void
push_back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      push_back(_CharT __c)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
push_back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      push_back(bool __x)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
push_back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      push_back(const value_type& __x)$/;"	f	class:std::deque	typeref:typename:void
push_back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      push_back(value_type&& __x)$/;"	f	class:std::deque	typeref:typename:void
push_back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      push_back(const value_type& __x)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
push_back	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      push_back(value_type&& __x)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
push_front	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      push_front(const value_type& __x)$/;"	f	class:std::deque	typeref:typename:void
push_front	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      push_front(value_type&& __x)$/;"	f	class:std::deque	typeref:typename:void
push_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
push_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      put(iter_type __s, ios_base& __io, char_type __fill, bool __v) const$/;"	f	class:std::num_put	typeref:typename:iter_type
put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      put(iter_type __s, ios_base& __io, char_type __fill, double __v) const$/;"	f	class:std::num_put	typeref:typename:iter_type
put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      put(iter_type __s, ios_base& __io, char_type __fill, long __v) const$/;"	f	class:std::num_put	typeref:typename:iter_type
put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      put(iter_type __s, ios_base& __io, char_type __fill, long long __v) const$/;"	f	class:std::num_put	typeref:typename:iter_type
put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      put(iter_type __s, ios_base& __io, char_type __fill,$/;"	f	class:std::num_put	typeref:typename:iter_type
put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      put(iter_type __s, bool __intl, ios_base& __io,$/;"	f	class:std::money_put	typeref:typename:iter_type
put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      put(iter_type __s, ios_base& __io, char_type __fill,$/;"	f	class:std::time_put	typeref:typename:iter_type
pword	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    pword(int __ix)$/;"	f	class:std::ios_base	typeref:typename:void * &
quad_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __quad_t quad_t;$/;"	t	typeref:typename:__quad_t
quot	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    int quot;			\/* Quotient.  *\/$/;"	m	struct:__anond6b8f37d0108	typeref:typename:int
quot	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    long int quot;		\/* Quotient.  *\/$/;"	m	struct:__anond6b8f37d0208	typeref:typename:long int
quot	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    long long int quot;		\/* Quotient.  *\/$/;"	m	struct:__anond6b8f37d0308	typeref:typename:long long int
quoted	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@string.c++	/^string sak::quoted( const string& value )$/;"	f	class:sak	typeref:typename:string
quoted	source/sak/string.c++	/^string sak::quoted( const string& value )$/;"	f	class:sak	typeref:typename:string
rand_deg	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    int rand_deg;		\/* Degree of random number generator.  *\/$/;"	m	struct:random_data	typeref:typename:int
rand_sep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    int rand_sep;		\/* Distance between front and rear.  *\/$/;"	m	struct:random_data	typeref:typename:int
rand_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    int rand_type;		\/* Type of random number generator.  *\/$/;"	m	struct:random_data	typeref:typename:int
random_access_iterator_tag	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^  struct random_access_iterator_tag : public bidirectional_iterator_tag { };$/;"	s	namespace:std
random_data	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^struct random_data$/;"	s
random_shuffle	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    random_shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_DEPRECATED_SUGGEST ("std::shuffle")void
random_shuffle	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    random_shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX14_DEPRECATED_SUGGEST ("std::shuffle")void
raw_storage_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_raw_storage_iter.h	/^      raw_storage_iterator(_OutputIterator __x)$/;"	f	class:std::raw_storage_iterator
raw_storage_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_raw_storage_iter.h	/^    class _GLIBCXX17_DEPRECATED raw_storage_iterator$/;"	c	namespace:std
rbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      rbegin() _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reverse_iterator
rbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      rbegin() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reverse_iterator
rbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    rbegin(_Container& __cont) -> decltype(__cont.rbegin())$/;"	f	namespace:std	typeref:typename:decltype(__cont.rbegin ())
rbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    rbegin(_Tp (&__arr)[_Nm]) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR reverse_iterator<_Tp * >
rbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    rbegin(const _Container& __cont) -> decltype(__cont.rbegin())$/;"	f	namespace:std	typeref:typename:decltype(__cont.rbegin ())
rbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    rbegin(initializer_list<_Tp> __il) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR reverse_iterator<const _Tp * >
rbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      rbegin() _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reverse_iterator
rbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      rbegin() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reverse_iterator
rbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      rbegin() _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD reverse_iterator
rbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      rbegin() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD const_reverse_iterator
rbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      rbegin() _GLIBCXX_NOEXCEPT$/;"	f	class:std::map	typeref:typename:reverse_iterator
rbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      rbegin() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::map	typeref:typename:const_reverse_iterator
rbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      rbegin() _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:reverse_iterator
rbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      rbegin() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:const_reverse_iterator
rbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      rbegin() _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reverse_iterator
rbegin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      rbegin() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reverse_iterator
rdbuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      rdbuf() const$/;"	f	class:std::basic_ios	typeref:typename:basic_streambuf<_CharT,_Traits> *
rdbuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      rdbuf(streambuf *__bytebuf) noexcept$/;"	f	class:std::wbuffer_convert	typeref:typename:streambuf *
rdbuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      streambuf* rdbuf() const noexcept { return _M_buf; }$/;"	f	class:std::wbuffer_convert	typeref:typename:streambuf *
rdstate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      rdstate() const$/;"	f	class:std::basic_ios	typeref:typename:iostate
read	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@cookie_io_functions_t.h	/^  cookie_read_function_t *read;		\/* Read bytes.  *\/$/;"	m	struct:_IO_cookie_io_functions_t	typeref:typename:cookie_read_function_t *
read_only_file_system	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      read_only_file_system = 			EROFS,$/;"	e	enum:std::errc
ready	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      bool ready() const noexcept { return !_Unchecked::empty(); }$/;"	f	class:std::match_results	typeref:typename:bool
rebind	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^	struct rebind$/;"	s	class:std::allocator
rebind	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^	struct rebind$/;"	s	class:std::__new_allocator
rebind	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^	using rebind = typename __detected_or_t<__replace_first_arg<_Ptr, _Up>,$/;"	t	struct:std::__ptr_traits_impl	typeref:typename:__detected_or_t<__replace_first_arg<_Ptr,_Up>,__rebind,_Ptr,_Up>::type
rebind	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^      template<typename _Up> using rebind = _Up*;$/;"	t	struct:std::pointer_traits	typeref:typename:_Up *
rebind	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^      struct rebind$/;"	s	struct:__gnu_cxx::__alloc_traits
rebind_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;$/;"	t	struct:std::allocator_traits	typeref:typename:__alloc_rebind<_Alloc,_Tp>
rebind_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	using rebind_alloc = allocator<_Up>;$/;"	t	struct:std::allocator_traits	typeref:typename:allocator<_Up>
rebind_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	using rebind_alloc = pmr::polymorphic_allocator<_Up>;$/;"	t	struct:std::allocator_traits	typeref:typename:pmr::polymorphic_allocator<_Up>
rebind_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	using rebind_traits = allocator_traits<allocator<_Up>>;$/;"	t	struct:std::allocator_traits	typeref:typename:allocator_traits<allocator<_Up>>
rebind_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;$/;"	t	struct:std::allocator_traits	typeref:typename:allocator_traits<rebind_alloc<_Tp>>
rebind_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	using rebind_traits = allocator_traits<pmr::polymorphic_allocator<_Up>>;$/;"	t	struct:std::allocator_traits	typeref:typename:allocator_traits<pmr::polymorphic_allocator<_Up>>
recursive_init_error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@cxxabi.h	/^  class recursive_init_error: public std::exception$/;"	c	namespace:__gnu_cxx
ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    ref(_Tp& __t) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR reference_wrapper<_Tp>
ref	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    ref(reference_wrapper<_Tp> __t) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR reference_wrapper<_Tp>
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      typedef _Tp&       reference;$/;"	t	class:std::allocator	typeref:typename:_Tp &
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef typename _Alloc_traits::reference		reference;$/;"	t	class:std::basic_string	typeref:typename:_Alloc_traits::reference
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      typedef _Tp&       reference;$/;"	t	class:std::__new_allocator	typeref:typename:_Tp &
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef const value_type&			reference;$/;"	t	class:std::regex_token_iterator	typeref:typename:const value_type &
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef const value_type&		  reference;$/;"	t	class:std::regex_iterator	typeref:typename:const value_type &
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef value_type&				   reference;$/;"	t	class:std::match_results	typeref:typename:value_type &
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^		using reference = const _Up&;$/;"	t	struct:std::_Sp_counted_array_base::_M_init::_Iter	typeref:typename:const _Up &
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef _Bit_reference				reference;$/;"	t	class:std::vector	typeref:typename:_Bit_reference
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    typedef _Bit_reference  reference;$/;"	t	struct:std::_Bit_iterator	typeref:typename:_Bit_reference
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    typedef bool                 reference;$/;"	t	struct:std::_Bit_const_iterator	typeref:typename:bool
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef _Ref				reference;$/;"	t	struct:std::_Deque_iterator	typeref:typename:_Ref
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef typename _Alloc_traits::reference		reference;$/;"	t	class:std::deque	typeref:typename:_Alloc_traits::reference
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef typename __traits_type::reference		reference;$/;"	t	class:std::reverse_iterator	typeref:typename:__traits_type::reference
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef typename __traits_type::reference 	reference;$/;"	t	class:__gnu_cxx::__normal_iterator	typeref:typename:__traits_type::reference
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using reference = iter_reference_t<_It>;$/;"	t	struct:std::iterator_traits	typeref:typename:iter_reference_t<_It>
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using reference = iter_reference_t<_Iterator>;$/;"	t	class:std::reverse_iterator	typeref:typename:iter_reference_t<_Iterator>
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using reference = iter_rvalue_reference_t<_Iterator>;$/;"	t	class:std::move_iterator	typeref:typename:iter_rvalue_reference_t<_Iterator>
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using reference$/;"	t	class:std::move_iterator	typeref:typename:__conditional_t<is_reference<__base_ref>::value,typename remove_reference<__base_ref>::type &&,__base_ref>
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef _Reference reference;$/;"	t	struct:std::iterator	typeref:typename:_Reference
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef _Tp&                        reference;$/;"	t	struct:std::iterator_traits	typeref:typename:_Tp &
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef const _Tp&                  reference;$/;"	t	struct:std::iterator_traits	typeref:typename:const _Tp &
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef typename _Iterator::reference         reference;$/;"	t	struct:std::__iterator_traits	typeref:typename:_Iterator::reference
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef typename _Iterator::reference         reference;$/;"	t	struct:std::iterator_traits	typeref:typename:_Iterator::reference
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      using reference	      = _Tp&;$/;"	t	struct:std::iterator_traits	typeref:typename:_Tp &
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef typename _Alloc_traits::reference		 reference;$/;"	t	class:std::map	typeref:typename:_Alloc_traits::reference
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^      typedef typename _Sequence::reference		reference;$/;"	t	class:std::stack	typeref:typename:_Sequence::reference
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Tp& reference;$/;"	t	struct:std::_Rb_tree_iterator	typeref:typename:_Tp &
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef const _Tp& reference;$/;"	t	struct:std::_Rb_tree_const_iterator	typeref:typename:const _Tp &
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef value_type& 			reference;$/;"	t	class:std::_Rb_tree	typeref:typename:value_type &
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      typedef typename _Alloc_traits::reference		reference;$/;"	t	class:std::vector	typeref:typename:_Alloc_traits::reference
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef _CharT& reference; \/\/ Changed to _CharT by LWG 445$/;"	t	class:std::istreambuf_iterator	typeref:typename:_CharT &
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    typedef typename _Alloc::reference              reference;$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:_Alloc::reference
reference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    typedef value_type&                             reference;$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:value_type &
reference_wrapper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^	reference_wrapper(_Up&& __uref)$/;"	f	class:std::reference_wrapper	typeref:typename:_GLIBCXX20_CONSTEXPR
reference_wrapper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    class reference_wrapper$/;"	c	namespace:std
regex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef basic_regex<char>    regex;$/;"	t	namespace:std	typeref:typename:basic_regex<char>
regex_constants	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^namespace regex_constants$/;"	n	namespace:std
regex_constants	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^namespace regex_constants$/;"	n	namespace:std
regex_error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^    regex_error(error_type __ecode, const char* __what)$/;"	f	class:std::regex_error
regex_error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^  class regex_error : public std::runtime_error$/;"	c	namespace:std
regex_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      regex_iterator(_Bi_iter __a, _Bi_iter __b, const regex_type& __re,$/;"	f	class:std::regex_iterator
regex_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    class regex_iterator$/;"	c	namespace:std
regex_match	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    regex_match(_Bi_iter				 __s,$/;"	f	namespace:std	typeref:typename:_GLIBCXX_END_NAMESPACE_CXX11 bool
regex_match	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    regex_match(_Bi_iter __first, _Bi_iter __last,$/;"	f	namespace:std	typeref:typename:bool
regex_match	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    regex_match(const _Ch_type* __s,$/;"	f	namespace:std	typeref:typename:bool
regex_match	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    regex_match(const basic_string<_Ch_type, _Ch_traits, _Ch_alloc>& __s,$/;"	f	namespace:std	typeref:typename:bool
regex_match	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    regex_match(const basic_string<_Ch_type, _Ch_traits, _Str_allocator>& __s,$/;"	f	namespace:std	typeref:typename:bool
regex_replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    regex_replace(_Out_iter __out, _Bi_iter __first, _Bi_iter __last,$/;"	f	namespace:std	typeref:typename:_Out_iter
regex_replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    regex_replace(const _Ch_type* __s,$/;"	f	namespace:std	typeref:typename:basic_string<_Ch_type>
regex_replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    regex_replace(const basic_string<_Ch_type, _St, _Sa>& __s,$/;"	f	namespace:std	typeref:typename:basic_string<_Ch_type,_St,_Sa>
regex_search	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    regex_search(_Bi_iter __first, _Bi_iter __last,$/;"	f	namespace:std	typeref:typename:bool
regex_search	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    regex_search(_Bi_iter __s, _Bi_iter __e,$/;"	f	namespace:std	typeref:typename:bool
regex_search	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    regex_search(const _Ch_type* __s,$/;"	f	namespace:std	typeref:typename:bool
regex_search	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    regex_search(const basic_string<_Ch_type, _Ch_traits, _Ch_alloc>& __s,$/;"	f	namespace:std	typeref:typename:bool
regex_search	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    regex_search(const basic_string<_Ch_type, _Ch_traits,$/;"	f	namespace:std	typeref:typename:bool
regex_token_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	regex_token_iterator(_Bi_iter __a, _Bi_iter __b,$/;"	f	class:std::regex_token_iterator
regex_token_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      regex_token_iterator()$/;"	f	class:std::regex_token_iterator
regex_token_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      regex_token_iterator(_Bi_iter __a, _Bi_iter __b, const regex_type& __re,$/;"	f	class:std::regex_token_iterator
regex_token_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      regex_token_iterator(_Bi_iter __a, _Bi_iter __b,$/;"	f	class:std::regex_token_iterator
regex_token_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      regex_token_iterator(const regex_token_iterator& __rhs)$/;"	f	class:std::regex_token_iterator
regex_token_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    class regex_token_iterator$/;"	c	namespace:std
regex_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      regex_traits() { }$/;"	f	class:std::regex_traits
regex_traits	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    class regex_traits$/;"	c	namespace:std
regex_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef basic_regex<_Ch_type, _Rx_traits>	regex_type;$/;"	t	class:std::regex_token_iterator	typeref:typename:basic_regex<_Ch_type,_Rx_traits>
regex_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef basic_regex<_Ch_type, _Rx_traits>  regex_type;$/;"	t	class:std::regex_iterator	typeref:typename:basic_regex<_Ch_type,_Rx_traits>
register_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef int register_t __attribute__ ((__mode__ (__word__)));$/;"	t	typeref:typename:int
register_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef int register_t;$/;"	t	typeref:typename:int
reinterpret_pointer_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    reinterpret_pointer_cast(const shared_ptr<_Up>& __r) noexcept$/;"	f	namespace:std	typeref:typename:shared_ptr<_Tp>
reinterpret_pointer_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    reinterpret_pointer_cast(shared_ptr<_Up>&& __r) noexcept$/;"	f	namespace:std	typeref:typename:shared_ptr<_Tp>
reinterpret_pointer_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    reinterpret_pointer_cast(const __shared_ptr<_Tp1, _Lp>& __r) noexcept$/;"	f	namespace:std	typeref:typename:__shared_ptr<_Tp,_Lp>
relaxed	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      relaxed,$/;"	e	enum:std::memory_order
release	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^      release() throw()$/;"	f	class:std::auto_ptr	typeref:typename:element_type *
release	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      release,$/;"	e	enum:std::memory_order
release	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^	_NodeAlloc release() noexcept$/;"	f	union:std::_Node_handle_common::_Optional_alloc	typeref:typename:_NodeAlloc
release	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      pointer release() noexcept$/;"	f	class:std::__uniq_ptr_impl	typeref:typename:_GLIBCXX23_CONSTEXPR pointer
release	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      release() noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR pointer
rem	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    int rem;			\/* Remainder.  *\/$/;"	m	struct:__anond6b8f37d0108	typeref:typename:int
rem	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    long int rem;		\/* Remainder.  *\/$/;"	m	struct:__anond6b8f37d0208	typeref:typename:long int
rem	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    long long int rem;		\/* Remainder.  *\/$/;"	m	struct:__anond6b8f37d0308	typeref:typename:long long int
remove	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    remove(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
remove_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    remove_copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
remove_copy_if	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    remove_copy_if(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
remove_if	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    remove_if(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
remove_orphaned_object	build-project	/^function remove_orphaned_object$/;"	f
rend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      rend() _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reverse_iterator
rend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      rend() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reverse_iterator
rend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    rend(_Container& __cont) -> decltype(__cont.rend())$/;"	f	namespace:std	typeref:typename:decltype(__cont.rend ())
rend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    rend(_Tp (&__arr)[_Nm]) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR reverse_iterator<_Tp * >
rend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    rend(const _Container& __cont) -> decltype(__cont.rend())$/;"	f	namespace:std	typeref:typename:decltype(__cont.rend ())
rend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    rend(initializer_list<_Tp> __il) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX17_CONSTEXPR reverse_iterator<const _Tp * >
rend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      rend() _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reverse_iterator
rend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      rend() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reverse_iterator
rend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      rend() _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD reverse_iterator
rend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      rend() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD const_reverse_iterator
rend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      rend() _GLIBCXX_NOEXCEPT$/;"	f	class:std::map	typeref:typename:reverse_iterator
rend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      rend() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::map	typeref:typename:const_reverse_iterator
rend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      rend() _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:reverse_iterator
rend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      rend() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:const_reverse_iterator
rend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      rend() _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR reverse_iterator
rend	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      rend() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR const_reverse_iterator
rep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typedef typename duration::rep				rep;$/;"	t	class:std::chrono::time_point	typeref:typename:duration::rep
rep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	typename _Tp::rep;$/;"	m	class:std::chrono::_Tp	typeref:meta:typename
rep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	using rep = _Rep;$/;"	t	class:std::chrono::duration	typeref:typename:_Rep
rep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      typedef duration::rep					rep;$/;"	t	struct:std::chrono::steady_clock	typeref:typename:duration::rep
rep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      typedef duration::rep					rep;$/;"	t	struct:std::chrono::system_clock	typeref:typename:duration::rep
rep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using rep                       = duration::rep;$/;"	t	struct:std::filesystem::__file_clock	typeref:typename:duration::rep
replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR _If_sv<_Tp,basic_string &>
replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	replace(size_type __pos, size_type __n, const _Tp& __svt)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR _If_sv<_Tp,basic_string &>
replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	replace(size_type __pos1, size_type __n1, const _Tp& __svt,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR _If_sv<_Tp,basic_string &>
replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^        replace(const_iterator __i1, const_iterator __i2,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^        replace(iterator __i1, iterator __i2,$/;"	f	class:std::basic_string	typeref:typename:__enable_if_not_native_iterator<_InputIterator>::__type
replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      basic_string& replace(const_iterator __i1, const_iterator __i2,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      replace(__const_iterator __i1, __const_iterator __i2, size_type __n,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      replace(__const_iterator __i1, __const_iterator __i2,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      replace(size_type __pos, size_type __n, const basic_string& __str)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      replace(size_type __pos, size_type __n1, const _CharT* __s)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      replace(size_type __pos, size_type __n1, const _CharT* __s,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      replace(size_type __pos1, size_type __n1, const basic_string& __str,$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR basic_string &
replace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    replace(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
replace_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    replace_copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
replace_copy_if	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    replace_copy_if(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
replace_if	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    replace_if(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
replace_substr	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@string.c++	/^void ::sak::replace_substr($/;"	f	class:sak	typeref:typename:void::
replace_substr	source/sak/string.c++	/^void ::sak::replace_substr($/;"	f	class:sak	typeref:typename:void::
requested_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^      requested_size() const$/;"	f	class:std::_Temporary_buffer	typeref:typename:size_type
required_alignment	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      static constexpr size_t required_alignment = __alignof__(_Fp);$/;"	m	struct:std::__atomic_ref	typeref:typename:size_t
required_alignment	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      static constexpr size_t required_alignment = __alignof__(_Tp*);$/;"	m	struct:std::__atomic_ref	typeref:typename:size_t
required_alignment	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      static constexpr size_t required_alignment$/;"	m	struct:std::__atomic_ref	typeref:typename:size_t
reserve	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      reserve(size_type __n)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^      reset(element_type* __p = 0) throw()$/;"	f	class:std::auto_ptr	typeref:typename:void
reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^	reset(_Type __t = _Type::_None) noexcept { _M_type = __t; }$/;"	f	struct:std::__detail::_Compiler::_BracketState	typeref:typename:void
reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	reset(_Yp* __p) \/\/ _Yp must be complete.$/;"	f	class:std::__shared_ptr	typeref:typename:_SafeConv<_Yp>
reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	reset(_Yp* __p, _Deleter __d)$/;"	f	class:std::__shared_ptr	typeref:typename:_SafeConv<_Yp>
reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	reset(_Yp* __p, _Deleter __d, _Alloc __a)$/;"	f	class:std::__shared_ptr	typeref:typename:_SafeConv<_Yp>
reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      reset() noexcept$/;"	f	class:std::__shared_ptr	typeref:typename:void
reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      reset() noexcept$/;"	f	class:std::__weak_ptr	typeref:typename:void
reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      reset() { }$/;"	f	class:std::uniform_int_distribution	typeref:typename:void
reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      reset(_Up __p) noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR void
reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      reset(pointer __p = pointer()) noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR void
reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      void reset(nullptr_t = nullptr) noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR void
reset	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      void reset(pointer __p) noexcept$/;"	f	class:std::__uniq_ptr_impl	typeref:typename:_GLIBCXX23_CONSTEXPR void
resize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      resize(size_type __n)$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
resize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      resize(size_type __new_size, bool __x = bool())$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
resize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      resize(size_type __new_size)$/;"	f	class:std::deque	typeref:typename:void
resize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      resize(size_type __new_size, const value_type& __x)$/;"	f	class:std::deque	typeref:typename:void
resize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      resize(size_type __new_size)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
resize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      resize(size_type __new_size, const value_type& __x)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
resize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      resize(size_type __new_size, value_type __x = value_type())$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
resource	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      resource() const noexcept$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:memory_resource *
resource_deadlock_would_occur	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      resource_deadlock_would_occur = 		EDEADLK,$/;"	e	enum:std::errc
resource_unavailable_try_again	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      resource_unavailable_try_again = 		EAGAIN,$/;"	e	enum:std::errc
result	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      typedef codecvt_base::result	result;$/;"	t	class:std::__codecvt_abstract_base	typeref:typename:codecvt_base::result
result	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      typedef codecvt_base::result	result;$/;"	t	class:std::codecvt	typeref:typename:codecvt_base::result
result	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^    enum result$/;"	g	class:std::codecvt_base
result_out_of_range	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      result_out_of_range = 			ERANGE,$/;"	e	enum:std::errc
result_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^      using result_type = typename _Mem_fn_traits<_MemFunPtr>::__result_type;$/;"	t	struct:std::_Reference_wrapper_base_memfun	typeref:typename:_Mem_fn_traits<_MemFunPtr>::__result_type
result_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^      using result_type = typename _Mem_fn_traits<_MemFunPtr>::__result_type;$/;"	t	struct:std::_Weak_result_type_memfun	typeref:typename:_Mem_fn_traits<_MemFunPtr>::__result_type
result_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    { typedef _Res result_type; };$/;"	t	struct:std::_Weak_result_type_impl	typeref:typename:_Res
result_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^    { typedef typename _Functor::result_type result_type; };$/;"	t	struct:std::_Maybe_get_result_type	typeref:typename:_Functor::result_type
result_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      typedef _Res result_type;$/;"	t	class:std::function	typeref:typename:_Res
result_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef _Result 	result_type;  $/;"	t	struct:std::unary_function	typeref:typename:_Result
result_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef _Result 	result_type;$/;"	t	struct:std::binary_function	typeref:typename:_Result
result_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      typedef _IntType result_type;$/;"	t	class:std::uniform_int_distribution	typeref:typename:_IntType
rethrow_if_nested	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^    rethrow_if_nested(const _Ex& __ex)$/;"	f	namespace:std	typeref:typename:void
rethrow_nested	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^    rethrow_nested() const$/;"	f	class:std::nested_exception	typeref:typename:void
return_temporary_buffer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^    return_temporary_buffer(_Tp* __p)$/;"	f	namespace:std	typeref:typename:void
reverse	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
reverse_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef std::reverse_iterator<iterator>		reverse_iterator;$/;"	t	class:std::basic_string	typeref:typename:std::reverse_iterator<iterator>
reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef std::reverse_iterator<iterator>		reverse_iterator;$/;"	t	class:std::vector	typeref:typename:std::reverse_iterator<iterator>
reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef std::reverse_iterator<iterator>		reverse_iterator;$/;"	t	class:std::deque	typeref:typename:std::reverse_iterator<iterator>
reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^        reverse_iterator(const reverse_iterator<_Iter>& __x)$/;"	f	class:std::reverse_iterator	typeref:typename:requires __convertible<_Iter> _GLIBCXX17_CONSTEXPR
reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      reverse_iterator()$/;"	f	class:std::reverse_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR
reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      reverse_iterator(const reverse_iterator& __x)$/;"	f	class:std::reverse_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR
reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      reverse_iterator(iterator_type __x)$/;"	f	class:std::reverse_iterator	typeref:typename:_GLIBCXX17_CONSTEXPR
reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    class reverse_iterator$/;"	c	namespace:std
reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef typename _Rep_type::reverse_iterator	 reverse_iterator;$/;"	t	class:std::map	typeref:typename:_Rep_type::reverse_iterator
reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef std::reverse_iterator<iterator>       reverse_iterator;$/;"	t	class:std::_Rb_tree	typeref:typename:std::reverse_iterator<iterator>
reverse_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      typedef std::reverse_iterator<iterator>		reverse_iterator;$/;"	t	class:std::vector	typeref:typename:std::reverse_iterator<iterator>
rfind	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^	rfind(const _Tp& __svt, size_type __pos = npos) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR _If_sv<_Tp,size_type>
rfind	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      rfind(const _CharT* __s, size_type __pos = npos) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
rfind	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      rfind(const basic_string& __str, size_type __pos = npos) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
right	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags right =       _S_right;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
right	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  right(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
rotate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    rotate(_ForwardIterator __first, _ForwardIterator __middle,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
round	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      round(const duration<_Rep, _Period>& __d)$/;"	f	namespace:std::chrono	typeref:typename:enable_if_t<__and_<__is_duration<_ToDur>,__not_<treat_as_floating_point<typename _ToDur::rep>>>::value,_ToDur>
round	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      round(const time_point<_Clock, _Dur>& __tp)$/;"	f	namespace:std::chrono	typeref:typename:enable_if_t<__is_duration_v<_ToDur> &&!treat_as_floating_point_v<typename _ToDur::rep>,time_point<_Clock,_ToDur>>
rptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    int32_t *rptr;		\/* Rear pointer.  *\/$/;"	m	struct:random_data	typeref:typename:int32_t *
rsize_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^typedef __SIZE_TYPE__ rsize_t;$/;"	t	typeref:typename:__SIZE_TYPE__
running	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@thread_test.c++	/^bool running = true;$/;"	v	typeref:typename:bool
running	tests/adhoc/thread_test.c++	/^bool running = true;$/;"	v	typeref:typename:bool
sak	include/sak/debug/debug.hpp	/^namespace sak$/;"	n
sak	include/sak/debug/instance_counter/instance_counter.hpp	/^namespace sak$/;"	n
sak	include/sak/debug/instance_counter/local_instance_counter/local_instance_counter.hpp	/^namespace sak$/;"	n
sak	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^namespace sak$/;"	n
sak	include/sak/debug/test_handler/test_handler.hpp	/^namespace sak$/;"	n
sak	include/sak/parser/token.hpp	/^namespace sak$/;"	n
sak	include/sak/pattern/default_derived.hpp	/^namespace sak$/;"	n
sak	include/sak/pattern/singleton_ptr.hpp	/^namespace sak$/;"	n
sak	include/sak/stream/deserializable.hpp	/^namespace sak$/;"	n
sak	include/sak/stream/serial_data.hpp	/^namespace sak$/;"	n
sak	include/sak/stream/serializable.hpp	/^namespace sak$/;"	n
sak	include/sak/stream/streamable.hpp	/^namespace sak$/;"	n
sak	include/sak/string.hpp	/^namespace sak$/;"	n
sample	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    sample(_PopulationIterator __first, _PopulationIterator __last,$/;"	f	namespace:std	typeref:typename:_SampleIterator
save	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serializable.c++	/^const bool ::serializable::save( const string& file_path ) const$/;"	f	class:serializable	typeref:typename:const bool::
save	source/sak/stream/serializable.c++	/^const bool ::serializable::save( const string& file_path ) const$/;"	f	class:serializable	typeref:typename:const bool::
scan_is	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      scan_is(mask __m, const char_type* __lo, const char_type* __hi) const$/;"	f	class:std::__ctype_abstract_base	typeref:typename:const char_type *
scan_is	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_inline.h	/^  scan_is(mask __m, const char* __low, const char* __high) const$/;"	f	class:std::ctype	typeref:typename:const char *
scan_not	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      scan_not(mask __m, const char_type* __lo, const char_type* __hi) const$/;"	f	class:std::__ctype_abstract_base	typeref:typename:const char_type *
scan_not	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_inline.h	/^  scan_not(mask __m, const char* __low, const char* __high) const$/;"	f	class:std::ctype	typeref:typename:const char *
scanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#   define scanf __isoc23_scanf$/;"	d
scanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#   define scanf __isoc99_scanf$/;"	d
sched_param	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_sched_param.h	/^struct sched_param$/;"	s
sched_priority	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_sched_param.h	/^  int sched_priority;$/;"	m	struct:sched_param	typeref:typename:int
sched_priority	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^#define sched_priority    sched_priority$/;"	d
sched_rr_get_interval	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sched.h	/^#  define sched_rr_get_interval __sched_rr_get_interval6/;"	d
scientific	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags scientific =  _S_scientific;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
scientific	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  scientific(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
search	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    search(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
search	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator1
search_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    search_n(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
second	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      _T2 second;                \/\/\/< The second member$/;"	m	struct:std::pair	typeref:typename:_T2
second	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^	vector< _T2 > second;$/;"	m	struct:pair_vector	typeref:typename:vector<_T2>	file:
second	tests/sak/parser/test_serial_data.c++	/^	vector< _T2 > second;$/;"	m	struct:pair_vector	typeref:typename:vector<_T2>	file:
second_argument_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^      typedef typename _Tp::second_argument_type second_argument_type;$/;"	t	struct:std::_Refwrap_base_arg2	typeref:typename:_Tp::second_argument_type
second_argument_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      typedef _Arg2 	second_argument_type;$/;"	t	struct:std::binary_function	typeref:typename:_Arg2
second_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      typedef _T2 second_type;   \/\/\/< The type of the `second` member$/;"	t	struct:std::pair	typeref:typename:_T2
seconds	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    using seconds	= duration<_GLIBCXX_CHRONO_INT64_T>;$/;"	t	namespace:std::chrono	typeref:typename:duration<_GLIBCXX_CHRONO_INT64_T>
seek	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@cookie_io_functions_t.h	/^  cookie_seek_function_t *seek;		\/* Seek\/tell file position.  *\/$/;"	m	struct:_IO_cookie_io_functions_t	typeref:typename:cookie_seek_function_t *
seekdir	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    typedef _Ios_Seekdir seekdir;$/;"	t	class:std::ios_base	typeref:typename:_Ios_Seekdir
select_on_container_copy_construction	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      select_on_container_copy_construction(const _Alloc& __rhs)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX20_CONSTEXPR _Alloc
select_on_container_copy_construction	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      select_on_container_copy_construction(const allocator_type& __rhs)$/;"	f	struct:std::allocator_traits	typeref:typename:_GLIBCXX20_CONSTEXPR allocator_type
select_on_container_copy_construction	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      select_on_container_copy_construction() const noexcept$/;"	f	class:std::pmr::polymorphic_allocator	typeref:typename:polymorphic_allocator
select_on_container_copy_construction	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      select_on_container_copy_construction(const allocator_type&) noexcept$/;"	f	struct:std::allocator_traits	typeref:typename:allocator_type
seq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^_GLIBCXX17_INLINE constexpr sequenced_policy seq{};$/;"	v	namespace:__pstl::execution::v1	typeref:typename:_GLIBCXX17_INLINE sequenced_policy
seq_cst	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      seq_cst$/;"	e	enum:std::memory_order
sequenced_policy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^class sequenced_policy$/;"	c	namespace:__pstl::execution::v1
serial_data	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serial_data.c++	/^serial_data::serial_data( )$/;"	f	class:serial_data
serial_data	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serial_data.c++	/^serial_data::serial_data( const char * const value ) noexcept$/;"	f	class:serial_data
serial_data	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serial_data.c++	/^serial_data::serial_data( const serial_data& orig )$/;"	f	class:serial_data
serial_data	include/sak/stream/serial_data.hpp	/^class serial_data : public serializable$/;"	c	namespace:sak::stream
serial_data	source/sak/stream/serial_data.c++	/^serial_data::serial_data( )$/;"	f	class:serial_data
serial_data	source/sak/stream/serial_data.c++	/^serial_data::serial_data( const char * const value ) noexcept$/;"	f	class:serial_data
serial_data	source/sak/stream/serial_data.c++	/^serial_data::serial_data( const serial_data& orig )$/;"	f	class:serial_data
serial_data_map	include/sak/stream/serial_data.hpp	/^typedef	map< string, serial_data, ::sak::numeric_string_comparison >	serial_data_map;$/;"	t	namespace:sak::stream	typeref:typename:map<string,serial_data,::sak::numeric_string_comparison>
serial_data_pair	include/sak/stream/serial_data.hpp	/^typedef	pair< const string,  serial_data* >	serial_data_pair;$/;"	t	namespace:sak::stream	typeref:typename:pair<const string,serial_data * >
serializable	include/sak/stream/serializable.hpp	/^	serializable( ){ };$/;"	f	class:sak::stream::serializable
serializable	include/sak/stream/serializable.hpp	/^class serializable$/;"	c	namespace:sak::stream
set	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^	set(_CharT __c) noexcept { _M_type = _Type::_Char; _M_char = __c; }$/;"	f	struct:std::__detail::_Compiler::_BracketState	typeref:typename:void
set_difference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    set_difference(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
set_intersection	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    set_intersection(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
set_rdbuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      set_rdbuf(basic_streambuf<_CharT, _Traits>* __sb)$/;"	f	class:std::basic_ios	typeref:typename:void
set_symmetric_difference	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    set_symmetric_difference(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
set_union	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    set_union(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
setf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    setf(fmtflags __fmtfl)$/;"	f	class:std::ios_base	typeref:typename:fmtflags
setf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    setf(fmtflags __fmtfl, fmtflags __mask)$/;"	f	class:std::ios_base	typeref:typename:fmtflags
setstate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      setstate(iostate __state)$/;"	f	class:std::basic_ios	typeref:typename:void
shared_default_derived	include/sak/pattern/default_derived.hpp	/^shared_ptr< _T1 > shared_default_derived( _TYPE_ARGS... args )$/;"	f	namespace:sak::pattern	typeref:typename:requires::std::is_base_of<_T1,_T2>::value shared_ptr<_T1>
shared_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      shared_from_this() const$/;"	f	class:std::enable_shared_from_this	typeref:typename:shared_ptr<const _Tp>
shared_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      shared_from_this()$/;"	f	class:std::enable_shared_from_this	typeref:typename:shared_ptr<_Tp>
shared_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      shared_from_this() const$/;"	f	class:std::__enable_shared_from_this	typeref:typename:__shared_ptr<const _Tp,_Lp>
shared_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      shared_from_this()$/;"	f	class:std::__enable_shared_from_this	typeref:typename:__shared_ptr<_Tp,_Lp>
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^    shared_ptr<_Tp>::shared_ptr(std::auto_ptr<_Tp1>&& __r)$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	explicit shared_ptr(const weak_ptr<_Yp>& __r)$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	shared_ptr(_Sp_alloc_shared_tag<_Alloc> __tag, _Args&&... __args)$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	shared_ptr(_Yp* __p) : __shared_ptr<_Tp>(__p) { }$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	shared_ptr(_Yp* __p, _Deleter __d)$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	shared_ptr(_Yp* __p, _Deleter __d, _Alloc __a)$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	shared_ptr(const _Sp_counted_array_base<_Alloc>& __a,$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	shared_ptr(const shared_ptr<_Yp>& __r) noexcept$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	shared_ptr(const shared_ptr<_Yp>& __r, element_type* __p) noexcept$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	shared_ptr(nullptr_t __p, _Deleter __d)$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	shared_ptr(nullptr_t __p, _Deleter __d, _Alloc __a)$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	shared_ptr(shared_ptr<_Yp>&& __r) noexcept$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	shared_ptr(shared_ptr<_Yp>&& __r, element_type* __p) noexcept$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	shared_ptr(unique_ptr<_Yp, _Del>&& __r)$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      constexpr shared_ptr() noexcept : __shared_ptr<_Tp>() { }$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      constexpr shared_ptr(nullptr_t) noexcept : shared_ptr() { }$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      shared_ptr(const weak_ptr<_Tp>& __r, std::nothrow_t) noexcept$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      shared_ptr(shared_ptr&& __r) noexcept$/;"	f	class:std::shared_ptr
shared_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    class shared_ptr : public __shared_ptr<_Tp>$/;"	c	namespace:std
shelf	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^	unsigned int aisle, shelf;$/;"	m	struct:location	typeref:typename:unsigned int	file:
shelf	tests/sak/parser/test_serial_data.c++	/^	unsigned int aisle, shelf;$/;"	m	struct:location	typeref:typename:unsigned int	file:
shift	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  int shift;                   \/* interval duration (s) (shift) (ro) *\/$/;"	m	struct:timex	typeref:typename:int
showbase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags showbase =    _S_showbase;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
showbase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  showbase(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
showpoint	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags showpoint =   _S_showpoint;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
showpoint	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  showpoint(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
showpos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags showpos =     _S_showpos;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
showpos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  showpos(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
shrink_to_fit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      shrink_to_fit() noexcept$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR void
shrink_to_fit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      shrink_to_fit()$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
shrink_to_fit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      shrink_to_fit() noexcept$/;"	f	class:std::deque	typeref:typename:void
shrink_to_fit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      shrink_to_fit()$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
shuffle	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:void
sign	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	enum:std::money_base::part
sigset_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@sigset_t.h	/^typedef __sigset_t sigset_t;$/;"	t	typeref:typename:__sigset_t
singleton_ptr	include/sak/pattern/singleton_ptr.hpp	/^	singleton_ptr( )$/;"	f	class:sak::pattern::singleton_ptr
singleton_ptr	include/sak/pattern/singleton_ptr.hpp	/^	singleton_ptr( const singleton_ptr< _T2 >& other )$/;"	f	class:sak::pattern::singleton_ptr	typeref:typename:requires::std::is_base_of<_T1,_T2>::value
singleton_ptr	include/sak/pattern/singleton_ptr.hpp	/^class singleton_ptr$/;"	c	namespace:sak::pattern
size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      size() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    size(const _Container& __cont) noexcept(noexcept(__cont.size()))$/;"	f	namespace:std	typeref:typename:auto
size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    size(const _Tp (&)[_Nm]) noexcept$/;"	f	namespace:std	typeref:typename:size_t
size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      size() const noexcept$/;"	f	class:std::match_results	typeref:typename:size_type
size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      size() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      size() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:_GLIBCXX_NODISCARD size_type
size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      size() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::map	typeref:typename:size_type
size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^      size() const$/;"	f	class:std::stack	typeref:typename:_GLIBCXX_NODISCARD size_type
size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^      size() const$/;"	f	class:std::_Temporary_buffer	typeref:typename:size_type
size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      size() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree	typeref:typename:size_type
size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      size() const _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR size_type
size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^      static constexpr size_t size() noexcept { return sizeof...(_Idx); }$/;"	f	struct:std::integer_sequence	typeref:typename:size_t
size_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^  typedef __SIZE_TYPE__ 	size_t;$/;"	t	namespace:std	typeref:typename:__SIZE_TYPE__
size_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^typedef __SIZE_TYPE__ size_t;$/;"	t	typeref:typename:__SIZE_TYPE__
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using size_type = std::size_t;$/;"	t	struct:std::allocator_traits	typeref:typename:std::size_t
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using size_type = typename _Size<_Alloc, difference_type>::type;$/;"	t	struct:std::allocator_traits	typeref:typename:_Size<_Alloc,difference_type>::type
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      typedef size_t      size_type;$/;"	t	class:std::allocator	typeref:typename:size_t
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      typedef size_t     size_type;$/;"	t	class:std::allocator	typeref:typename:size_t
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef typename _Alloc_traits::size_type		size_type;$/;"	t	class:std::basic_string	typeref:typename:_Alloc_traits::size_type
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      using size_type = std::size_t;$/;"	t	struct:std::allocator_traits	typeref:typename:std::size_t
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      typedef std::size_t     size_type;$/;"	t	class:std::__new_allocator	typeref:typename:std::size_t
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef typename allocator_traits<_Alloc>::size_type size_type;$/;"	t	class:std::match_results	typeref:typename:allocator_traits<_Alloc>::size_type
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef size_t					size_type;$/;"	t	class:std::vector	typeref:typename:size_t
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef size_t					size_type;$/;"	t	class:std::deque	typeref:typename:size_t
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef size_t				size_type;$/;"	t	struct:std::_Deque_iterator	typeref:typename:size_t
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef typename _Rep_type::size_type		 size_type;$/;"	t	class:std::map	typeref:typename:_Rep_type::size_type
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^      typedef typename _Sequence::size_type		size_type;$/;"	t	class:std::stack	typeref:typename:_Sequence::size_type
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^      typedef ptrdiff_t   size_type;$/;"	t	class:std::_Temporary_buffer	typeref:typename:ptrdiff_t
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef size_t 				size_type;$/;"	t	class:std::_Rb_tree	typeref:typename:size_t
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	      ::size_type size_type;$/;"	t	struct:std::_Vector_base::_Vector_impl::_Asan	typeref:typename:__gnu_cxx::__alloc_traits<_Tp_alloc_type>::size_type
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      typedef size_t					size_type;$/;"	t	class:std::vector	typeref:typename:size_t
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    typedef typename _Alloc::size_type              size_type;$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:_Alloc::size_type
size_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    typedef typename _Base_type::size_type          size_type;$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:_Base_type::size_type
sketch_singleton_main	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@sketch_singleton.c++	/^int sketch_singleton_main( int argc, char** argv )$/;"	f	typeref:typename:int
sketch_singleton_main	tests/adhoc/sketch_singleton.c++	/^int sketch_singleton_main( int argc, char** argv )$/;"	f	typeref:typename:int
skipws	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags skipws =      _S_skipws;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
skipws	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  skipws(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
sleep_for	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@this_thread_sleep.h	/^      sleep_for(const chrono::duration<_Rep, _Period>& __rtime)$/;"	f	namespace:std::this_thread	typeref:typename:void
sleep_until	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@this_thread_sleep.h	/^      sleep_until(const chrono::time_point<_Clock, _Duration>& __atime)$/;"	f	namespace:std::this_thread	typeref:typename:void
smart_ptr_polymorphism_main	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@smart_ptr_polymorphism.c++	/^int smart_ptr_polymorphism_main( int argc, char** argv )$/;"	f	typeref:typename:int
smart_ptr_polymorphism_main	tests/adhoc/smart_ptr_polymorphism.c++	/^int smart_ptr_polymorphism_main( int argc, char** argv )$/;"	f	typeref:typename:int
smatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef match_results<string::const_iterator>	 smatch;$/;"	t	namespace:std	typeref:typename:match_results<string::const_iterator>
sort	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    sort(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
sort	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    sort(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
sort_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
sort_heap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^    sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
space	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	enum:std::money_base::part
space	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_base.h	/^    static const mask space 	= _ISspace;$/;"	m	struct:std::ctype_base	typeref:typename:const mask
sregex_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef regex_iterator<string::const_iterator>	sregex_iterator;$/;"	t	namespace:std	typeref:typename:regex_iterator<string::const_iterator>
sregex_token_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef regex_token_iterator<string::const_iterator>	sregex_token_iterator;$/;"	t	namespace:std	typeref:typename:regex_token_iterator<string::const_iterator>
sscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#   define sscanf __isoc23_sscanf$/;"	d
sscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#   define sscanf __isoc99_sscanf$/;"	d
ssize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    ssize(const _Container& __cont)$/;"	f	namespace:std	typeref:typename:auto
ssize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^    ssize(const _Tp (&)[_Num]) noexcept$/;"	f	namespace:std	typeref:typename:ptrdiff_t
ssize_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^typedef __ssize_t ssize_t;$/;"	t	typeref:typename:__ssize_t
ssize_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __ssize_t ssize_t;$/;"	t	typeref:typename:__ssize_t
ssub_match	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef sub_match<string::const_iterator>  ssub_match;$/;"	t	namespace:std	typeref:typename:sub_match<string::const_iterator>
stabil	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  long long stabil;            \/* pps stability (scaled ppm) (ro) *\/$/;"	m	struct:timex	typeref:typename:long long
stable_partition	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    stable_partition(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_ForwardIterator
stable_sort	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std	typeref:typename:void
stable_sort	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std	typeref:typename:void
stack	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^      stack(const _Sequence& __c = _Sequence())$/;"	f	class:std::stack
stack	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^    class stack$/;"	c	namespace:std
starts_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      starts_with(_CharT __x) const noexcept$/;"	f	class:std::basic_string	typeref:typename:bool
starts_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept$/;"	f	class:std::basic_string	typeref:typename:bool
starts_with	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      starts_with(const _CharT* __x) const noexcept$/;"	f	class:std::basic_string	typeref:typename:bool
state	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      state_type state() const noexcept { return _M_state; }$/;"	f	class:std::wbuffer_convert	typeref:typename:state_type
state	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      state_type state() const { return _M_state; }$/;"	f	class:std::wstring_convert	typeref:typename:state_type
state	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^      state() const$/;"	f	class:std::fpos	typeref:typename:_StateT
state	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^      state(_StateT __st)$/;"	f	class:std::fpos	typeref:typename:void
state	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^    int32_t *state;		\/* Array of state values.  *\/$/;"	m	struct:random_data	typeref:typename:int32_t *
state_not_recoverable	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      state_not_recoverable = 			ENOTRECOVERABLE,$/;"	e	enum:std::errc
state_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef mbstate_t         state_type;$/;"	t	struct:std::char_traits	typeref:typename:mbstate_t
state_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef std::mbstate_t  state_type;$/;"	t	struct:__gnu_cxx::_Char_types	typeref:typename:std::mbstate_t
state_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      typedef typename _Char_types<_CharT>::state_type  state_type;$/;"	t	struct:__gnu_cxx::char_traits	typeref:typename:_Char_types<_CharT>::state_type
state_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      typedef _StateT			state_type;$/;"	t	class:std::__codecvt_abstract_base	typeref:typename:_StateT
state_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      typedef _StateT			state_type;$/;"	t	class:std::codecvt	typeref:typename:_StateT
state_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      typedef mbstate_t			state_type;$/;"	t	class:std::codecvt	typeref:typename:mbstate_t
state_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      typedef typename _Codecvt::state_type 			   state_type;$/;"	t	class:std::wstring_convert	typeref:typename:_Codecvt::state_type
state_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      typedef typename _Codecvt::state_type state_type;$/;"	t	class:std::wbuffer_convert	typeref:typename:_Codecvt::state_type
static_assert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@assert.h	/^# define static_assert /;"	d
static_pointer_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    static_pointer_cast(const shared_ptr<_Up>& __r) noexcept$/;"	f	namespace:std	typeref:typename:shared_ptr<_Tp>
static_pointer_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    static_pointer_cast(shared_ptr<_Up>&& __r) noexcept$/;"	f	namespace:std	typeref:typename:shared_ptr<_Tp>
static_pointer_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    static_pointer_cast(const __shared_ptr<_Tp1, _Lp>& __r) noexcept$/;"	f	namespace:std	typeref:typename:__shared_ptr<_Tp,_Lp>
status	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  int status;                  \/* clock command\/status *\/$/;"	m	struct:timex	typeref:typename:int
stbcnt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  long long stbcnt;            \/* stability limit exceeded (ro) *\/$/;"	m	struct:timex	typeref:typename:long long
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@algorithmfwd.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@align.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocated_ptr.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@charconv.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cpp_type_traits.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@cxxabi_init_exception.h	/^namespace std$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functexcept.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@functional_hash.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@hash_bytes.h	/^namespace std$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@invoke.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@localefwd.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memoryfwd.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@move.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ostream_insert.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_compiler.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_error.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_scanner.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_abs.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_construct.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_heap.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_funcs.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_raw_storage_iter.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stringfwd.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@this_thread_sleep.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator_args.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@debug@debug.h	/^namespace std$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@glue_memory_defs.h	/^namespace std$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++allocator.h	/^namespace std$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^namespace std$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++locale.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_base.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_inline.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@messages_members.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@time_members.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	n
std	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^namespace std { typedef decltype(nullptr) nullptr_t; }$/;"	n
stderr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define stderr stderr$/;"	d
stdin	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define stdin stdin$/;"	d
stdout	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#define stdout stdout$/;"	d
steady_clock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    struct steady_clock$/;"	s	namespace:std::chrono
stobool	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@string.c++	/^bool ::sak::from_string::stobool( const string& value ) const$/;"	f	class:sak::from_string	typeref:typename:bool::
stobool	source/sak/string.c++	/^bool ::sak::from_string::stobool( const string& value ) const$/;"	f	class:sak::from_string	typeref:typename:bool::
stod	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  stod(const string& __str, size_t* __idx = 0)$/;"	f	namespace:std	typeref:typename:double
stod	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  stod(const wstring& __str, size_t* __idx = 0)$/;"	f	namespace:std	typeref:typename:double
stof	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  stof(const string& __str, size_t* __idx = 0)$/;"	f	namespace:std	typeref:typename:float
stof	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  stof(const wstring& __str, size_t* __idx = 0)$/;"	f	namespace:std	typeref:typename:float
stoi	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  stoi(const string& __str, size_t* __idx = 0, int __base = 10)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_BEGIN_NAMESPACE_VERSION _GLIBCXX_BEGIN_NAMESPACE_CXX11 int
stoi	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  stoi(const wstring& __str, size_t* __idx = 0, int __base = 10)$/;"	f	namespace:std	typeref:typename:int
stol	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  stol(const string& __str, size_t* __idx = 0, int __base = 10)$/;"	f	namespace:std	typeref:typename:long
stol	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  stol(const wstring& __str, size_t* __idx = 0, int __base = 10)$/;"	f	namespace:std	typeref:typename:long
stold	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  stold(const string& __str, size_t* __idx = 0)$/;"	f	namespace:std	typeref:typename:long double
stold	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  stold(const wstring& __str, size_t* __idx = 0)$/;"	f	namespace:std	typeref:typename:long double
stoll	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  stoll(const string& __str, size_t* __idx = 0, int __base = 10)$/;"	f	namespace:std	typeref:typename:long long
stoll	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  stoll(const wstring& __str, size_t* __idx = 0, int __base = 10)$/;"	f	namespace:std	typeref:typename:long long
store	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      store(_Fp __t, memory_order __m = memory_order_seq_cst) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:void
store	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      store(_Fp __t, memory_order __m = memory_order_seq_cst) noexcept$/;"	f	struct:std::__atomic_float	typeref:typename:void
store	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      store(_Fp __t, memory_order __m = memory_order_seq_cst) volatile noexcept$/;"	f	struct:std::__atomic_float	typeref:typename:void
store	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      store(_Tp __t, memory_order __m = memory_order_seq_cst) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:void
store	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      store(_Tp* __ptr, _Val<_Tp> __t, memory_order __m) noexcept$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
store	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      store(_Tp* __t, memory_order __m = memory_order_seq_cst) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:void
store	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
store	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      store(__int_type __i,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
store	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      store(__pointer_type __p,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
store	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      store(shared_ptr<_Tp> __desired,$/;"	f	class:std::atomic	typeref:typename:void
store	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      store(weak_ptr<_Tp> __desired,$/;"	f	class:std::atomic	typeref:typename:void
stoul	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  stoul(const string& __str, size_t* __idx = 0, int __base = 10)$/;"	f	namespace:std	typeref:typename:unsigned long
stoul	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  stoul(const wstring& __str, size_t* __idx = 0, int __base = 10)$/;"	f	namespace:std	typeref:typename:unsigned long
stoull	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  stoull(const string& __str, size_t* __idx = 0, int __base = 10)$/;"	f	namespace:std	typeref:typename:unsigned long long
stoull	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  stoull(const wstring& __str, size_t* __idx = 0, int __base = 10)$/;"	f	namespace:std	typeref:typename:unsigned long long
str	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      str() const$/;"	f	class:std::sub_match	typeref:typename:string_type
str	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      str(size_type __sub = 0) const$/;"	f	class:std::match_results	typeref:typename:string_type
stream	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  enum class io_errc { stream = 1 };$/;"	e	enum:std::io_errc
stream	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serial_data.c++	/^ostream& serial_data::stream( ostream& os ) const$/;"	f	class:serial_data	typeref:typename:ostream &
stream	include/sak/stream/deserializable.hpp	/^namespace stream$/;"	n	namespace:sak
stream	include/sak/stream/serial_data.hpp	/^namespace stream$/;"	n	namespace:sak
stream	include/sak/stream/serializable.hpp	/^namespace stream$/;"	n	namespace:sak
stream	include/sak/stream/streamable.hpp	/^namespace stream$/;"	n	namespace:sak
stream	source/sak/stream/serial_data.c++	/^ostream& serial_data::stream( ostream& os ) const$/;"	f	class:serial_data	typeref:typename:ostream &
stream_indented	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serial_data.c++	/^ostream& stream_indented($/;"	f	typeref:typename:ostream &
stream_indented	source/sak/stream/serial_data.c++	/^ostream& stream_indented($/;"	f	typeref:typename:ostream &
stream_timeout	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      stream_timeout = 				ETIME,$/;"	e	enum:std::errc
streambuf_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef basic_streambuf<_CharT, _Traits>		streambuf_type;$/;"	t	class:std::istreambuf_iterator	typeref:typename:basic_streambuf<_CharT,_Traits>
streambuf_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef basic_streambuf<_CharT, _Traits> streambuf_type;$/;"	t	class:std::ostreambuf_iterator	typeref:typename:basic_streambuf<_CharT,_Traits>
streambuf_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef typename __is_iterator_type::streambuf_type  streambuf_type;$/;"	t	function:std::__copy_move_a2	typeref:typename:__is_iterator_type::streambuf_type
streambuf_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef typename __is_iterator_type::streambuf_type  streambuf_type;$/;"	t	function:std::advance	typeref:typename:__is_iterator_type::streambuf_type
streambuf_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef typename __is_iterator_type::streambuf_type  streambuf_type;$/;"	t	function:std::find	typeref:typename:__is_iterator_type::streambuf_type
streamoff	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^  typedef __INT64_TYPE__          streamoff;$/;"	t	namespace:std	typeref:typename:__INT64_TYPE__
streampos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^  typedef fpos<mbstate_t> streampos;$/;"	t	namespace:std	typeref:typename:fpos<mbstate_t>
streamsize	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^  typedef ptrdiff_t	streamsize; \/\/ Signed integral type$/;"	t	namespace:std	typeref:typename:ptrdiff_t
string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stringfwd.h	/^  typedef basic_string<char>    string;   $/;"	t	namespace:std	typeref:typename:basic_string<char>
string	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@debug@debug.c++	/^const string ( ::sak::debug::get_real_type_name )( const string& name, const bool full_name )$/;"	f	typeref:typename:const
string	source/sak/debug/debug.c++	/^const string ( ::sak::debug::get_real_type_name )( const string& name, const bool full_name )$/;"	f	typeref:typename:const
string_literals	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  inline namespace string_literals$/;"	n	namespace:std::literals
string_literals	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^    inline namespace string_literals { }$/;"	n	namespace:std::literals
string_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::collate	typeref:typename:basic_string<_CharT>
string_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      typedef basic_string<_CharT> string_type;$/;"	t	class:std::collate_byname	typeref:typename:basic_string<_CharT>
string_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::numpunct	typeref:typename:basic_string<_CharT>
string_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::numpunct_byname	typeref:typename:basic_string<_CharT>
string_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::messages	typeref:typename:basic_string<_CharT>
string_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::messages_byname	typeref:typename:basic_string<_CharT>
string_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::money_get	typeref:typename:basic_string<_CharT>
string_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::money_put	typeref:typename:basic_string<_CharT>
string_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::moneypunct	typeref:typename:basic_string<_CharT>
string_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::moneypunct_byname	typeref:typename:basic_string<_CharT>
string_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef basic_string<value_type>			string_type;$/;"	t	class:std::sub_match	typeref:typename:basic_string<value_type>
string_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef std::basic_string<char_type>		   string_type;$/;"	t	class:std::match_results	typeref:typename:std::basic_string<char_type>
string_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef std::basic_string<char_type>	string_type;$/;"	t	class:std::regex_traits	typeref:typename:std::basic_string<char_type>
string_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef typename traits_type::string_type   string_type;$/;"	t	class:std::basic_regex	typeref:typename:traits_type::string_type
string_view_literals	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@c++config.h	/^    inline namespace string_view_literals { }$/;"	n	namespace:std::literals
strtol	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#  define strtol __isoc23_strtol$/;"	d
strtol_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#   define strtol_l __isoc23_strtol_l$/;"	d
strtoll	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#  define strtoll __isoc23_strtoll$/;"	d
strtoll_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#   define strtoll_l __isoc23_strtoll_l$/;"	d
strtoq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#   define strtoq /;"	d
strtoul	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#  define strtoul __isoc23_strtoul$/;"	d
strtoul_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#   define strtoul_l __isoc23_strtoul_l$/;"	d
strtoull	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#  define strtoull __isoc23_strtoull$/;"	d
strtoull_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#   define strtoull_l __isoc23_strtoull_l$/;"	d
strtouq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdlib.h	/^#   define strtouq /;"	d
sub_match	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      constexpr sub_match() noexcept : matched() { }$/;"	f	class:std::sub_match
sub_match	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    class sub_match$/;"	c	namespace:std
substr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      substr(size_type __pos = 0, size_type __n = npos) const$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR basic_string
suffix	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      suffix() const$/;"	f	class:std::match_results	typeref:typename:const_reference
suite_finished	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^		const string suite_finished		=	"%SUITE_FINISHED% time=0";$/;"	m	class:sak::debug::test_handler::netbeans_cpp_simple_test::output_texts	typeref:typename:const string
suite_name	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^		const string& suite_name;$/;"	m	class:sak::debug::test_handler::netbeans_cpp_simple_test::output_texts	typeref:typename:const string &
suite_name	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^	string suite_name;$/;"	m	class:sak::debug::test_handler::netbeans_cpp_simple_test	typeref:typename:string
suite_started	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^		const string suite_started		=	"%SUITE_STARTED%";$/;"	m	class:sak::debug::test_handler::netbeans_cpp_simple_test::output_texts	typeref:typename:const string
suite_starting	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@debug@test_handler@netbeans_cpp_simple_test.c++	/^const string netbeans_cpp_simple_test::output_texts::suite_starting( )$/;"	f	class:netbeans_cpp_simple_test::output_texts	typeref:typename:const string
suite_starting	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^			const string suite_starting		=	"Iniciando suíte de testes: ";$/;"	m	struct:sak::debug::test_handler::netbeans_cpp_simple_test::output_texts::__anon4fbc4f980108	typeref:typename:const string
suite_starting	source/sak/debug/test_handler/netbeans_cpp_simple_test.c++	/^const string netbeans_cpp_simple_test::output_texts::suite_starting( )$/;"	f	class:netbeans_cpp_simple_test::output_texts	typeref:typename:const string
suseconds_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@select.h	/^typedef __suseconds_t suseconds_t;$/;"	t	typeref:typename:__suseconds_t
suseconds_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __suseconds_t suseconds_t;$/;"	t	typeref:typename:__suseconds_t
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      swap(basic_ios& __rhs) noexcept$/;"	f	class:std::basic_ios	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^    swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^    exception_ptr::swap(exception_ptr &__other) _GLIBCXX_USE_NOEXCEPT$/;"	f	class:std::__exception_ptr::exception_ptr	typeref:typename:_GLIBCXX_EH_PTR_USED void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^    swap(exception_ptr& __lhs, exception_ptr& __rhs)$/;"	f	namespace:std::__exception_ptr	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@move.h	/^    swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR typename enable_if<__is_swappable<_Tp>::value>::type
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@move.h	/^    swap(_Tp& __a, _Tp& __b)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR typename enable_if<__and_<__not_<__is_tuple_like<_Tp>>,is_move_constructible<_Tp>,is_move_assignable<_Tp>>::value>::type
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^	swap(_Optional_alloc& __other) noexcept$/;"	f	union:std::_Node_handle_common::_Optional_alloc	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      swap(_Node_handle& __nh) noexcept$/;"	f	class:std::_Node_handle	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      swap(_Node_handle& __x, _Node_handle& __y)$/;"	f	namespace:std	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      swap(basic_regex& __rhs) noexcept$/;"	f	class:std::basic_regex	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      swap(match_results& __that) noexcept$/;"	f	class:std::match_results	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      swap(sub_match& __s) noexcept(__is_nothrow_swappable<_BiIter>::value)$/;"	f	class:std::sub_match	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    swap(basic_regex<_Ch_type, _Rx_traits>& __lhs,$/;"	f	namespace:std	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^    swap(match_results<_Bi_iter, _Alloc>& __lhs,$/;"	f	namespace:std	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    swap(shared_ptr<_Tp>& __a, shared_ptr<_Tp>& __b) noexcept$/;"	f	namespace:std	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    swap(weak_ptr<_Tp>& __a, weak_ptr<_Tp>& __b) noexcept$/;"	f	namespace:std	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      swap(value_type& __r, memory_order __o) noexcept$/;"	f	class:std::_Sp_atomic	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      swap(__shared_ptr<_Tp, _Lp>& __other) noexcept$/;"	f	class:std::__shared_ptr	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      swap(__weak_ptr& __s) noexcept$/;"	f	class:std::__weak_ptr	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    swap(__shared_ptr<_Tp, _Lp>& __a, __shared_ptr<_Tp, _Lp>& __b) noexcept$/;"	f	namespace:std	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^    swap(__weak_ptr<_Tp, _Lp>& __a, __weak_ptr<_Tp, _Lp>& __b) noexcept$/;"	f	namespace:std	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      void swap(function& __x) noexcept$/;"	f	class:std::function	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    swap(function<_Res(_Args...)>& __x, function<_Res(_Args...)>& __y) noexcept$/;"	f	namespace:std	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    swap(thread& __t) noexcept$/;"	f	class:std::thread	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^  swap(thread& __x, thread& __y) noexcept$/;"	f	namespace:std	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      swap(reference __x, reference __y) _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      swap(vector& __x) _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    swap(_Bit_reference __x, _Bit_reference __y) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    swap(_Bit_reference __x, bool& __y) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    swap(bool& __x, _Bit_reference __y) noexcept$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      swap(deque& __x) _GLIBCXX_NOEXCEPT$/;"	f	class:std::deque	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^    swap(deque<_Tp,_Alloc>& __x, deque<_Tp,_Alloc>& __y)$/;"	f	namespace:std	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      swap(map& __x)$/;"	f	class:std::map	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^    swap(map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      swap(const pair& __p) const$/;"	f	struct:std::pair	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^      swap(pair& __p)$/;"	f	struct:std::pair	typeref:typename:_GLIBCXX20_CONSTEXPR void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    swap(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	namespace:std	typeref:typename:requires is_swappable_v<const _T1> && is_swappable_v<const _T2> void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    swap(pair<_T1, _T2>& __x, pair<_T1, _T2>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR typename enable_if<__and_<__is_swappable<_T1>,__is_swappable<_T2>>::value>::type
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^      swap(stack& __s)$/;"	f	class:std::stack	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^    swap(stack<_Tp, _Seq>& __x, stack<_Tp, _Seq>& __y)$/;"	f	namespace:std	typeref:typename:enable_if<__is_swappable<_Seq>::value>::type
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    swap(_Rb_tree& __t)$/;"	f	class:std::_Rb_tree	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^    swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	namespace:std	typeref:typename:void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      swap(vector& __x) _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^    swap(vector<_Tp, _Alloc>& __x, vector<_Tp, _Alloc>& __y)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      swap(__uniq_ptr_impl& __rhs) noexcept$/;"	f	class:std::__uniq_ptr_impl	typeref:typename:_GLIBCXX23_CONSTEXPR void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      swap(unique_ptr& __u) noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR void
swap	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    swap(unique_ptr<_Tp, _Dp>& __x,$/;"	f	namespace:std	typeref:typename:_GLIBCXX23_CONSTEXPR typename enable_if<__is_swappable<_Dp>::value>::type
swap_ranges	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algobase.h	/^    swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator2
swscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#    define swscanf __isoc23_swscanf$/;"	d
swscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#    define swscanf __isoc99_swscanf$/;"	d
symbol	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	enum:std::money_base::part
sync	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      sync()$/;"	f	class:std::wbuffer_convert	typeref:typename:int
syntax_option_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_constants.h	/^  enum syntax_option_type : unsigned int$/;"	g	namespace:std::regex_constants	typeref:typename:unsigned int
sys_days	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    using sys_days = sys_time<days>;$/;"	t	namespace:std::chrono	typeref:typename:sys_time<days>
sys_seconds	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    using sys_seconds = sys_time<seconds>;$/;"	t	namespace:std::chrono	typeref:typename:sys_time<seconds>
sys_time	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using sys_time = time_point<system_clock, _Duration>;$/;"	t	namespace:std::chrono	typeref:typename:time_point<system_clock,_Duration>
system_clock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    struct system_clock$/;"	s	namespace:std::chrono
system_error	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    struct system_error : std::runtime_error$/;"	s	class:std::ios_base
tab_index	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serial_data.c++	/^	const int			tab_index;$/;"	m	struct:args_bundle	typeref:typename:const int	file:
tab_index	source/sak/stream/serial_data.c++	/^	const int			tab_index;$/;"	m	struct:args_bundle	typeref:typename:const int	file:
tab_size	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serial_data.c++	/^const short tab_size	=	4;	\/\/	Tamanho da tabulação.$/;"	v	typeref:typename:const short
tab_size	source/sak/stream/serial_data.c++	/^const short tab_size	=	4;	\/\/	Tamanho da tabulação.$/;"	v	typeref:typename:const short
table	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      table() const throw()$/;"	f	class:std::ctype	typeref:typename:const mask *
table_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      static const size_t      table_size = 1 + static_cast<unsigned char>(-1);$/;"	m	class:std::ctype	typeref:typename:const size_t
tai	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  int tai;                     \/* TAI offset (ro) *\/$/;"	m	struct:timex	typeref:typename:int
target	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	target() const noexcept$/;"	f	class:std::function	typeref:typename:const _Functor *
target	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^	target() noexcept$/;"	f	class:std::function	typeref:typename:_Functor *
target	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serial_data.c++	/^	const serial_data&	target;$/;"	m	struct:args_bundle	typeref:typename:const serial_data &	file:
target	source/sak/stream/serial_data.c++	/^	const serial_data&	target;$/;"	m	struct:args_bundle	typeref:typename:const serial_data &	file:
target_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^      target_type() const noexcept$/;"	f	class:std::function	typeref:typename:const type_info &
test	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    test(memory_order __m = memory_order_seq_cst) const noexcept$/;"	f	struct:std::atomic_flag	typeref:typename:_GLIBCXX_ALWAYS_INLINE bool
test	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    test(memory_order __m = memory_order_seq_cst) const volatile noexcept$/;"	f	struct:std::atomic_flag	typeref:typename:_GLIBCXX_ALWAYS_INLINE bool
test	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@debug@test_handler@netbeans_cpp_simple_test.c++	/^void netbeans_cpp_simple_test::test( const string& name )$/;"	f	class:netbeans_cpp_simple_test	typeref:typename:void
test	include/sak/debug/test_handler/test_handler.hpp	/^	inline	void test( const string& name, const function< void( test_interface& ) >& target ){ test/;"	f	class:sak::debug::test_handler::test_handler	typeref:typename:void
test	include/sak/debug/test_handler/test_handler.hpp	/^	void test( const function< void( test_interface& ) >& target, const string& name )$/;"	f	class:sak::debug::test_handler::test_handler	typeref:typename:void
test	source/sak/debug/test_handler/netbeans_cpp_simple_test.c++	/^void netbeans_cpp_simple_test::test( const string& name )$/;"	f	class:netbeans_cpp_simple_test	typeref:typename:void
testFrom_string	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@test_string_conversion.c++	/^void testFrom_string( test_interface& test )$/;"	f	typeref:typename:void
testFrom_string	tests/sak/test_string_conversion.c++	/^void testFrom_string( test_interface& test )$/;"	f	typeref:typename:void
testFrom_stringClone	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@test_string_conversion.c++	/^void testFrom_stringClone( test_interface& test )$/;"	f	typeref:typename:void
testFrom_stringClone	tests/sak/test_string_conversion.c++	/^void testFrom_stringClone( test_interface& test )$/;"	f	typeref:typename:void
testTo_string	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@test_string_conversion.c++	/^void testTo_string( test_interface& test )$/;"	f	typeref:typename:void
testTo_string	tests/sak/test_string_conversion.c++	/^void testTo_string( test_interface& test )$/;"	f	typeref:typename:void
test_and_set	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    test_and_set(memory_order __m = memory_order_seq_cst) noexcept$/;"	f	struct:std::atomic_flag	typeref:typename:_GLIBCXX_ALWAYS_INLINE bool
test_and_set	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept$/;"	f	struct:std::atomic_flag	typeref:typename:_GLIBCXX_ALWAYS_INLINE bool
test_failed	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@debug@test_handler@netbeans_cpp_simple_test.c++	/^const string netbeans_cpp_simple_test::output_texts::test_failed( const string& message )	$/;"	f	class:netbeans_cpp_simple_test::output_texts	typeref:typename:const string
test_failed	source/sak/debug/test_handler/netbeans_cpp_simple_test.c++	/^const string netbeans_cpp_simple_test::output_texts::test_failed( const string& message )	$/;"	f	class:netbeans_cpp_simple_test::output_texts	typeref:typename:const string
test_finished	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@debug@test_handler@netbeans_cpp_simple_test.c++	/^const string netbeans_cpp_simple_test::output_texts::test_finished( )$/;"	f	class:netbeans_cpp_simple_test::output_texts	typeref:typename:const string
test_finished	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^			const string test_finished		=	"Fim do teste: ";$/;"	m	struct:sak::debug::test_handler::netbeans_cpp_simple_test::output_texts::__anon4fbc4f980108	typeref:typename:const string
test_finished	source/sak/debug/test_handler/netbeans_cpp_simple_test.c++	/^const string netbeans_cpp_simple_test::output_texts::test_finished( )$/;"	f	class:netbeans_cpp_simple_test::output_texts	typeref:typename:const string
test_handler	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^namespace test_handler$/;"	n	namespace:sak::debug
test_handler	include/sak/debug/test_handler/test_handler.hpp	/^class test_handler$/;"	c	namespace:sak::debug::test_handler
test_handler	include/sak/debug/test_handler/test_handler.hpp	/^namespace test_handler$/;"	n	namespace:sak::debug
test_interface	include/sak/debug/test_handler/test_handler.hpp	/^class test_interface$/;"	c	namespace:sak::debug::test_handler
test_name	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^		const string& test_name;$/;"	m	class:sak::debug::test_handler::netbeans_cpp_simple_test::output_texts	typeref:typename:const string &
test_name	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^	string test_name;$/;"	m	class:sak::debug::test_handler::netbeans_cpp_simple_test	typeref:typename:string
test_started	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@debug@test_handler@netbeans_cpp_simple_test.c++	/^const string netbeans_cpp_simple_test::output_texts::test_started( )	$/;"	f	class:netbeans_cpp_simple_test::output_texts	typeref:typename:const string
test_started	source/sak/debug/test_handler/netbeans_cpp_simple_test.c++	/^const string netbeans_cpp_simple_test::output_texts::test_started( )	$/;"	f	class:netbeans_cpp_simple_test::output_texts	typeref:typename:const string
test_starting	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^			const string test_starting		=	"Iniciando teste: ";$/;"	m	struct:sak::debug::test_handler::netbeans_cpp_simple_test::output_texts::__anon4fbc4f980108	typeref:typename:const string
testserial_data	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^void testserial_data( test_interface& test )$/;"	f	typeref:typename:void
testserial_data	tests/sak/parser/test_serial_data.c++	/^void testserial_data( test_interface& test )$/;"	f	typeref:typename:void
text_file_busy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      text_file_busy = 				ETXTBSY,$/;"	e	enum:std::errc
text_set	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^	} text_set;$/;"	m	class:sak::debug::test_handler::netbeans_cpp_simple_test	typeref:class:sak::debug::test_handler::netbeans_cpp_simple_test::output_texts
this_thread	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^  namespace this_thread$/;"	n	namespace:std
this_thread	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@this_thread_sleep.h	/^  namespace this_thread$/;"	n	namespace:std
thousands_sep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      thousands_sep() const$/;"	f	class:std::numpunct	typeref:typename:char_type
thousands_sep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      thousands_sep() const$/;"	f	class:std::moneypunct	typeref:typename:char_type
thousands_sep	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@locale.h	/^  char *thousands_sep;		\/* Thousands separator.  *\/$/;"	m	struct:lconv	typeref:typename:char *
thread	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^      thread(_Callable&& __f, _Args&&... __args)$/;"	f	class:std::thread
thread	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    thread(thread&& __t) noexcept$/;"	f	class:std::thread
thread	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^  class thread$/;"	c	namespace:std
thread_local_storage	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@gthr-default.h	/^static void *thread_local_storage = NULL;$/;"	v	typeref:typename:void *
thread_test_main	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@thread_test.c++	/^int thread_test_main( int argc, char** argv )$/;"	f	typeref:typename:int
thread_test_main	tests/adhoc/thread_test.c++	/^int thread_test_main( int argc, char** argv )$/;"	f	typeref:typename:int
throw_with_nested	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@nested_exception.h	/^    throw_with_nested(_Tp&& __t)$/;"	f	namespace:std	typeref:typename:void
tick	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  long long tick;              \/* (modified) usecs between clock ticks *\/$/;"	m	struct:timex	typeref:typename:long long
tie	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      tie() const$/;"	f	class:std::basic_ios	typeref:typename:basic_ostream<_CharT,_Traits> *
tie	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      tie(basic_ostream<_CharT, _Traits>* __tiestr)$/;"	f	class:std::basic_ios	typeref:typename:basic_ostream<_CharT,_Traits> *
time	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  struct timeval time;     \/* (read only, except for ADJ_SETOFFSET) *\/$/;"	m	struct:timex	typeref:struct:timeval
time	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^    static const category time		= 1L << 3;$/;"	m	class:std::locale	typeref:typename:const category
time	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#  define time __time6/;"	d
time_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^  class time_base$/;"	c	namespace:std
time_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      time_get(size_t __refs = 0)$/;"	f	class:std::time_get
time_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    class time_get : public locale::facet, public time_base$/;"	c	namespace:std
time_get_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      time_get_byname(const char*, size_t __refs = 0)$/;"	f	class:std::time_get_byname
time_get_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      time_get_byname(const string& __s, size_t __refs = 0)$/;"	f	class:std::time_get_byname
time_get_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    class time_get_byname : public time_get<_CharT, _InIter>$/;"	c	namespace:std
time_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	  constexpr time_point(const time_point<clock, _Dur2>& __t)$/;"	f	class:std::chrono::time_point
time_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	constexpr explicit time_point(const duration& __dur)$/;"	f	class:std::chrono::time_point
time_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	constexpr time_point() : __d(duration::zero())$/;"	f	class:std::chrono::time_point
time_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      class time_point$/;"	c	namespace:std::chrono
time_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      typedef chrono::time_point<steady_clock, duration>	time_point;$/;"	t	struct:std::chrono::steady_clock	typeref:typename:chrono::time_point<steady_clock,duration>
time_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      typedef chrono::time_point<system_clock, duration> 	time_point;$/;"	t	struct:std::chrono::system_clock	typeref:typename:chrono::time_point<system_clock,duration>
time_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using time_point                = chrono::time_point<__file_clock>;$/;"	t	struct:std::filesystem::__file_clock	typeref:typename:chrono::time_point<__file_clock>
time_point_cast	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      time_point_cast(const time_point<_Clock, _Dur>& __t)$/;"	f	namespace:std::chrono	typeref:typename:_GLIBCXX_NODISCARD __enable_if_t<__is_duration<_ToDur>::value,time_point<_Clock,_ToDur>>
time_put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      time_put(size_t __refs = 0)$/;"	f	class:std::time_put
time_put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    class time_put : public locale::facet$/;"	c	namespace:std
time_put_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      time_put_byname(const char*, size_t __refs = 0)$/;"	f	class:std::time_put_byname
time_put_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      time_put_byname(const string& __s, size_t __refs = 0)$/;"	f	class:std::time_put_byname
time_put_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    class time_put_byname : public time_put<_CharT, _OutIter>$/;"	c	namespace:std
time_since_epoch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	time_since_epoch() const$/;"	f	class:std::chrono::time_point	typeref:typename:duration
time_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@time_t.h	/^typedef __time64_t time_t;$/;"	t	typeref:typename:__time64_t
time_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@time_t.h	/^typedef __time_t time_t;$/;"	t	typeref:typename:__time_t
timed_out	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      timed_out = 				ETIMEDOUT,$/;"	e	enum:std::errc
timegm	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#   define timegm __timegm6/;"	d
timer_gettime	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#   define timer_gettime __timer_gettime6/;"	d
timer_settime	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#   define timer_settime __timer_settime6/;"	d
timer_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@timer_t.h	/^typedef __timer_t timer_t;$/;"	t	typeref:typename:__timer_t
timespec	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_timespec.h	/^struct timespec$/;"	s
timespec_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#   define timespec_get __timespec_get6/;"	d
timespec_getres	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@time.h	/^#   define timespec_getres __timespec_getres6/;"	d
timeval	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_timeval.h	/^struct timeval$/;"	s
timex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^struct timex$/;"	s
tm	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_tm.h	/^struct tm$/;"	s
tm_gmtoff	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_tm.h	/^  long int tm_gmtoff;		\/* Seconds east of UTC.  *\/$/;"	m	struct:tm	typeref:typename:long int
tm_hour	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_tm.h	/^  int tm_hour;			\/* Hours.	[0-23] *\/$/;"	m	struct:tm	typeref:typename:int
tm_isdst	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_tm.h	/^  int tm_isdst;			\/* DST.		[-1\/0\/1]*\/$/;"	m	struct:tm	typeref:typename:int
tm_mday	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_tm.h	/^  int tm_mday;			\/* Day.		[1-31] *\/$/;"	m	struct:tm	typeref:typename:int
tm_min	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_tm.h	/^  int tm_min;			\/* Minutes.	[0-59] *\/$/;"	m	struct:tm	typeref:typename:int
tm_mon	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_tm.h	/^  int tm_mon;			\/* Month.	[0-11] *\/$/;"	m	struct:tm	typeref:typename:int
tm_sec	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_tm.h	/^  int tm_sec;			\/* Seconds.	[0-60] (1 leap second) *\/$/;"	m	struct:tm	typeref:typename:int
tm_wday	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_tm.h	/^  int tm_wday;			\/* Day of week.	[0-6] *\/$/;"	m	struct:tm	typeref:typename:int
tm_yday	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_tm.h	/^  int tm_yday;			\/* Days in year.[0-365]	*\/$/;"	m	struct:tm	typeref:typename:int
tm_year	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_tm.h	/^  int tm_year;			\/* Year	- 1900.  *\/$/;"	m	struct:tm	typeref:typename:int
tm_zone	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_tm.h	/^  const char *tm_zone;		\/* Timezone abbreviation.  *\/$/;"	m	struct:tm	typeref:typename:const char *
tmpfile	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#  define tmpfile tmpfile6/;"	d
to_address	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    to_address(_Tp* __ptr) noexcept$/;"	f	namespace:std	typeref:typename:_Tp *
to_address	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    to_address(const _Ptr& __ptr) noexcept$/;"	f	namespace:std	typeref:typename:auto
to_bytes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      to_bytes(_Elem __wchar)$/;"	f	class:std::wstring_convert	typeref:typename:byte_string
to_bytes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      to_bytes(const _Elem* __first, const _Elem* __last)$/;"	f	class:std::wstring_convert	typeref:typename:byte_string
to_bytes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      to_bytes(const _Elem* __ptr)$/;"	f	class:std::wstring_convert	typeref:typename:byte_string
to_bytes	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      to_bytes(const wide_string& __wstr)$/;"	f	class:std::wstring_convert	typeref:typename:byte_string
to_char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      to_char_type(const int_type& __c) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::char_traits	typeref:typename:_GLIBCXX_CONSTEXPR char_type
to_char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      to_char_type(const int_type& __c) noexcept$/;"	f	struct:std::char_traits	typeref:typename:char_type
to_char_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      to_char_type(const int_type& __c)$/;"	f	struct:__gnu_cxx::char_traits	typeref:typename:_GLIBCXX_CONSTEXPR char_type
to_int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      to_int_type(const char_type& __c) _GLIBCXX_NOEXCEPT$/;"	f	struct:std::char_traits	typeref:typename:_GLIBCXX_CONSTEXPR int_type
to_int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      to_int_type(const char_type& __c) noexcept$/;"	f	struct:std::char_traits	typeref:typename:int_type
to_int_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@char_traits.h	/^      to_int_type(const char_type& __c)$/;"	f	struct:__gnu_cxx::char_traits	typeref:typename:_GLIBCXX_CONSTEXPR int_type
to_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_string(double __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD string
to_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_string(float __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD string
to_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_string(int __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD string
to_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_string(long __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD string
to_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_string(long double __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD string
to_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_string(long long __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD string
to_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_string(unsigned __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD string
to_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_string(unsigned long __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD string
to_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_string(unsigned long long __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD string
to_string	include/sak/string.hpp	/^inline const string to_string( bool value ) { return ( value )? "true" : "false" ; };$/;"	f	namespace:sak	typeref:typename:const string
to_string	include/sak/string.hpp	/^inline const string& to_string( const string& value ) { return value; };$/;"	f	namespace:sak	typeref:typename:const string &
to_sys	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	to_sys(const chrono::file_time<_Dur>& __t) noexcept$/;"	f	struct:std::filesystem::__file_clock	typeref:typename:chrono::sys_time<_Dur>
to_time_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      to_time_t(const time_point& __t) noexcept$/;"	f	struct:std::chrono::system_clock	typeref:typename:std::time_t
to_wstring	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_wstring(double __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD wstring
to_wstring	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_wstring(float __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD wstring
to_wstring	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_wstring(int __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD wstring
to_wstring	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_wstring(long __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD wstring
to_wstring	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_wstring(long double __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD wstring
to_wstring	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_wstring(long long __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD wstring
to_wstring	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_wstring(unsigned __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD wstring
to_wstring	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_wstring(unsigned long __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD wstring
to_wstring	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^  to_wstring(unsigned long long __val)$/;"	f	namespace:std	typeref:typename:_GLIBCXX_NODISCARD wstring
toascii	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define toascii(c)	__toascii /;"	d
toascii_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#   define toascii_l(c,l)	__toascii_l /;"	d
token	include/sak/parser/token.hpp	/^	token( $/;"	f	class:sak::parser::token
token	include/sak/parser/token.hpp	/^class token$/;"	c	namespace:sak::parser
tolerance	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@timex.h	/^  long long tolerance;         \/* clock frequency tolerance (ppm) (ro) *\/$/;"	m	struct:timex	typeref:typename:long long
tolower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      tolower(char_type __c) const$/;"	f	class:std::__ctype_abstract_base	typeref:typename:char_type
tolower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      tolower(char_type __c) const$/;"	f	class:std::ctype	typeref:typename:char_type
tolower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      tolower(char_type* __lo, const char_type* __hi) const$/;"	f	class:std::__ctype_abstract_base	typeref:typename:const char_type *
tolower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      tolower(char_type* __lo, const char_type* __hi) const$/;"	f	class:std::ctype	typeref:typename:const char_type *
tolower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    tolower(_CharT __c, const locale& __loc)$/;"	f	namespace:std	typeref:typename:_CharT
tolower	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define tolower(c)	__tobody (c, tolower, *__ctype_tolower_/;"	d
tolower_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define tolower_l(c, locale)	__tolower_l /;"	d
too_many_files_open	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      too_many_files_open = 			EMFILE,$/;"	e	enum:std::errc
too_many_files_open_in_system	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      too_many_files_open_in_system = 		ENFILE,$/;"	e	enum:std::errc
too_many_links	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      too_many_links = 				EMLINK,$/;"	e	enum:std::errc
too_many_symbolic_link_levels	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      too_many_symbolic_link_levels = 		ELOOP,$/;"	e	enum:std::errc
top	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^      top() const$/;"	f	class:std::stack	typeref:typename:_GLIBCXX_NODISCARD const_reference
top	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^      top()$/;"	f	class:std::stack	typeref:typename:_GLIBCXX_NODISCARD reference
toupper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      toupper(char_type *__lo, const char_type* __hi) const$/;"	f	class:std::__ctype_abstract_base	typeref:typename:const char_type *
toupper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      toupper(char_type *__lo, const char_type* __hi) const$/;"	f	class:std::ctype	typeref:typename:const char_type *
toupper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      toupper(char_type __c) const$/;"	f	class:std::__ctype_abstract_base	typeref:typename:char_type
toupper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      toupper(char_type __c) const$/;"	f	class:std::ctype	typeref:typename:char_type
toupper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    toupper(_CharT __c, const locale& __loc)$/;"	f	namespace:std	typeref:typename:_CharT
toupper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define toupper(c)	__tobody (c, toupper, *__ctype_toupper_/;"	d
toupper_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@ctype.h	/^#  define toupper_l(c, locale)	__toupper_l /;"	d
traits_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      typedef _Traits                                traits_type;$/;"	t	class:std::basic_ios	typeref:typename:_Traits
traits_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef _Traits					traits_type;$/;"	t	class:std::basic_string	typeref:typename:_Traits
traits_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	using traits_type = typename string_type::traits_type;$/;"	t	struct:std::sub_match::__string_view	typeref:typename:string_type::traits_type
traits_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef _Rx_traits			  traits_type;$/;"	t	class:std::basic_regex	typeref:typename:_Rx_traits
traits_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef _Traits					traits_type;$/;"	t	class:std::istreambuf_iterator	typeref:typename:_Traits
traits_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef _Traits			       traits_type;$/;"	t	class:std::ostreambuf_iterator	typeref:typename:_Traits
traits_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef typename __is_iterator_type::traits_type	   traits_type;$/;"	t	function:std::__copy_move_a2	typeref:typename:__is_iterator_type::traits_type
traits_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef typename __is_iterator_type::traits_type	   traits_type;$/;"	t	function:std::advance	typeref:typename:__is_iterator_type::traits_type
traits_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@streambuf_iterator.h	/^      typedef typename __is_iterator_type::traits_type     traits_type;$/;"	t	function:std::find	typeref:typename:__is_iterator_type::traits_type
transform	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      transform(const _CharT* __lo, const _CharT* __hi) const$/;"	f	class:std::collate	typeref:typename:string_type
transform	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	transform(_Fwd_iter __first, _Fwd_iter __last) const$/;"	f	class:std::regex_traits	typeref:typename:string_type
transform	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    transform(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
transform	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    transform(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
transform_primary	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^	transform_primary(_Fwd_iter __first, _Fwd_iter __last) const$/;"	f	class:std::regex_traits	typeref:typename:string_type
translate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      translate(char_type __c) const$/;"	f	class:std::regex_traits	typeref:typename:char_type
translate_nocase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      translate_nocase(char_type __c) const$/;"	f	class:std::regex_traits	typeref:typename:char_type
treat_as_floating_point	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      struct treat_as_floating_point$/;"	s	namespace:std::chrono
treat_as_floating_point_v	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      inline constexpr bool treat_as_floating_point_v =$/;"	v	namespace:std::chrono	typeref:typename:bool
truename	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      truename() const$/;"	f	class:std::numpunct	typeref:typename:string_type
trunc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const openmode trunc =	_S_trunc;$/;"	m	class:std::ios_base	typeref:typename:const openmode
try_emplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	try_emplace(const key_type& __k, _Args&&... __args)$/;"	f	class:std::map	typeref:typename:pair<iterator,bool>
try_emplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	try_emplace(const_iterator __hint, const key_type& __k,$/;"	f	class:std::map	typeref:typename:iterator
try_emplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	try_emplace(const_iterator __hint, key_type&& __k, _Args&&... __args)$/;"	f	class:std::map	typeref:typename:iterator
try_emplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	try_emplace(key_type&& __k, _Args&&... __args)$/;"	f	class:std::map	typeref:typename:pair<iterator,bool>
tuple_element	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    struct tuple_element<0, pair<_Tp1, _Tp2>>$/;"	s	namespace:std
tuple_element	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    struct tuple_element<1, pair<_Tp1, _Tp2>>$/;"	s	namespace:std
tuple_element	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    struct tuple_element<__i, const _Tp>$/;"	s	namespace:std
tuple_element	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    struct tuple_element<__i, const volatile _Tp>$/;"	s	namespace:std
tuple_element	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    struct tuple_element<__i, volatile _Tp>$/;"	s	namespace:std
tuple_element_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    using tuple_element_t = typename tuple_element<__i, _Tp>::type;$/;"	t	namespace:std	typeref:typename:tuple_element<__i,_Tp>::type
tuple_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    struct tuple_size<pair<_Tp1, _Tp2>>$/;"	s	namespace:std
tuple_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    struct tuple_size<const __enable_if_has_tuple_size<_Tp>>$/;"	s	namespace:std
tuple_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    struct tuple_size<const volatile __enable_if_has_tuple_size<_Tp>>$/;"	s	namespace:std
tuple_size	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    struct tuple_size<volatile __enable_if_has_tuple_size<_Tp>>$/;"	s	namespace:std
tuple_size_v	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    inline constexpr size_t tuple_size_v = tuple_size<_Tp>::value;$/;"	v	namespace:std	typeref:typename:size_t
tv_nsec	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_timespec.h	/^  __syscall_slong_t tv_nsec;	\/* Nanoseconds.  *\/$/;"	m	struct:timespec	typeref:typename:__syscall_slong_t
tv_nsec	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_timespec.h	/^  long int tv_nsec;  \/* Nanoseconds.  *\/$/;"	m	struct:timespec	typeref:typename:long int
tv_sec	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_timespec.h	/^  __time64_t tv_sec;		\/* Seconds.  *\/$/;"	m	struct:timespec	typeref:typename:__time64_t
tv_sec	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_timeval.h	/^  __time64_t tv_sec;		\/* Seconds.  *\/$/;"	m	struct:timeval	typeref:typename:__time64_t
tv_usec	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@struct_timeval.h	/^  __suseconds64_t tv_usec;	\/* Microseconds.  *\/$/;"	m	struct:timeval	typeref:typename:__suseconds64_t
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	  using type = _Func<_Alloc>;$/;"	t	struct:std::allocator_traits::_Ptr	typeref:typename:_Func<_Alloc>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	  using type = decltype(__test<_Alloc>(0));$/;"	t	struct:std::allocator_traits::__construct_helper
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;$/;"	t	struct:std::allocator_traits::_Ptr	typeref:typename:pointer_traits<pointer>::template rebind<_Tp>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	using type = typename _Tp::template rebind<_Up>::other;$/;"	t	struct:std::__allocator_traits_base::__rebind	typeref:typename:_Tp::template rebind<_Up>::other
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	{ using type = typename _A2::difference_type; };$/;"	t	struct:std::allocator_traits::_Diff	typeref:typename:_A2::difference_type
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	{ using type = typename _A2::size_type; };$/;"	t	struct:std::allocator_traits::_Size	typeref:typename:_A2::size_type
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^	{ using type = typename pointer_traits<_PtrT>::difference_type; };$/;"	t	struct:std::allocator_traits::_Diff	typeref:typename:pointer_traits<_PtrT>::difference_type
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using type = chrono::duration<__cr, typename __r::type>;$/;"	t	struct:std::__duration_common_type	typeref:typename:chrono::duration<__cr,typename __r::type>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using type = chrono::duration<typename common_type<_Rep>::type,$/;"	t	struct:std::common_type	typeref:typename:chrono::duration<typename common_type<_Rep>::type,typename _Period::type>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^      using type = chrono::time_point<_Clock, typename _CT::type>;$/;"	t	struct:std::__timepoint_common_type	typeref:typename:chrono::time_point<_Clock,typename _CT::type>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    { using type = chrono::time_point<_Clock, _Duration>; };$/;"	t	struct:std::common_type	typeref:typename:chrono::time_point<_Clock,_Duration>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^	struct __not_pair { using type = void; };$/;"	t	struct:std::pmr::polymorphic_allocator::__not_pair	typeref:typename:void
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^      using type = __ull_constant<_Digit<_Base, _Dig>::value>;$/;"	t	struct:std::__parse_int::_Number_help	typeref:typename:__ull_constant<_Digit<_Base,_Dig>::value>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^      using type = __ull_constant<_Pow * __digit::value + __next::type::value>;$/;"	t	struct:std::__parse_int::_Number_help	typeref:typename:__ull_constant<_Pow * __digit::value+__next::type::value>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^      using type = __ull_constant<__valid_digit::value>;$/;"	t	struct:std::__parse_int::_Power_help	typeref:typename:__ull_constant<__valid_digit::value>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@parse_numbers.h	/^      using type$/;"	t	struct:std::__parse_int::_Power_help
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    { using type = _SomeTemplate<_Up, _Types...>; };$/;"	t	struct:std::__replace_first_arg	typeref:typename:_SomeTemplate<_Up,_Types...>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    { using type = _Tp; };$/;"	t	struct:std::__get_first_arg	typeref:typename:_Tp
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    { using type = __undefined; };$/;"	t	struct:std::__get_first_arg	typeref:typename:__undefined
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ptr_traits.h	/^    { using type = typename _Ptr::element_type; };$/;"	t	struct:std::__ptr_traits_elem	typeref:typename:_Ptr::element_type
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@range_access.h	/^      using type = make_signed_t<decltype(__cont.size())>;$/;"	t	function:std::ssize
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@refwrap.h	/^      typedef _Tp type;$/;"	t	class:std::reference_wrapper	typeref:typename:_Tp
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	struct __not_alloc_shared_tag { using type = void; };$/;"	t	struct:std::__shared_count::__not_alloc_shared_tag	typeref:typename:void
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    { using type = _Res(_Args...); };$/;"	t	struct:std::__function_guide_helper
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    { using type = _Res(_Args...); };$/;"	t	struct:std::__function_guide_static_helper
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    { typedef void type; };$/;"	t	struct:std::__has_is_transparent	typeref:typename:void
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	  using type = decltype(std::declval<const _CIter&>().operator->());$/;"	t	struct:std::iterator_traits::__ptr
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^	  using type = void;$/;"	t	struct:std::iterator_traits::__ptr	typeref:typename:void
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      { using type = _Sent; };$/;"	t	struct:std::__detail::__const_sentinel	typeref:typename:_Sent
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      { using type = const_iterator<_Sent>; };$/;"	t	struct:std::__detail::__const_sentinel	typeref:typename:const_iterator<_Sent>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    { using type = basic_const_iterator<common_type_t<_Tp, _Up>>; };$/;"	t	struct:std::common_type	typeref:typename:basic_const_iterator<common_type_t<_Tp,_Up>>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    using type = pair<common_reference_t<_TQual<_T1>, _UQual<_U1>>,$/;"	t	struct:std::basic_common_reference	typeref:typename:pair<common_reference_t<_TQual<_T1>,_UQual<_U1>>,common_reference_t<_TQual<_T2>,_UQual<_U2>>>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    { typedef _Tp1 type; };$/;"	t	struct:std::tuple_element	typeref:typename:_Tp1
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^    { typedef _Tp2 type; };$/;"	t	struct:std::tuple_element	typeref:typename:_Tp2
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_pair.h	/^  { using type = pair<common_type_t<_T1, _U1>, common_type_t<_T2, _U2>>; };$/;"	t	struct:std::common_type	typeref:typename:pair<common_type_t<_T1,_U1>,common_type_t<_T2,_U2>>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	  using type = _Up*;$/;"	t	struct:std::__uniq_ptr_impl::_Ptr	typeref:typename:_Up *
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	  using type = typename remove_reference<_Ep>::type::pointer;$/;"	t	struct:std::__uniq_ptr_impl::_Ptr	typeref:typename:remove_reference<_Ep>::type::pointer
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^      using type = const __tuple_element_t<__i, _Tp>;$/;"	t	struct:std::tuple_element	typeref:typename:const __tuple_element_t<__i,_Tp>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^      using type = const volatile __tuple_element_t<__i, _Tp>;$/;"	t	struct:std::tuple_element	typeref:typename:const volatile __tuple_element_t<__i,_Tp>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^      using type = volatile __tuple_element_t<__i, _Tp>;$/;"	t	struct:std::tuple_element	typeref:typename:volatile __tuple_element_t<__i,_Tp>
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    { using type = _Tp0; };$/;"	t	struct:std::_Nth_type	typeref:typename:_Tp0
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    { using type = _Tp1; };$/;"	t	struct:std::_Nth_type	typeref:typename:_Tp1
type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^    { using type = _Tp2; };$/;"	t	struct:std::_Nth_type	typeref:typename:_Tp2
type	include/sak/parser/token.hpp	/^	const string	type;$/;"	m	class:sak::parser::token	typeref:typename:const string
type	include/sak/stream/serial_data.hpp	/^	const string type;$/;"	m	class:sak::stream::serial_data	typeref:typename:const string
u16streampos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^  typedef fpos<mbstate_t> u16streampos;$/;"	t	namespace:std	typeref:typename:fpos<mbstate_t>
u16string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stringfwd.h	/^  typedef basic_string<char16_t> u16string; $/;"	t	namespace:std	typeref:typename:basic_string<char16_t>
u32streampos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^  typedef fpos<mbstate_t> u32streampos;$/;"	t	namespace:std	typeref:typename:fpos<mbstate_t>
u32string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stringfwd.h	/^  typedef basic_string<char32_t> u32string; $/;"	t	namespace:std	typeref:typename:basic_string<char32_t>
u8streampos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^  typedef fpos<mbstate_t> u8streampos;$/;"	t	namespace:std	typeref:typename:fpos<mbstate_t>
u8string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stringfwd.h	/^  typedef basic_string<char8_t> u8string;$/;"	t	namespace:std	typeref:typename:basic_string<char8_t>
u_char	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __u_char u_char;$/;"	t	typeref:typename:__u_char
u_int	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __u_int u_int;$/;"	t	typeref:typename:__u_int
u_int16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __uint16_t u_int16_t;$/;"	t	typeref:typename:__uint16_t
u_int32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __uint32_t u_int32_t;$/;"	t	typeref:typename:__uint32_t
u_int64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __uint64_t u_int64_t;$/;"	t	typeref:typename:__uint64_t
u_int8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __uint8_t u_int8_t;$/;"	t	typeref:typename:__uint8_t
u_long	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __u_long u_long;$/;"	t	typeref:typename:__u_long
u_quad_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __u_quad_t u_quad_t;$/;"	t	typeref:typename:__u_quad_t
u_short	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __u_short u_short;$/;"	t	typeref:typename:__u_short
udpate	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@debug@instance_counter@local_instance_counter@local_instance_counter.c++	/^void local_instance_counter::udpate( const void* const target, const type_info& info )$/;"	f	class:local_instance_counter	typeref:typename:void
udpate	source/sak/debug/instance_counter/local_instance_counter/local_instance_counter.c++	/^void local_instance_counter::udpate( const void* const target, const type_info& info )$/;"	f	class:local_instance_counter	typeref:typename:void
uid_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __uid_t uid_t;$/;"	t	typeref:typename:__uid_t
uint	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef unsigned int uint;$/;"	t	typeref:typename:unsigned int
uint16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@stdint-uintn.h	/^typedef __uint16_t uint16_t;$/;"	t	typeref:typename:__uint16_t
uint16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __UINT16_TYPE__ uint16_t;$/;"	t	typeref:typename:__UINT16_TYPE__
uint24_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __UINT24_TYPE__ uint24_t;$/;"	t	typeref:typename:__UINT24_TYPE__
uint32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@stdint-uintn.h	/^typedef __uint32_t uint32_t;$/;"	t	typeref:typename:__uint32_t
uint32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __UINT32_TYPE__ uint32_t;$/;"	t	typeref:typename:__UINT32_TYPE__
uint40_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __UINT40_TYPE__ uint40_t;$/;"	t	typeref:typename:__UINT40_TYPE__
uint48_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __UINT48_TYPE__ uint48_t;$/;"	t	typeref:typename:__UINT48_TYPE__
uint56_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __UINT56_TYPE__ uint56_t;$/;"	t	typeref:typename:__UINT56_TYPE__
uint64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@stdint-uintn.h	/^typedef __uint64_t uint64_t;$/;"	t	typeref:typename:__uint64_t
uint64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __UINT64_TYPE__ uint64_t;$/;"	t	typeref:typename:__UINT64_TYPE__
uint8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@stdint-uintn.h	/^typedef __uint8_t uint8_t;$/;"	t	typeref:typename:__uint8_t
uint8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __UINT8_TYPE__ uint8_t;$/;"	t	typeref:typename:__UINT8_TYPE__
uint_fast16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef unsigned int		uint_fast16_t;$/;"	t	typeref:typename:unsigned int
uint_fast16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef unsigned long int	uint_fast16_t;$/;"	t	typeref:typename:unsigned long int
uint_fast16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __uint_least16_t uint_fast16_t;$/;"	t	typeref:typename:__uint_least16_t
uint_fast24_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef uint24_t uint_fast24_t;$/;"	t	typeref:typename:uint24_t
uint_fast32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef unsigned int		uint_fast32_t;$/;"	t	typeref:typename:unsigned int
uint_fast32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef unsigned long int	uint_fast32_t;$/;"	t	typeref:typename:unsigned long int
uint_fast32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __uint_least32_t uint_fast32_t;$/;"	t	typeref:typename:__uint_least32_t
uint_fast40_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef uint40_t uint_fast40_t;$/;"	t	typeref:typename:uint40_t
uint_fast48_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef uint48_t uint_fast48_t;$/;"	t	typeref:typename:uint48_t
uint_fast56_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef uint56_t uint_fast56_t;$/;"	t	typeref:typename:uint56_t
uint_fast64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef unsigned long int	uint_fast64_t;$/;"	t	typeref:typename:unsigned long int
uint_fast64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef unsigned long long int	uint_fast64_t;$/;"	t	typeref:typename:unsigned long long int
uint_fast64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __uint_least64_t uint_fast64_t;$/;"	t	typeref:typename:__uint_least64_t
uint_fast8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef unsigned char		uint_fast8_t;$/;"	t	typeref:typename:unsigned char
uint_fast8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __uint_least8_t uint_fast8_t;$/;"	t	typeref:typename:__uint_least8_t
uint_least16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef __uint_least16_t uint_least16_t;$/;"	t	typeref:typename:__uint_least16_t
uint_least16_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __uint_least16_t uint_least16_t;$/;"	t	typeref:typename:__uint_least16_t
uint_least24_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef uint24_t uint_least24_t;$/;"	t	typeref:typename:uint24_t
uint_least32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef __uint_least32_t uint_least32_t;$/;"	t	typeref:typename:__uint_least32_t
uint_least32_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __uint_least32_t uint_least32_t;$/;"	t	typeref:typename:__uint_least32_t
uint_least40_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef uint40_t uint_least40_t;$/;"	t	typeref:typename:uint40_t
uint_least48_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef uint48_t uint_least48_t;$/;"	t	typeref:typename:uint48_t
uint_least56_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef uint56_t uint_least56_t;$/;"	t	typeref:typename:uint56_t
uint_least64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef __uint_least64_t uint_least64_t;$/;"	t	typeref:typename:__uint_least64_t
uint_least64_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __uint_least64_t uint_least64_t;$/;"	t	typeref:typename:__uint_least64_t
uint_least8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef __uint_least8_t uint_least8_t;$/;"	t	typeref:typename:__uint_least8_t
uint_least8_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __uint_least8_t uint_least8_t;$/;"	t	typeref:typename:__uint_least8_t
uintmax_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef __uintmax_t		uintmax_t;$/;"	t	typeref:typename:__uintmax_t
uintmax_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __UINTMAX_TYPE__ uintmax_t;$/;"	t	typeref:typename:__UINTMAX_TYPE__
uintptr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef unsigned int		uintptr_t;$/;"	t	typeref:typename:unsigned int
uintptr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdint.h	/^typedef unsigned long int	uintptr_t;$/;"	t	typeref:typename:unsigned long int
uintptr_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdint.h	/^typedef __UINTPTR_TYPE__ uintptr_t;$/;"	t	typeref:typename:__UINTPTR_TYPE__
ulong	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef unsigned long int ulong;$/;"	t	typeref:typename:unsigned long int
unary_function	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    struct unary_function$/;"	s	namespace:std
unary_negate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^      unary_negate(const _Predicate& __x) : _M_pred(__x) { }$/;"	f	class:std::unary_negate	typeref:typename:_GLIBCXX14_CONSTEXPR
unary_negate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_function.h	/^    class _GLIBCXX17_DEPRECATED unary_negate$/;"	c	namespace:std
underflow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      underflow()$/;"	f	class:std::wbuffer_convert	typeref:typename:_Wide_streambuf::int_type
uniform_int_distribution	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      uniform_int_distribution() : uniform_int_distribution(0) { }$/;"	f	class:std::uniform_int_distribution
uniform_int_distribution	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      uniform_int_distribution(_IntType __a,$/;"	f	class:std::uniform_int_distribution
uniform_int_distribution	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^      uniform_int_distribution(const param_type& __p)$/;"	f	class:std::uniform_int_distribution
uniform_int_distribution	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uniform_int_dist.h	/^    class uniform_int_distribution$/;"	c	namespace:std
uninitialized_construct_using_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator_args.h	/^    uninitialized_construct_using_allocator(_Tp* __p, const _Alloc& __a,$/;"	f	namespace:std	typeref:typename:_Tp *
uninitialized_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    uninitialized_copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_ForwardIterator
uninitialized_copy_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    uninitialized_copy_n(_InputIterator __first, _Size __n,$/;"	f	namespace:std	typeref:typename:_ForwardIterator
uninitialized_default_construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    uninitialized_default_construct(_ForwardIterator __first,$/;"	f	namespace:std	typeref:typename:void
uninitialized_default_construct_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    uninitialized_default_construct_n(_ForwardIterator __first, _Size __count)$/;"	f	namespace:std	typeref:typename:_ForwardIterator
uninitialized_fill	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:void
uninitialized_fill_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)$/;"	f	namespace:std	typeref:typename:_ForwardIterator
uninitialized_move	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    uninitialized_move(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_ForwardIterator
uninitialized_move_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    uninitialized_move_n(_InputIterator __first, _Size __count,$/;"	f	namespace:std	typeref:typename:pair<_InputIterator,_ForwardIterator>
uninitialized_value_construct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    uninitialized_value_construct(_ForwardIterator __first,$/;"	f	namespace:std	typeref:typename:void
uninitialized_value_construct_n	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_uninitialized.h	/^    uninitialized_value_construct_n(_ForwardIterator __first, _Size __count)$/;"	f	namespace:std	typeref:typename:_ForwardIterator
unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      unique() const noexcept$/;"	f	class:std::__shared_ptr	typeref:typename:bool
unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    unique(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
unique	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    unique(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
unique_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _OutputIterator
unique_default_derived	include/sak/pattern/default_derived.hpp	/^unique_ptr< _T1 > unique_default_derived( _TYPE_ARGS... args )$/;"	f	namespace:sak::pattern	typeref:typename:requires::std::is_base_of<_T1,_T2>::value unique_ptr<_T1>
unique_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^    unique_ptr<_Tp, _Dp>::unique_ptr(auto_ptr<_Up>&& __u) noexcept$/;"	f	class:std::unique_ptr
unique_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	constexpr unique_ptr() noexcept$/;"	f	class:std::unique_ptr
unique_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	constexpr unique_ptr(nullptr_t) noexcept$/;"	f	class:std::unique_ptr
unique_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	unique_ptr(_Up __p) noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR
unique_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	unique_ptr(_Up __p, const deleter_type& __d) noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR
unique_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	unique_ptr(_Up __p,$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR
unique_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	unique_ptr(pointer __p) noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR
unique_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	unique_ptr(pointer __p, const deleter_type& __d) noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR
unique_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	unique_ptr(pointer __p,$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR
unique_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^	unique_ptr(unique_ptr<_Up, _Ep>&& __u) noexcept$/;"	f	class:std::unique_ptr	typeref:typename:_GLIBCXX23_CONSTEXPR
unique_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    class unique_ptr$/;"	c	namespace:std
unique_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^    class unique_ptr<_Tp[], _Dp>$/;"	c	namespace:std
unit_price	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^	float unit_price;$/;"	m	class:Fruit	typeref:typename:float	file:
unit_price	tests/sak/parser/test_serial_data.c++	/^	float unit_price;$/;"	m	class:Fruit	typeref:typename:float	file:
unitbuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags unitbuf =     _S_unitbuf;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
unitbuf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  unitbuf(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
unlock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^	unlock(memory_order __o) const noexcept$/;"	f	struct:std::_Sp_atomic::_Atomic_count	typeref:typename:void
unlock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    void unlock()$/;"	f	class:__gnu_cxx::__mutex	typeref:typename:void
unlock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    void unlock()$/;"	f	class:__gnu_cxx::__recursive_mutex	typeref:typename:void
unseq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^_GLIBCXX17_INLINE constexpr unsequenced_policy unseq{};$/;"	v	namespace:__pstl::execution::v1	typeref:typename:_GLIBCXX17_INLINE unsequenced_policy
unsequenced_policy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^class unsequenced_policy$/;"	c	namespace:__pstl::execution::v1
unsetf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    unsetf(fmtflags __mask)$/;"	f	class:std::ios_base	typeref:typename:void
unshift	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      unshift(state_type& __state, extern_type* __to, extern_type* __to_end,$/;"	f	class:std::__codecvt_abstract_base	typeref:typename:result
upper	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_base.h	/^    static const mask upper    	= _ISupper;$/;"	m	struct:std::ctype_base	typeref:typename:const mask
upper_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_algo.h	/^    upper_bound(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std	typeref:typename:_GLIBCXX20_CONSTEXPR _ForwardIterator
upper_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	upper_bound(const _Kt& __x) const$/;"	f	class:std::map	typeref:typename:decltype(const_iterator (_M_t._M_upper_bound_tr (__x)))
upper_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	upper_bound(const _Kt& __x)$/;"	f	class:std::map	typeref:typename:decltype(iterator (_M_t._M_upper_bound_tr (__x)))
upper_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      upper_bound(const key_type& __x) const$/;"	f	class:std::map	typeref:typename:const_iterator
upper_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      upper_bound(const key_type& __x)$/;"	f	class:std::map	typeref:typename:iterator
upper_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      upper_bound(const key_type& __k) const$/;"	f	class:std::_Rb_tree	typeref:typename:const_iterator
upper_bound	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      upper_bound(const key_type& __k)$/;"	f	class:std::_Rb_tree	typeref:typename:iterator
uppercase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    static const fmtflags uppercase =   _S_uppercase;$/;"	m	class:std::ios_base	typeref:typename:const fmtflags
uppercase	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^  uppercase(ios_base& __base)$/;"	f	namespace:std	typeref:typename:ios_base &
use_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      use_count() const noexcept$/;"	f	class:std::__shared_ptr	typeref:typename:long
use_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      use_count() const noexcept$/;"	f	class:std::__weak_ptr	typeref:typename:long
useconds_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef __useconds_t useconds_t;$/;"	t	typeref:typename:__useconds_t
user_messages	include/sak/debug/test_handler/netbeans_cpp_simple_test.hpp	/^		} user_messages;$/;"	m	class:sak::debug::test_handler::netbeans_cpp_simple_test::output_texts	typeref:struct:sak::debug::test_handler::netbeans_cpp_simple_test::output_texts::__anon4fbc4f980108
uses_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^    struct uses_allocator<stack<_Tp, _Seq>, _Alloc>$/;"	s	namespace:std
uses_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    struct uses_allocator$/;"	s	namespace:std
uses_allocator_construction_args	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator_args.h	/^    uses_allocator_construction_args(const _Alloc& __a) noexcept$/;"	f	namespace:std	typeref:typename:auto
uses_allocator_construction_args	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator_args.h	/^    uses_allocator_construction_args(const _Alloc& __a, _Up&& __u, _Vp&& __v)$/;"	f	namespace:std	typeref:typename:auto
uses_allocator_construction_args	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator_args.h	/^    uses_allocator_construction_args(const _Alloc& __a, piecewise_construct_t,$/;"	f	namespace:std	typeref:typename:auto
uses_allocator_construction_args	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator_args.h	/^    uses_allocator_construction_args(const _Alloc& __a,$/;"	f	namespace:std	typeref:typename:auto
uses_allocator_v	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@uses_allocator.h	/^    inline constexpr bool uses_allocator_v =$/;"	v	namespace:std	typeref:typename:bool
ushort	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@sys@types.h	/^typedef unsigned short int ushort;$/;"	t	typeref:typename:unsigned short int
v1	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@pstl@execution_defs.h	/^inline namespace v1$/;"	n	namespace:__pstl::execution
va_arg	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdarg.h	/^#define va_arg(ap, type)    __builtin_va_arg(/;"	d
va_copy	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdarg.h	/^#define va_copy(dest, src)  __builtin_va_copy(/;"	d
va_end	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdarg.h	/^#define va_end(ap)          __builtin_va_end(/;"	d
va_list	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^typedef __gnuc_va_list va_list;$/;"	t	typeref:typename:__gnuc_va_list
va_list	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^typedef __gnuc_va_list va_list;$/;"	t	typeref:typename:__gnuc_va_list
va_list	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t	typeref:typename:__builtin_va_list
va_start	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdarg.h	/^#define va_start(ap, ...) __builtin_va_start(/;"	d
va_start	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stdarg.h	/^#define va_start(ap, param) __builtin_va_start(/;"	d
validate	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@debug@test_handler@netbeans_cpp_simple_test.c++	/^void netbeans_cpp_simple_test::validate( bool result, const string& message )$/;"	f	class:netbeans_cpp_simple_test	typeref:typename:void
validate	include/sak/debug/test_handler/test_handler.hpp	/^	inline	void validate( const string& message, bool result ){ validate( result, message ); };$/;"	f	class:sak::debug::test_handler::test_interface	typeref:typename:void
validate	source/sak/debug/test_handler/netbeans_cpp_simple_test.c++	/^void netbeans_cpp_simple_test::validate( bool result, const string& message )$/;"	f	class:netbeans_cpp_simple_test	typeref:typename:void
value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^      typename _Operation::first_argument_type value;$/;"	m	class:std::binder1st	typeref:typename:_Operation::first_argument_type
value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@binders.h	/^      typename _Operation::second_argument_type value;$/;"	m	class:std::binder2nd	typeref:typename:_Operation::second_argument_type
value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	enum:std::money_base::part
value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      value() const noexcept$/;"	f	class:std::_Node_handle	typeref:typename:value_type &
value	include/sak/parser/token.hpp	/^	const string value;$/;"	m	class:sak::parser::token	typeref:typename:const string
value	include/sak/stream/serial_data.hpp	/^	const string value;$/;"	m	class:sak::stream::serial_data	typeref:typename:const string
value	include/sak/string.hpp	/^	string value;$/;"	m	class:sak::from_string	typeref:typename:string
value_comp	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      value_comp() const$/;"	f	class:std::map	typeref:typename:value_compare
value_compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^	value_compare(_Compare __c)$/;"	f	class:std::map::value_compare
value_compare	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      class value_compare$/;"	c	class:std::map
value_too_large	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      value_too_large = 			EOVERFLOW,$/;"	e	enum:std::errc
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      typedef typename _Alloc::value_type value_type;$/;"	t	struct:std::allocator_traits	typeref:typename:_Alloc::value_type
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      typename _Alloc::value_type;$/;"	m	class:std::_Alloc	typeref:meta:typename
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using value_type = _Tp;$/;"	t	struct:std::allocator_traits	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using value_type = void;$/;"	t	struct:std::allocator_traits	typeref:typename:void
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocated_ptr.h	/^      using value_type = typename allocator_traits<_Alloc>::value_type;$/;"	t	struct:std::__allocated_ptr	typeref:typename:allocator_traits<_Alloc>::value_type
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      typedef _Tp        value_type;$/;"	t	class:std::allocator	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      typedef _Tp value_type;$/;"	t	class:std::allocator	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      typedef void        value_type;$/;"	t	class:std::allocator	typeref:typename:void
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      using value_type = _Fp;$/;"	t	struct:std::__atomic_float	typeref:typename:_Fp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      using value_type = _Fp;$/;"	t	struct:std::__atomic_ref	typeref:typename:_Fp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      using value_type = _ITp;$/;"	t	struct:std::__atomic_base	typeref:typename:_ITp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      using value_type = _Tp*;$/;"	t	struct:std::__atomic_ref	typeref:typename:_Tp *
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      using value_type = _Tp;$/;"	t	struct:std::__atomic_ref	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      typedef typename _Traits::char_type		value_type;$/;"	t	class:std::basic_string	typeref:typename:_Traits::char_type
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      using value_type = _Tp;$/;"	t	class:std::pmr::polymorphic_allocator	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      using value_type = _Tp;$/;"	t	struct:std::allocator_traits	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      typedef _Tp        value_type;$/;"	t	class:std::__new_allocator	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      using value_type = _Value;$/;"	t	class:std::_Node_handle	typeref:typename:_Value
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef _Ch_type				  value_type;$/;"	t	class:std::basic_regex	typeref:typename:_Ch_type
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef match_results<_Bi_iter>	    value_type;$/;"	t	class:std::regex_iterator	typeref:typename:match_results<_Bi_iter>
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef sub_match<_Bi_iter>			   value_type;$/;"	t	class:std::match_results	typeref:typename:sub_match<_Bi_iter>
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef sub_match<_Bi_iter>		value_type;$/;"	t	class:std::regex_token_iterator	typeref:typename:sub_match<_Bi_iter>
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      typedef typename __iter_traits::value_type      	value_type;$/;"	t	class:std::sub_match	typeref:typename:__iter_traits::value_type
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      using value_type = _Tp;$/;"	t	class:std::_Sp_atomic	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      using value_type = shared_ptr<_Tp>;$/;"	t	class:std::atomic	typeref:typename:shared_ptr<_Tp>
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      using value_type = weak_ptr<_Tp>;$/;"	t	class:std::atomic	typeref:typename:weak_ptr<_Tp>
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^		using value_type = _Up;$/;"	t	struct:std::_Sp_counted_array_base::_M_init::_Iter	typeref:typename:_Up
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      typedef bool					value_type;$/;"	t	class:std::vector	typeref:typename:bool
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef _Tp					value_type;$/;"	t	class:std::deque	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      typedef _Tp				value_type;$/;"	t	struct:std::_Deque_iterator	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef typename __traits_type::value_type  	value_type;$/;"	t	class:__gnu_cxx::__normal_iterator	typeref:typename:__traits_type::value_type
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      typedef typename __traits_type::value_type  	value_type;$/;"	t	class:std::move_iterator	typeref:typename:__traits_type::value_type
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using value_type = iter_value_t<_It>;$/;"	t	struct:std::iterator_traits	typeref:typename:iter_value_t<_It>
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using value_type = iter_value_t<_Iterator>;$/;"	t	class:std::move_iterator	typeref:typename:iter_value_t<_Iterator>
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      using value_type = iter_value_t<_Iterator>;$/;"	t	class:std::reverse_iterator	typeref:typename:iter_value_t<_Iterator>
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^      { using value_type = iter_value_t<_It>; };$/;"	t	struct:std::__detail::__counted_iter_value_type	typeref:typename:iter_value_t<_It>
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    using value_type = iter_value_t<_It>;$/;"	t	class:std::basic_const_iterator	typeref:typename:iter_value_t<_It>
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef _Tp                         value_type;$/;"	t	struct:std::iterator_traits	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef _Tp        value_type;$/;"	t	struct:std::iterator	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef typename _Iterator::value_type        value_type;$/;"	t	struct:std::__iterator_traits	typeref:typename:_Iterator::value_type
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      typedef typename _Iterator::value_type        value_type;$/;"	t	struct:std::iterator_traits	typeref:typename:_Iterator::value_type
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator_base_types.h	/^      using value_type	      = remove_cv_t<_Tp>;$/;"	t	struct:std::iterator_traits	typeref:typename:remove_cv_t<_Tp>
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_map.h	/^      typedef std::pair<const _Key, _Tp>		value_type;$/;"	t	class:std::map	typeref:typename:std::pair<const _Key,_Tp>
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_stack.h	/^      typedef typename _Sequence::value_type		value_type;$/;"	t	class:std::stack	typeref:typename:_Sequence::value_type
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^      typedef _Tp         value_type;$/;"	t	class:std::_Temporary_buffer	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Tp	 value_type;$/;"	t	struct:std::_Rb_tree_const_iterator	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Tp  value_type;$/;"	t	struct:std::_Rb_tree_iterator	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      typedef _Val 				value_type;$/;"	t	class:std::_Rb_tree	typeref:typename:_Val
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      typedef _Tp					value_type;$/;"	t	class:std::vector	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@utility.h	/^      typedef _Tp value_type;$/;"	t	struct:std::integer_sequence	typeref:typename:_Tp
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    typedef typename _Alloc::value_type             value_type;$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:_Alloc::value_type
value_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@alloc_traits.h	/^    typedef typename _Base_type::value_type         value_type;$/;"	t	struct:__gnu_cxx::__alloc_traits	typeref:typename:_Base_type::value_type
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	vector(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^	vector(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      vector(const allocator_type& __a)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      vector(const vector& __x)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      vector(const vector& __x, const __type_identity_t<allocator_type>& __a)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      vector(initializer_list<bool> __l,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      vector(size_type __n, const allocator_type& __a = allocator_type())$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      vector(size_type __n, const bool& __value,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      vector(vector&& __x, const __type_identity_t<allocator_type>& __a)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      vector(vector&& __x, const allocator_type& __a, false_type)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      vector(vector&& __x, const allocator_type& __a, true_type) noexcept$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^    class vector<bool, _Alloc> : protected _Bvector_base<_Alloc>$/;"	c	namespace:std
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	vector(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	vector(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      vector(const vector& __x)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      vector(const vector& __x, const __type_identity_t<allocator_type>& __a)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      vector(initializer_list<value_type> __l,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      vector(size_type __n, const allocator_type& __a = allocator_type())$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      vector(size_type __n, const value_type& __value = value_type(),$/;"	f	class:std::vector
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      vector(size_type __n, const value_type& __value,$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      vector(vector&& __rv, const __type_identity_t<allocator_type>& __m)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      vector(vector&& __rv, const allocator_type& __m, false_type)$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      vector(vector&& __rv, const allocator_type& __m, true_type) noexcept$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^    class vector : protected _Vector_base<_Tp, _Alloc>$/;"	c	namespace:std
vfscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#    define vfscanf __isoc23_vfscanf$/;"	d
vfscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#    define vfscanf __isoc99_vfscanf$/;"	d
vfwscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#    define vfwscanf __isoc23_vfwscanf$/;"	d
vfwscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#    define vfwscanf __isoc99_vfwscanf$/;"	d
void_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using void_pointer = typename _Ptr<__v_pointer, void>::type;$/;"	t	struct:std::allocator_traits	typeref:typename:_Ptr<__v_pointer,void>::type
void_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@alloc_traits.h	/^      using void_pointer = void*;$/;"	t	struct:std::allocator_traits	typeref:typename:void *
void_pointer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@memory_resource.h	/^      using void_pointer = void*;$/;"	t	struct:std::allocator_traits	typeref:typename:void *
vscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#    define vscanf __isoc23_vscanf$/;"	d
vscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#    define vscanf __isoc99_vscanf$/;"	d
vsscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#    define vsscanf __isoc23_vsscanf$/;"	d
vsscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@stdio.h	/^#    define vsscanf __isoc99_vsscanf$/;"	d
vswscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#    define vswscanf __isoc23_vswscanf$/;"	d
vswscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#    define vswscanf __isoc99_vswscanf$/;"	d
vwscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#    define vwscanf __isoc23_vwscanf$/;"	d
vwscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#    define vwscanf __isoc99_vwscanf$/;"	d
wait	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      wait(_Fp __old, memory_order __m = memory_order_seq_cst) const noexcept$/;"	f	struct:std::__atomic_float	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
wait	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      wait(_Fp __old, memory_order __m = memory_order_seq_cst) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
wait	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      wait(_Tp __old, memory_order __m = memory_order_seq_cst) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
wait	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      wait(_Tp* __old, memory_order __m = memory_order_seq_cst) const noexcept$/;"	f	struct:std::__atomic_ref	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
wait	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      wait(__int_type __old,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
wait	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      wait(__pointer_type __old,$/;"	f	struct:std::__atomic_base	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
wait	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^      wait(const _Tp* __ptr, _Val<_Tp> __old,$/;"	f	namespace:std::__atomic_impl	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
wait	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@atomic_base.h	/^    wait(bool __old,$/;"	f	struct:std::atomic_flag	typeref:typename:_GLIBCXX_ALWAYS_INLINE void
wait	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      wait(value_type __old, memory_order __o) const noexcept$/;"	f	class:std::_Sp_atomic	typeref:typename:void
wait	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^      wait(value_type __old,$/;"	f	class:std::atomic	typeref:typename:void
wait	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    void wait(__mutex *mutex)$/;"	f	class:__gnu_cxx::__cond	typeref:typename:void
wait_recursive	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    void wait_recursive(__recursive_mutex *mutex)$/;"	f	class:__gnu_cxx::__cond	typeref:typename:void
wbuffer_convert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      wbuffer_convert() : wbuffer_convert(nullptr) { }$/;"	f	class:std::wbuffer_convert
wbuffer_convert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      wbuffer_convert(streambuf* __bytebuf, _Codecvt* __pcvt = new _Codecvt,$/;"	f	class:std::wbuffer_convert
wbuffer_convert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^    class wbuffer_convert : public basic_streambuf<_Elem, _Tr>$/;"	c	namespace:std
wcmatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef match_results<const wchar_t*>		 wcmatch;$/;"	t	namespace:std	typeref:typename:match_results<const wchar_t * >
wcregex_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef regex_iterator<const wchar_t*>		wcregex_iterator;$/;"	t	namespace:std	typeref:typename:regex_iterator<const wchar_t * >
wcregex_token_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef regex_token_iterator<const wchar_t*>		wcregex_token_iterator;$/;"	t	namespace:std	typeref:typename:regex_token_iterator<const wchar_t * >
wcstol	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#  define wcstol __isoc23_wcstol$/;"	d
wcstol_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#   define wcstol_l __isoc23_wcstol_l$/;"	d
wcstoll	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#  define wcstoll __isoc23_wcstoll$/;"	d
wcstoll_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#   define wcstoll_l __isoc23_wcstoll_l$/;"	d
wcstoq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#   define wcstoq /;"	d
wcstoul	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#  define wcstoul __isoc23_wcstoul$/;"	d
wcstoul_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#   define wcstoul_l __isoc23_wcstoul_l$/;"	d
wcstoull	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#  define wcstoull __isoc23_wcstoull$/;"	d
wcstoull_l	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#   define wcstoull_l __isoc23_wcstoull_l$/;"	d
wcstouq	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#   define wcstouq /;"	d
wcsub_match	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef sub_match<const wchar_t*>	  wcsub_match;$/;"	t	namespace:std	typeref:typename:sub_match<const wchar_t * >
wctrans_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wctype.h	/^typedef const __int32_t *wctrans_t;$/;"	t	typeref:typename:const __int32_t *
wctype_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@wctype-wchar.h	/^typedef unsigned long int wctype_t;$/;"	t	typeref:typename:unsigned long int
weak_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      weak_from_this() const noexcept$/;"	f	class:std::enable_shared_from_this	typeref:typename:weak_ptr<const _Tp>
weak_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      weak_from_this() noexcept$/;"	f	class:std::enable_shared_from_this	typeref:typename:weak_ptr<_Tp>
weak_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      weak_from_this() const noexcept$/;"	f	class:std::__enable_shared_from_this	typeref:typename:__weak_ptr<const _Tp,_Lp>
weak_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      weak_from_this() noexcept$/;"	f	class:std::__enable_shared_from_this	typeref:typename:__weak_ptr<_Tp,_Lp>
weak_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	weak_ptr(const shared_ptr<_Yp>& __r) noexcept$/;"	f	class:std::weak_ptr
weak_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	weak_ptr(const weak_ptr<_Yp>& __r) noexcept$/;"	f	class:std::weak_ptr
weak_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^	weak_ptr(weak_ptr<_Yp>&& __r) noexcept$/;"	f	class:std::weak_ptr
weak_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^    class weak_ptr : public __weak_ptr<_Tp>$/;"	c	namespace:std
weak_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      using weak_type = weak_ptr<_Tp>;$/;"	t	class:std::shared_ptr	typeref:typename:weak_ptr<_Tp>
weak_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      using weak_type = __weak_ptr<_Tp, _Lp>;$/;"	t	class:std::__shared_ptr	typeref:typename:__weak_ptr<_Tp,_Lp>
weeks	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    using weeks		= duration<_GLIBCXX_CHRONO_INT64_T, ratio<604800>>;$/;"	t	namespace:std::chrono	typeref:typename:duration<_GLIBCXX_CHRONO_INT64_T,ratio<604800>>
weight	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@sak@parser@test_serial_data.c++	/^	float weight;$/;"	m	class:Weighed	typeref:typename:float	file:
weight	tests/sak/parser/test_serial_data.c++	/^	float weight;$/;"	m	class:Weighed	typeref:typename:float	file:
what	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    what() const throw()$/;"	f	class:__gnu_cxx::__concurrence_broadcast_error	typeref:typename:char const *
what	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    what() const throw()$/;"	f	class:__gnu_cxx::__concurrence_lock_error	typeref:typename:char const *
what	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    what() const throw()$/;"	f	class:__gnu_cxx::__concurrence_unlock_error	typeref:typename:char const *
what	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    what() const throw()$/;"	f	class:__gnu_cxx::__concurrence_wait_error	typeref:typename:char const *
wide_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      typedef basic_string<_Elem, char_traits<_Elem>, _Wide_alloc> wide_string;$/;"	t	class:std::wstring_convert	typeref:typename:basic_string<_Elem,char_traits<_Elem>,_Wide_alloc>
widen	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      widen(char __c) const$/;"	f	class:std::basic_ios	typeref:typename:char_type
widen	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      widen(char __c) const$/;"	f	class:std::__ctype_abstract_base	typeref:typename:char_type
widen	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      widen(char __c) const$/;"	f	class:std::ctype	typeref:typename:char_type
widen	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      widen(const char* __lo, const char* __hi, char_type* __to) const$/;"	f	class:std::__ctype_abstract_base	typeref:typename:const char *
widen	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      widen(const char* __lo, const char* __hi, char_type* __to) const$/;"	f	class:std::ctype	typeref:typename:const char *
width	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    width() const$/;"	f	class:std::ios_base	typeref:typename:streamsize
width	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@ios_base.h	/^    width(streamsize __wide)$/;"	f	class:std::ios_base	typeref:typename:streamsize
wint_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@wint_t.h	/^typedef __WINT_TYPE__ wint_t;$/;"	t	typeref:typename:__WINT_TYPE__
wint_t	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@lib@clang@16@include@stddef.h	/^typedef __WINT_TYPE__ wint_t;$/;"	t	typeref:typename:__WINT_TYPE__
wregex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef basic_regex<wchar_t> wregex;$/;"	t	namespace:std	typeref:typename:basic_regex<wchar_t>
write	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@bits@types@cookie_io_functions_t.h	/^  cookie_write_function_t *write;	\/* Write bytes.  *\/$/;"	m	struct:_IO_cookie_io_functions_t	typeref:typename:cookie_write_function_t *
wrong_protocol_type	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@error_constants.h	/^      wrong_protocol_type = 			EPROTOTYPE$/;"	e	enum:std::errc
wscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#    define wscanf __isoc23_wscanf$/;"	d
wscanf	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@wchar.h	/^#    define wscanf __isoc99_wscanf$/;"	d
wsmatch	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef match_results<wstring::const_iterator> wsmatch;$/;"	t	namespace:std	typeref:typename:match_results<wstring::const_iterator>
wsregex_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef regex_iterator<wstring::const_iterator>	wsregex_iterator;$/;"	t	namespace:std	typeref:typename:regex_iterator<wstring::const_iterator>
wsregex_token_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef regex_token_iterator<wstring::const_iterator> wsregex_token_iterator;$/;"	t	namespace:std	typeref:typename:regex_token_iterator<wstring::const_iterator>
wssub_match	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^  typedef sub_match<wstring::const_iterator> wssub_match;$/;"	t	namespace:std	typeref:typename:sub_match<wstring::const_iterator>
wstreampos	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@postypes.h	/^  typedef fpos<mbstate_t> wstreampos;$/;"	t	namespace:std	typeref:typename:fpos<mbstate_t>
wstring	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stringfwd.h	/^  typedef basic_string<wchar_t> wstring;   $/;"	t	namespace:std	typeref:typename:basic_string<wchar_t>
wstring_convert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      wstring_convert() : _M_cvt(new _Codecvt()) { }$/;"	f	class:std::wstring_convert
wstring_convert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      wstring_convert(_Codecvt* __pcvt) : _M_cvt(__pcvt, "wstring_convert")$/;"	f	class:std::wstring_convert
wstring_convert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      wstring_convert(_Codecvt* __pcvt, state_type __state)$/;"	f	class:std::wstring_convert
wstring_convert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      wstring_convert(const byte_string& __byte_err,$/;"	f	class:std::wstring_convert
wstring_convert	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^    class wstring_convert$/;"	c	namespace:std
xdigit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@ctype_base.h	/^    static const mask xdigit 	= _ISxdigit;$/;"	m	struct:std::ctype_base	typeref:typename:const mask
xsputn	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^      xsputn(const typename _Wide_streambuf::char_type* __s, streamsize __n)$/;"	f	class:std::wbuffer_convert	typeref:typename:streamsize
ydm	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	enum:std::time_base::dateorder
years	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^    using years		= duration<_GLIBCXX_CHRONO_INT64_T, ratio<31556952>>;$/;"	t	namespace:std::chrono	typeref:typename:duration<_GLIBCXX_CHRONO_INT64_T,ratio<31556952>>
yield	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    yield() noexcept$/;"	f	namespace:std::this_thread	typeref:typename:void
ymd	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	enum:std::time_base::dateorder
zero	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	zero() noexcept$/;"	f	class:std::chrono::duration	typeref:typename:duration
zero	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@chrono.h	/^	zero() noexcept$/;"	f	struct:std::chrono::duration_values	typeref:typename:_Rep
~NeedBase	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/tests@adhoc@smart_ptr_polymorphism.c++	/^	virtual ~NeedBase( )$/;"	f	class:NeedBase	file:
~NeedBase	tests/adhoc/smart_ptr_polymorphism.c++	/^	virtual ~NeedBase( )$/;"	f	class:NeedBase	file:
~Streamable	include/sak/stream/streamable.hpp	/^	virtual ~Streamable( ) { };$/;"	f	class:sak::stream::Streamable
~_Atomic_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_atomic.h	/^	~_Atomic_count()$/;"	f	struct:std::_Sp_atomic::_Atomic_count
~_Auto_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	~_Auto_node()$/;"	f	struct:std::_Rb_tree::_Auto_node
~_Bvector_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      ~_Bvector_base()$/;"	f	struct:std::_Bvector_base	typeref:typename:_GLIBCXX20_CONSTEXPR
~_Deque_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^    ~_Deque_base() _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Deque_base
~_Function_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_function.h	/^    ~_Function_base()$/;"	f	class:std::_Function_base
~_Grow	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }$/;"	f	struct:std::_Vector_base::_Vector_impl::_Asan::_Grow	typeref:typename:_GLIBCXX20_CONSTEXPR
~_Guarded_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^	    ~_Guarded_ptr()$/;"	f	struct:std::__shared_count::__shared_count::_Guarded_ptr
~_Node_handle_common	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^      ~_Node_handle_common()$/;"	f	class:std::_Node_handle_common
~_Optional_alloc	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@node_handle.h	/^	~_Optional_alloc() { }$/;"	f	union:std::_Node_handle_common::_Optional_alloc
~_Rb_tree	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^      ~_Rb_tree() _GLIBCXX_NOEXCEPT$/;"	f	class:std::_Rb_tree
~_Reinit	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	      ~_Reinit()$/;"	f	struct:std::_Vector_base::_Vector_impl::_Asan::_Reinit	typeref:typename:_GLIBCXX20_CONSTEXPR
~_Reuse_or_alloc_node	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tree.h	/^	~_Reuse_or_alloc_node()$/;"	f	struct:std::_Rb_tree::_Reuse_or_alloc_node
~_Save_errno	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@string_conversions.h	/^	~_Save_errno() { if (errno == 0) errno = _M_errno; }$/;"	f	struct:__gnu_cxx::__stoa::_Save_errno
~_Scoped_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_conv.h	/^	~_Scoped_ptr() { delete _M_ptr; }$/;"	f	struct:std::__detail::_Scoped_ptr
~_Sp_counted_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      ~_Sp_counted_base() noexcept$/;"	f	class:std::_Sp_counted_base
~_Sp_counted_deleter	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      ~_Sp_counted_deleter() noexcept { }$/;"	f	class:std::_Sp_counted_deleter
~_Sp_counted_ptr_inplace	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      ~_Sp_counted_ptr_inplace() noexcept { }$/;"	f	class:std::_Sp_counted_ptr_inplace
~_State	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_automaton.h	/^      ~_State()$/;"	f	struct:std::__detail::_State
~_State_info	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex_executor.h	/^	  ~_State_info() { delete[] _M_visited_states; }$/;"	f	struct:std::__detail::_Executor::_State_info
~_Storage	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	  _GLIBCXX20_CONSTEXPR ~_Storage() { }$/;"	f	union:std::vector::_Temporary_value::_Storage	typeref:typename:_GLIBCXX20_CONSTEXPR
~_Temporary_buffer	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_tempbuf.h	/^      ~_Temporary_buffer()$/;"	f	class:std::_Temporary_buffer
~_Temporary_value	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^	~_Temporary_value()$/;"	f	struct:std::vector::_Temporary_value	typeref:typename:_GLIBCXX20_CONSTEXPR
~_Vector_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      ~_Vector_base() _GLIBCXX_NOEXCEPT$/;"	f	struct:std::_Vector_base	typeref:typename:_GLIBCXX20_CONSTEXPR
~__allocated_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocated_ptr.h	/^      ~__allocated_ptr()$/;"	f	struct:std::__allocated_ptr
~__codecvt_abstract_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      ~__codecvt_abstract_base() { }$/;"	f	class:std::__codecvt_abstract_base
~__cond	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    ~__cond() $/;"	f	class:__gnu_cxx::__cond
~__ctype_abstract_base	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      ~__ctype_abstract_base() { }$/;"	f	class:std::__ctype_abstract_base
~__enable_shared_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      ~__enable_shared_from_this() { }$/;"	f	class:std::__enable_shared_from_this
~__moneypunct_cache	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    __moneypunct_cache<_CharT, _Intl>::~__moneypunct_cache()$/;"	f	class:std::__moneypunct_cache
~__mutex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    ~__mutex() $/;"	f	class:__gnu_cxx::__mutex
~__new_allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@new_allocator.h	/^      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }$/;"	f	class:std::__new_allocator
~__numpunct_cache	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^    __numpunct_cache<_CharT>::~__numpunct_cache()$/;"	f	class:std::__numpunct_cache
~__pthread_cleanup_class	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@pthread.h	/^  ~__pthread_cleanup_class () { if (__do_it) __cancel_routine (__cancel_arg); }$/;"	f	class:__pthread_cleanup_class
~__recursive_mutex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    ~__recursive_mutex()$/;"	f	class:__gnu_cxx::__recursive_mutex
~__scoped_lock	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@ext@concurrence.h	/^    ~__scoped_lock() throw()$/;"	f	class:__gnu_cxx::__scoped_lock
~__shared_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      ~__shared_count() noexcept$/;"	f	class:std::__shared_count
~__timepunct	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@time_members.h	/^    __timepunct<_CharT>::~__timepunct()$/;"	f	class:std::__timepunct
~__timepunct_cache	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^    __timepunct_cache<_CharT>::~__timepunct_cache()$/;"	f	class:std::__timepunct_cache
~__weak_count	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr_base.h	/^      ~__weak_count() noexcept$/;"	f	class:std::__weak_count
~allocator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@allocator.h	/^      ~allocator() _GLIBCXX_NOTHROW { }$/;"	f	class:std::allocator
~auto_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@backward@auto_ptr.h	/^      ~auto_ptr() { delete _M_ptr; }$/;"	f	class:std::auto_ptr
~basic_ios	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_ios.h	/^      ~basic_ios() { }$/;"	f	class:std::basic_ios
~basic_regex	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@regex.h	/^      ~basic_regex()$/;"	f	class:std::basic_regex
~basic_string	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@basic_string.h	/^      ~basic_string()$/;"	f	class:std::basic_string	typeref:typename:_GLIBCXX20_CONSTEXPR
~codecvt	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      ~codecvt() { }$/;"	f	class:std::codecvt
~codecvt_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@codecvt.h	/^      ~codecvt_byname() { }$/;"	f	class:std::codecvt_byname
~collate	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      ~collate()$/;"	f	class:std::collate
~collate_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_classes.h	/^      ~collate_byname() { }$/;"	f	class:std::collate_byname
~common_iterator	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_iterator.h	/^    ~common_iterator()$/;"	f	class:std::common_iterator
~ctype_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      ~ctype_byname() { }$/;"	f	class:std::ctype_byname
~deque	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_deque.h	/^      ~deque()$/;"	f	class:std::deque
~deserializable	include/sak/stream/deserializable.hpp	/^	virtual ~deserializable( ){ };$/;"	f	class:sak::stream::deserializable
~enable_instance_counter	include/sak/debug/instance_counter/instance_counter.hpp	/^	virtual ~enable_instance_counter( )$/;"	f	class:sak::debug::instance_counter::enable_instance_counter
~enable_shared_from_this	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@shared_ptr.h	/^      ~enable_shared_from_this() { }$/;"	f	class:std::enable_shared_from_this
~exception_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@exception_ptr.h	/^    exception_ptr::~exception_ptr() _GLIBCXX_USE_NOEXCEPT$/;"	f	class:std::__exception_ptr::exception_ptr	typeref:typename:_GLIBCXX_EH_PTR_USED
~from_string	include/sak/string.hpp	/^	virtual ~from_string( ) { };$/;"	f	class:sak::from_string
~item	include/sak/debug/instance_counter/local_instance_counter/local_instance_counter.hpp	/^		virtual ~item( ){ };$/;"	f	class:sak::debug::instance_counter::local_instance_counter::local_instance_counter::item
~local_instance_counter	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@debug@instance_counter@local_instance_counter@local_instance_counter.c++	/^local_instance_counter::~local_instance_counter( )$/;"	f	class:local_instance_counter
~local_instance_counter	source/sak/debug/instance_counter/local_instance_counter/local_instance_counter.c++	/^local_instance_counter::~local_instance_counter( )$/;"	f	class:local_instance_counter
~messages	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@x86_64-pc-linux-gnu@bits@messages_members.h	/^    messages<_CharT>::~messages()$/;"	f	class:std::messages
~messages_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      ~messages_byname()$/;"	f	class:std::messages_byname
~money_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      ~money_get() { }$/;"	f	class:std::money_get
~money_put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      ~money_put() { }$/;"	f	class:std::money_put
~moneypunct_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      ~moneypunct_byname() { }$/;"	f	class:std::moneypunct_byname
~netbeans_cpp_simple_test	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@debug@test_handler@netbeans_cpp_simple_test.c++	/^netbeans_cpp_simple_test::~netbeans_cpp_simple_test( )$/;"	f	class:netbeans_cpp_simple_test
~netbeans_cpp_simple_test	source/sak/debug/test_handler/netbeans_cpp_simple_test.c++	/^netbeans_cpp_simple_test::~netbeans_cpp_simple_test( )$/;"	f	class:netbeans_cpp_simple_test
~num_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      virtual ~num_get() { }$/;"	f	class:std::num_get
~num_put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      ~num_put() { }$/;"	f	class:std::num_put
~numpunct_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets.h	/^      ~numpunct_byname() { }$/;"	f	class:std::numpunct_byname
~serial_data	.ccls-cache/@home@maxwell@google-drive@linux@workspace@c++@utils/source@sak@stream@serial_data.c++	/^serial_data::~serial_data( )$/;"	f	class:serial_data
~serial_data	source/sak/stream/serial_data.c++	/^serial_data::~serial_data( )$/;"	f	class:serial_data
~serializable	include/sak/stream/serializable.hpp	/^	virtual ~serializable( ){ };$/;"	f	class:sak::stream::serializable
~singleton_ptr	include/sak/pattern/singleton_ptr.hpp	/^	virtual ~singleton_ptr( ){ };$/;"	f	class:sak::pattern::singleton_ptr
~thread	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@std_thread.h	/^    ~thread()$/;"	f	class:std::thread
~time_get	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      ~time_get() { }$/;"	f	class:std::time_get
~time_get_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      ~time_get_byname() { }$/;"	f	class:std::time_get_byname
~time_put	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      ~time_put()$/;"	f	class:std::time_put
~time_put_byname	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@locale_facets_nonio.h	/^      ~time_put_byname() { }$/;"	f	class:std::time_put_byname
~token	include/sak/parser/token.hpp	/^	virtual ~token( ) { };$/;"	f	class:sak::parser::token
~unique_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      ~unique_ptr() noexcept$/;"	f	class:std::unique_ptr
~unique_ptr	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@unique_ptr.h	/^      ~unique_ptr()$/;"	f	class:std::unique_ptr
~vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_bvector.h	/^      ~vector() _GLIBCXX_NOEXCEPT { }$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
~vector	.ccls-cache/@@home@maxwell@google-drive@linux@workspace@c++@utils/@usr@include@c++@13.2.1@bits@stl_vector.h	/^      ~vector() _GLIBCXX_NOEXCEPT$/;"	f	class:std::vector	typeref:typename:_GLIBCXX20_CONSTEXPR
